<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yahya的博客</title>
  
  <subtitle>学习笔记</subtitle>
  <link href="https://blog.yahyav2rayssr.top/atom.xml" rel="self"/>
  
  <link href="https://blog.yahyav2rayssr.top/"/>
  <updated>2024-04-14T10:46:14.854Z</updated>
  <id>https://blog.yahyav2rayssr.top/</id>
  
  <author>
    <name>Yahya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>黑苹果装机配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/f0e37cbf/"/>
    <id>https://blog.yahyav2rayssr.top/posts/f0e37cbf/</id>
    <published>2024-04-14T10:46:14.854Z</published>
    <updated>2024-04-14T10:46:14.854Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="电脑配置"><a href="#电脑配置" class="headerlink" title="电脑配置"></a>电脑配置</h2><table><thead><tr><th>类型</th><th>型号</th><th>价格</th><th>渠道</th></tr></thead><tbody><tr><td>网卡</td><td>T919 BCM94360CD（win + mac）</td><td>150</td><td>闲鱼</td></tr><tr><td>网卡</td><td>CF-AX200 PRO（win）</td><td></td><td></td></tr><tr><td>显卡</td><td>蓝宝石 RX 460 4GB 超白金版</td><td>229</td><td>闲鱼</td></tr><tr><td>显卡</td><td>蓝宝石 RX 5700XT 8G 超白金 OC</td><td>800</td><td>闲鱼</td></tr><tr><td>内存条</td><td>镁光 3200 DDR4 32G</td><td>790</td><td>闲鱼</td></tr><tr><td>散热</td><td>雅浚 B3 PRO 4 热管 ARGB 神光同步</td><td>74.01</td><td>闲鱼</td></tr><tr><td>SSD 固态硬盘</td><td>西数 SN570 1T</td><td>350</td><td>闲鱼</td></tr><tr><td>HDD 机械硬盘</td><td>西数 16T HC550 16T</td><td>919</td><td>闲鱼</td></tr><tr><td>主板</td><td>MSI MAG-B560M-MORTAR-WIFI</td><td>580</td><td>闲鱼</td></tr><tr><td>机箱</td><td>爱国者 T9 机箱</td><td>83.6</td><td>闲鱼</td></tr><tr><td>电源</td><td>爱国者 G7 全模组 700W</td><td>238</td><td>闲鱼</td></tr><tr><td>风扇</td><td>爱国者 冰魄彩虹 V1 * 6</td><td>56</td><td>闲鱼</td></tr><tr><td>CPU</td><td>i7-10700</td><td>1091</td><td>淘宝</td></tr><tr><td>螺丝</td><td>风扇铁黑&#x2F;镀镍螺丝</td><td>3.43</td><td>淘宝</td></tr><tr><td>转接线</td><td>pcie1 延长线 10cm</td><td>22.42</td><td>闲鱼</td></tr><tr><td>转接线</td><td>大 4 pin 一分五扩展线</td><td>12.99</td><td>淘宝</td></tr><tr><td>转接线</td><td>大 4 pin 转 6 pin，显卡用</td><td>5.79</td><td>淘宝</td></tr><tr><td>转接线</td><td>单 8 pin 转 双 8 pin，显卡用</td><td>0</td><td>闲鱼</td></tr><tr><td>硅脂</td><td>信越 7921 导热硅脂</td><td>20.90</td><td>淘宝</td></tr><tr><td><strong>合计</strong></td><td></td><td>5217.14</td><td></td></tr></tbody></table><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.bilibili.com/video/BV1Sb411e78a/?spm_id_from=333.337.search-card.all.click&vd_source=1696fd296900bc9f809f262000c4b785">台式装机全程攻略</a></p><p><a href="https://heipg.cn/tutorial/gpu-support-for-hackintosh.html">2022年黑苹果macOS Big Sur&#x2F;Monterey显卡支持列表，持续更新中。</a></p><p><a href="https://heipg.cn/tutorial/wifi-bluetooth-card-for-hackintosh.html">黑苹果无线网卡购买&amp;安装&amp;使用指南2022年版</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;电脑配置&quot;&gt;&lt;a href=&quot;#电脑配置&quot; class=&quot;headerlink&quot; title=&quot;电脑配置&quot;&gt;&lt;/a&gt;电脑配置&lt;/h</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>mac 常用快捷键</title>
    <link href="https://blog.yahyav2rayssr.top/posts/3e8d1a22/"/>
    <id>https://blog.yahyav2rayssr.top/posts/3e8d1a22/</id>
    <published>2024-04-14T10:46:14.852Z</published>
    <updated>2024-04-14T10:46:14.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="任务管理器（强制退出）"><a href="#任务管理器（强制退出）" class="headerlink" title="任务管理器（强制退出）"></a>任务管理器（强制退出）</h2><p>option + command + esc</p><h2 id="快速复制文件或文件夹路径"><a href="#快速复制文件或文件夹路径" class="headerlink" title="快速复制文件或文件夹路径"></a>快速复制文件或文件夹路径</h2><p>macOS 下没有 Windows 那样的地址栏，无法直观的复制文件的链接，有时候为了获取文件或文件夹的路径变成一件很棘手的事情，以下为快速复制路径方法：</p><p>快捷键 option + command + C</p><p>在 Finder 中选择文件或是文件夹，然后按下快捷键 option + command + C，即可复制文件的全路径。</p><h2 id="重命名文件-x2F-文件夹"><a href="#重命名文件-x2F-文件夹" class="headerlink" title="重命名文件 &#x2F; 文件夹"></a>重命名文件 &#x2F; 文件夹</h2><p>选中需要重命名的文件，按下 return 键即可。</p><h2 id="finder-相关"><a href="#finder-相关" class="headerlink" title="finder 相关"></a>finder 相关</h2><h3 id="拷贝当前路径"><a href="#拷贝当前路径" class="headerlink" title="拷贝当前路径"></a>拷贝当前路径</h3><p>option + command + C</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;任务管理器（强制退出）&quot;&gt;&lt;a href=&quot;#任务管理器（强制退出）&quot; class=&quot;headerlink&quot; title=&quot;任务管</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果常见错误</title>
    <link href="https://blog.yahyav2rayssr.top/posts/42c32bc5/"/>
    <id>https://blog.yahyav2rayssr.top/posts/42c32bc5/</id>
    <published>2024-04-14T10:46:14.852Z</published>
    <updated>2024-04-14T10:46:14.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="解决-App-Store-无法登录"><a href="#解决-App-Store-无法登录" class="headerlink" title="解决 App Store 无法登录"></a>解决 App Store 无法登录</h2><p>打开终端，输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nvram -cPassword:nvram: Error clearing firmware variables: (iokit/common) not permitted<br></code></pre></td></tr></table></figure><p>输入用户密码，然后回车，不必理会提示信息，然后重启</p><h2 id="BIOS-未禁用-CFG-LOCK-选项"><a href="#BIOS-未禁用-CFG-LOCK-选项" class="headerlink" title="BIOS 未禁用 CFG LOCK 选项"></a>BIOS 未禁用 CFG LOCK 选项</h2><p>相关错误信息：</p><ul><li><strong>卡在 <code>[EB|#LOG:EXITBS:START]</code></strong></li></ul><p>某些用户会忘记或无法禁用BIOS中的CFG-Lock(特别是与用于电源管理的锁定0xE2 MSR位有关，显然更安全地关闭CFG-Lock)。请注意，这仅适用于Intel用户，不适用于AMD。发生这种情况时，有几个可能的解决方法：</p><p>开<code>OpenCore</code>的配置文件<code>config.plist</code>，勾选如下三个选项：</p><ul><li><code>Kernel</code> -&gt; <code>Quirks</code><ul><li><code>AppleCpuPmCfgLock</code></li><li><code>AppleXcpmCfgLock</code></li></ul></li><li><code>UEFI</code> -&gt; <code>Quirks</code><ul><li><code>IgnoreInvalidFlexRatio</code></li></ul></li></ul><img src="/posts/42c32bc5/image-20230319221225660.png" alt="image-20230319221225660" style="zoom:67%;"><img src="/posts/42c32bc5/image-20230319221303369.png" alt="image-20230319221303369" style="zoom:67%;"><h2 id="BIOS-重设或重启-x2F-关机后发送到安全模式"><a href="#BIOS-重设或重启-x2F-关机后发送到安全模式" class="headerlink" title="BIOS 重设或重启 &#x2F; 关机后发送到安全模式"></a>BIOS 重设或重启 &#x2F; 关机后发送到安全模式</h2><p><code>AppleRTC</code> 的问题，很简单的解决方法：</p><ul><li>打开 <code>Config.plist</code> 配置文件：<ul><li><code>Kernel</code> -&gt; <code>Quirks</code> -&gt; <code>DisableRtcChecksum</code></li></ul></li></ul><p><strong>注意</strong>：如果仍然有问题，则需要使用 <code>RTCMemoryFixup.kext</code> 并排除范围。</p><h2 id="开启软件任何来源"><a href="#开启软件任何来源" class="headerlink" title="开启软件任何来源"></a>开启软件任何来源</h2><p>打开终端，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo spctl --master-disable<br></code></pre></td></tr></table></figure><img src="/posts/42c32bc5/image-20240116235004064.png" alt="image-20240116235004064" style="zoom: 50%;"><p>然后就可以看到允许任何来源的选项了，现在可以自由安装三方软件了。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cxyzjd.com/article/weixin_33352924/113086729">Big Sur安装常见问题</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;解决-App-Store-无法登录&quot;&gt;&lt;a href=&quot;#解决-App-Store-无法登录&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>gitkraken 破解</title>
    <link href="https://blog.yahyav2rayssr.top/posts/8aace767/"/>
    <id>https://blog.yahyav2rayssr.top/posts/8aace767/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="1-下载客户端"><a href="#1-下载客户端" class="headerlink" title="1. 下载客户端"></a>1. 下载客户端</h2><ul><li><a href="https://474b.com/file/21384459-442883642">gitkraken windows版本 6.5.1下载地址-1</a></li><li><a href="https://release.axocdn.com/win64/GitKrakenSetup-6.5.0.exe">gitkraken windows版本 6.5.1下载地址-2</a></li><li><a href="https://474b.com/file/21384459-442883514">gitkraken Mac版本 6.5.1下载地址</a></li><li><a href="https://474b.com/file/21384459-442883174">gitkraken linux deb 6.5.1下载地址</a></li></ul><blockquote><p>历史版本下载（改改版本号就行）</p></blockquote><p>Linux-deb : <a href="https://release.axocdn.com/linux/GitKraken-v7.5.1.deb">https://release.axocdn.com/linux/GitKraken-v7.5.1.deb</a></p><p>Linux-rpm : <a href="https://release.axocdn.com/linux/GitKraken-v7.5.1.rpm">https://release.axocdn.com/linux/GitKraken-v7.5.1.rpm</a></p><p>Linux-tar.gz : <a href="https://release.axocdn.com/linux/GitKraken-v7.5.1.tar.gz">https://release.axocdn.com/linux/GitKraken-v7.5.1.tar.gz</a></p><p>Win64 <a href="https://release.axocdn.com/win64/GitKrakenSetup-7.5.1.exe">https://release.axocdn.com/win64/GitKrakenSetup-7.5.1.exe</a></p><p>Mac : <a href="https://release.axocdn.com/darwin/GitKraken-v7.5.1.zip">https://release.axocdn.com/darwin/GitKraken-v7.5.1.zip</a></p><h2 id="2-屏蔽更新host"><a href="#2-屏蔽更新host" class="headerlink" title="2. 屏蔽更新host"></a>2. 屏蔽更新host</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"># gitKraken 更新屏蔽<br><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> release<span class="hljs-selector-class">.gitkraken</span><span class="hljs-selector-class">.com</span><br></code></pre></td></tr></table></figure><h2 id="3-打开gitkraken并登陆"><a href="#3-打开gitkraken并登陆" class="headerlink" title="3. 打开gitkraken并登陆"></a>3. 打开gitkraken并登陆</h2><h2 id="4-下载破解脚本"><a href="#4-下载破解脚本" class="headerlink" title="4. 下载破解脚本"></a>4. 下载破解脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">原仓库git <span class="hljs-built_in">clone</span> https://github.com/5cr1pt/GitCracken.git</span><br>git clone https://gitee.com/pan13640612207/GitKraken.git<br> <br>cd GitCracken/GitCracken<br>rm yarn.lock<br>yarn install<br>yarn build<br><span class="hljs-meta prompt_"># </span><span class="language-bash">windows gitbash</span><br>node dist/bin/gitcracken.js patcher --asar ~/AppData/Local/gitkraken/app-6.5.0/resources/app.asar<br><span class="hljs-meta prompt_"># </span><span class="language-bash">mac</span> <br>node dist/bin/gitcracken.js patcher --asar 你的gitkraken的目录/resources/app.asar<br></code></pre></td></tr></table></figure><h2 id="5-禁用更新"><a href="#5-禁用更新" class="headerlink" title="5. 禁用更新"></a>5. 禁用更新</h2><p>删掉Update.exe, 查找和Gitkraken目录有关的Update.exe(一般在<code>C:\Users\你的用户名\AppData\Local\gitkraken</code>目录下)。</p><hr><p>参考：</p><p><a href="https://github.com/KillWolfVlad/GitKraken-AUR">插件github</a></p><p><a href="https://github.com/5cr1pt/GitCracken/tree/master/GitCracken">破解插件</a></p><p><a href="https://www.v2ex.com/t/645112">才发现 gitkraken 现在要给钱才能打开私有库了</a></p><h2 id="6-其他修改"><a href="#6-其他修改" class="headerlink" title="6. 其他修改"></a>6. 其他修改</h2><p>删除<code>C:/Users/&#123;用户名&#125;/AppData/Local/gitkraken/Update.exe</code></p><p>启动时用同路径 app-7.5.5 下的 gitkraken.exe 来打开</p><p>打开注册表<code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell\GitKraken\command</code></p><p>修改键值为 <code>&quot;C:\Users\&#123;用户名&#125;\AppData\Local\gitkraken\app-7.5.5\gitkraken.exe&quot; --processStart=gitkraken.exe --</code></p><p><code>process-start-args=&quot;-p \&quot;%V\&quot;&quot;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;1-下载客户端&quot;&gt;&lt;a href=&quot;#1-下载客户端&quot; class=&quot;headerlink&quot; title=&quot;1. 下载客户端&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="破解" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%B4%E8%A7%A3/"/>
    
    
    <category term="破解" scheme="https://blog.yahyav2rayssr.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 状态码</title>
    <link href="https://blog.yahyav2rayssr.top/posts/e1434ae1/"/>
    <id>https://blog.yahyav2rayssr.top/posts/e1434ae1/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP-状态码一览"><a href="#HTTP-状态码一览" class="headerlink" title="HTTP 状态码一览"></a>HTTP 状态码一览</h1><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><h3 id="信息：1xx"><a href="#信息：1xx" class="headerlink" title="信息：1xx"></a>信息：1xx</h3><p>代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。</p><table><thead><tr><th>消息：</th><th align="center">描述：</th></tr></thead><tbody><tr><td>100 Continue</td><td align="center">服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求</td></tr><tr><td>101 Switching Protocols</td><td align="center">服务器转换协议，服务器将遵从客户的请求转换到另外一种协议</td></tr><tr><td>102 Processing</td><td align="center">代表处理将被继续执行</td></tr></tbody></table><h3 id="成功：2xx"><a href="#成功：2xx" class="headerlink" title="成功：2xx"></a>成功：2xx</h3><p>代表请求已成功被服务器接收、理解、并接受。</p><table><thead><tr><th>消息：</th><th align="center">描述：</th></tr></thead><tbody><tr><td>200 OK</td><td align="center">请求成功，表示正常状态</td></tr><tr><td>201 Created</td><td align="center">请求被创建完成，同时新的资源被创建立</td></tr><tr><td>202 Accepted</td><td align="center">处理的请求已被接受，但处理未完成</td></tr><tr><td>203 Non-authoritative Information</td><td align="center">服务器已成功处理了请求，但一些应答头可能不正确，因为使用的是文档的拷贝</td></tr><tr><td>204 No Content</td><td align="center">服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息</td></tr><tr><td>205 Reset Content</td><td align="center">服务器成功处理了请求，且没有返回任何内容，返回此状态码的响应要求请求者重置文档视图</td></tr><tr><td>206 Partial Content</td><td align="center">服务器已经成功处理了部分 GET 请求</td></tr><tr><td>207 Multi-Status</td><td align="center">代表之后的消息体将是一个XML消息</td></tr></tbody></table><h3 id="重定向：3xx"><a href="#重定向：3xx" class="headerlink" title="重定向：3xx"></a>重定向：3xx</h3><p>代表需要客户端采取进一步的操作才能完成请求。</p><table><thead><tr><th>消息：</th><th align="center">描述：</th></tr></thead><tbody><tr><td>300 Multiple Choices</td><td align="center">被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向</td></tr><tr><td>301 Moved Permanently</td><td align="center">所请求的资源已经转移至新的url</td></tr><tr><td>302 Move temporarily</td><td align="center">请求的资源临时从不同的 URI响应请求</td></tr><tr><td>303 See Other</td><td align="center">所请求的页面可在别的url下被找到，客户端应当采用 GET 的方式访问那个资源</td></tr><tr><td>304 Not Modified</td><td align="center">服务器告诉客户，原来缓冲的文档还可以继续使用</td></tr><tr><td>305 Use Proxy</td><td align="center">被请求的资源必须通过指定的代理才能被访问</td></tr><tr><td>306 Switch Proxy</td><td align="center">目前已不再使用，但是代码依然被保留</td></tr><tr><td>307 Temporary Redirect</td><td align="center">请求的资源临时从不同的URI 响应请求</td></tr></tbody></table><h3 id="客户端错误：4xx"><a href="#客户端错误：4xx" class="headerlink" title="客户端错误：4xx"></a>客户端错误：4xx</h3><p>代表了客户端看起来可能发生了错误，妨碍了服务器的处理。</p><table><thead><tr><th>消息:</th><th align="center">描述:</th></tr></thead><tbody><tr><td>400 Bad Request</td><td align="center">语义有误，服务器未能理解请求。或请求参数有误</td></tr><tr><td>401 Unauthorized</td><td align="center">被请求的页面需要用户名和密码</td></tr><tr><td>402 Payment Required</td><td align="center">为了将来可能的需求而预留的</td></tr><tr><td>403 Forbidden</td><td align="center">对被请求资源的访问被禁止</td></tr><tr><td>404 Not Found</td><td align="center">服务器无法找到被请求的资源</td></tr><tr><td>405 Method Not Allowed</td><td align="center">请求中指定的方法不被允许</td></tr><tr><td>406 Not Acceptable</td><td align="center">服务器生成的响应无法被客户端所接受</td></tr><tr><td>407 Proxy Authentication Required</td><td align="center">用户必须首先使用代理服务器进行验证，这样请求才会被处理</td></tr><tr><td>408 Request Timeout</td><td align="center">请求超出了服务器的等待时间</td></tr><tr><td>409 Conflict</td><td align="center">和被请求的资源的当前状态之间存在冲突，请求无法完成</td></tr><tr><td>410 Gone</td><td align="center">被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址</td></tr><tr><td>411 Length Required</td><td align="center">“Content-Length” 未被定义。如果无此内容，服务器不会接受请求</td></tr><tr><td>412 Precondition Failed</td><td align="center">请求中的前提条件被服务器评估为失败</td></tr><tr><td>413 Request Entity Too Large</td><td align="center">由于所请求的实体数据太大，服务器不会接受请求</td></tr><tr><td>414 Request-url Too Long</td><td align="center">由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况</td></tr><tr><td>415 Unsupported Media Type</td><td align="center">由于请求中格式类型不被支持，服务器不会接受请求</td></tr><tr><td>416 Requested Range Not Satisfiable</td><td align="center">客户在请求中指定的Range头与当前资源的可用范围不重合</td></tr><tr><td>417 Expectation Failed</td><td align="center">在请求头 Expect 中指定的预期内容无法被服务器满足</td></tr><tr><td>421 too many connections</td><td align="center">当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围</td></tr><tr><td>422 Unprocessable Entity</td><td align="center">请求格式正确，但是由于含有语义错误，无法响应</td></tr><tr><td>423 Locked</td><td align="center">当前资源被锁定</td></tr><tr><td>424 Failed Dependency</td><td align="center">之前的某个请求发生的错误，导致当前请求失败</td></tr><tr><td>425 Unordered Collectiond</td><td align="center"></td></tr><tr><td>449 Retry With</td><td align="center">客户端应当切换到TLS&#x2F;1.0</td></tr><tr><td>425 Unordered Collectiond</td><td align="center">由微软扩展，代表请求应当在执行完适当的操作后进行重试</td></tr><tr><td>451 Unavailable For Legal Reasons</td><td align="center">该请求因法律原因不可用</td></tr><tr><td>499 Client has closed connection</td><td align="center">客户端断开了连接</td></tr></tbody></table><h3 id="服务器错误：5xx，-6xx"><a href="#服务器错误：5xx，-6xx" class="headerlink" title="服务器错误：5xx， 6xx"></a>服务器错误：5xx， 6xx</h3><p>代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理</p><table><thead><tr><th>消息:</th><th align="center">描述:</th></tr></thead><tbody><tr><td>500 Internal Server Error</td><td align="center">请求未完成，服务器遇到不可预知的情况。一般为服务器源码出现问题</td></tr><tr><td>501 Not Implemented</td><td align="center">请求未完成，服务器不支持所请求的功能</td></tr><tr><td>502 Bad Gateway</td><td align="center">请求未完成，网关或者代理工作的服务器尝试执行请求，从上游服务器收到一个无效的响应</td></tr><tr><td>503 Service Unavailable</td><td align="center">请求未完成，服务器临时过载或维护</td></tr><tr><td>504 Gateway Timeout</td><td align="center">网关或者代理工作的服务器尝试执行请求超时</td></tr><tr><td>505 HTTP Version Not Supported</td><td align="center">服务器不支持或拒绝请求中指明的HTTP协议版本</td></tr><tr><td>506 Variant Also Negotiates</td><td align="center">服务器存在内部配置错误</td></tr><tr><td>507 Insufficient Storage</td><td align="center">服务器无法存储完成请求所必须的内容</td></tr><tr><td>509 Bandwidth Limit Exceeded</td><td align="center">服务器达到带宽限制</td></tr><tr><td>510 Not Extended</td><td align="center">获取资源所需要的策略并没有被满足</td></tr><tr><td>600 Unparseable Response Headers</td><td align="center">没有返回响应头部，只返回实体内容</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTTP-状态码一览&quot;&gt;&lt;a href=&quot;#HTTP-状态码一览&quot; class=&quot;headerlink&quot; title=&quot;HTTP 状态码一览&quot;&gt;&lt;/a&gt;HTTP 状态码一览&lt;/h1&gt;&lt;h2 id=&quot;状态&quot;&gt;&lt;a href=&quot;#状态&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="网络通讯" scheme="https://blog.yahyav2rayssr.top/categories/%E7%BD%91%E7%BB%9C%E9%80%9A%E8%AE%AF/"/>
    
    
    <category term="http" scheme="https://blog.yahyav2rayssr.top/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>windows 常用命令</title>
    <link href="https://blog.yahyav2rayssr.top/posts/7101b844/"/>
    <id>https://blog.yahyav2rayssr.top/posts/7101b844/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="转换磁盘"><a href="#转换磁盘" class="headerlink" title="转换磁盘"></a>转换磁盘</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">convert</span> [driver] /<span class="hljs-built_in">fs</span>:ntfs<br></code></pre></td></tr></table></figure><h2 id="查看局域网所有IP"><a href="#查看局域网所有IP" class="headerlink" title="查看局域网所有IP"></a>查看局域网所有IP</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">arp -a<br></code></pre></td></tr></table></figure><h2 id="CMD-临时代理"><a href="#CMD-临时代理" class="headerlink" title="CMD 临时代理"></a>CMD 临时代理</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">set</span> http_proxy=http://<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">1080</span><br><span class="hljs-built_in">set</span> https_proxy=http://<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">1080</span><br></code></pre></td></tr></table></figure><h2 id="设置-IP、DNS、网关"><a href="#设置-IP、DNS、网关" class="headerlink" title="设置 IP、DNS、网关"></a>设置 IP、DNS、网关</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh interface ip <span class="hljs-built_in">set</span> address name=&quot;本地连接&quot; source=static addr=<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">132</span>.<span class="hljs-number">5</span> mask=<span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">0</span><br>netsh interface ip <span class="hljs-built_in">set</span> address name=&quot;本地连接&quot; gateway=<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">132</span>.<span class="hljs-number">1</span> gwmetric=<span class="hljs-number">0</span><br>netsh interface ip <span class="hljs-built_in">set</span> dns name=&quot;本地连接&quot; source=static addr=<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">132</span>.<span class="hljs-number">1</span> register=PRIMARY<br>netsh interface ip <span class="hljs-built_in">set</span> wins name=&quot;本地连接&quot; source=static addr=none<br></code></pre></td></tr></table></figure><h2 id="查看-IP、DNS、网关"><a href="#查看-IP、DNS、网关" class="headerlink" title="查看 IP、DNS、网关"></a>查看 IP、DNS、网关</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh interface ip show address<br></code></pre></td></tr></table></figure><h2 id="清除-DNS-缓存"><a href="#清除-DNS-缓存" class="headerlink" title="清除 DNS 缓存"></a>清除 DNS 缓存</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">ipconfig</span> /flushdns<br></code></pre></td></tr></table></figure><h2 id="重置-WINSOCK-和-IP-堆栈"><a href="#重置-WINSOCK-和-IP-堆栈" class="headerlink" title="重置 WINSOCK 和 IP 堆栈"></a>重置 WINSOCK 和 IP 堆栈</h2><p>重置WINSOCK条目</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh winsock reset catalog<br></code></pre></td></tr></table></figure><p>重置IPv4 TCP &#x2F; IP堆栈</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh int ipv4 reset reset.log<br></code></pre></td></tr></table></figure><p>重置IPv6 TCP &#x2F; IP堆栈</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">netsh int ipv6 reset reset.log<br></code></pre></td></tr></table></figure><h2 id="tasklist"><a href="#tasklist" class="headerlink" title="tasklist"></a>tasklist</h2><blockquote><p>&#x2F;S     system           指定连接到的远程系统。  </p><p>&#x2F;U     [domain]user    指定使用哪个用户执行这个命令。  </p><p>&#x2F;P     [password]       为指定的用户指定密码。  </p><p>&#x2F;M     [module]         列出调用指定的 DLL 模块的所有进程。如果没有指定模块名，显示每个进程加载的所有模块。  </p><p>&#x2F;SVC                   显示每个进程中的服务。  </p><p>&#x2F;V                      指定要显示详述信息。  </p><p>&#x2F;FI    filter           显示一系列符合筛选器指定的进程。  </p><p>&#x2F;FO    format           指定输出格式，有效值: “TABLE”、”LIST”、”CSV”。  </p><p>&#x2F;NH                     指定栏标头不应该在输出中显示。只对 “TABLE” 和 “CSV” 格式有效。</p></blockquote><h2 id="taskkill"><a href="#taskkill" class="headerlink" title="taskkill"></a>taskkill</h2><blockquote><p>TASKKILL [&#x2F;S system [&#x2F;U username [&#x2F;P [password]]]]  </p><p>{ [&#x2F;FI filter] [&#x2F;PID processid | &#x2F;IM imagename] } [&#x2F;F] [&#x2F;T]</p></blockquote><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cmd"># 执行命令<br>netsh interface portproxy add v4tov4 listenaddress=[LOCAL_HOST]  listenport=[LOCAL_PORT]  connectaddress=[TARGET_HOST] connectport=[TARGET_PORT]<br># 例<br>netsh interface portproxy add v4tov4 listenaddress=<span class="hljs-number">100</span>.<span class="hljs-number">120</span>.<span class="hljs-number">9</span>.<span class="hljs-number">96</span>  listenport=<span class="hljs-number">2222</span>  connectaddress=<span class="hljs-number">10</span>.<span class="hljs-number">206</span>.<span class="hljs-number">230</span>.<span class="hljs-number">177</span> connectport=<span class="hljs-number">22</span><br><br># 查看现有的配置<br>netsh interface portproxy show all<br><br># 删除原有的端口转发<br>netsh interface portproxy delete v4tov4 listenaddress=[LOCAL_HOST]  listenport=[LOCAL_PORT]<br># 例<br>netsh interface portproxy delete v4tov4 listenaddress=<span class="hljs-number">100</span>.<span class="hljs-number">120</span>.<span class="hljs-number">9</span>.<span class="hljs-number">96</span>  listenport=<span class="hljs-number">2222</span><br></code></pre></td></tr></table></figure><hr><h2 id="Diskpart-手动创建-EFI、MSR-引导分区"><a href="#Diskpart-手动创建-EFI、MSR-引导分区" class="headerlink" title="Diskpart 手动创建 EFI、MSR 引导分区"></a>Diskpart 手动创建 EFI、MSR 引导分区</h2><h3 id="用傲梅分区助手将磁盘转换为GPT格式"><a href="#用傲梅分区助手将磁盘转换为GPT格式" class="headerlink" title="用傲梅分区助手将磁盘转换为GPT格式"></a>用傲梅分区助手将磁盘转换为GPT格式</h3><h4 id="创建-EFI-分区"><a href="#创建-EFI-分区" class="headerlink" title="创建 EFI 分区"></a>创建 EFI 分区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmd">diskpart<br>list disk<br>select disk x   (选择需要的硬盘)<br>create partition efi size=<span class="hljs-number">100</span><br>assign letter=b<br><span class="hljs-built_in">format</span> quick <span class="hljs-built_in">fs</span>=FAT32<br></code></pre></td></tr></table></figure><h4 id="创建-msr-分区"><a href="#创建-msr-分区" class="headerlink" title="创建 msr 分区"></a>创建 msr 分区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">create partition msr size=<span class="hljs-number">16</span>  (Win <span class="hljs-number">10</span> 默认是<span class="hljs-number">16</span>M) <br></code></pre></td></tr></table></figure><h4 id="创建-Recovery-分区-WindowsRE"><a href="#创建-Recovery-分区-WindowsRE" class="headerlink" title="创建 Recovery 分区 (WindowsRE)"></a>创建 Recovery 分区 (WindowsRE)</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">create partition primary size=<span class="hljs-number">450</span><br><span class="hljs-built_in">format</span> quick <span class="hljs-built_in">fs</span>=ntfs <span class="hljs-built_in">label</span>=&quot;Recovery&quot;<br>assign letter=&quot;R&quot;<br><span class="hljs-built_in">set</span> id=&quot;de94bba4-<span class="hljs-number">06</span>d1-<span class="hljs-number">4</span>d40-a16a-bfd50179d6ac&quot;<br>gpt attributes=<span class="hljs-number">0</span>x8000000000000001      ( <span class="hljs-number">8</span> 和 <span class="hljs-number">1</span>之间有<span class="hljs-number">14</span>个<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h2 id="IP-释放、更新、以及清除-DNS"><a href="#IP-释放、更新、以及清除-DNS" class="headerlink" title="IP 释放、更新、以及清除 DNS"></a>IP 释放、更新、以及清除 DNS</h2><h3 id="释放本地-ipv4-连接地址"><a href="#释放本地-ipv4-连接地址" class="headerlink" title="释放本地 ipv4 连接地址"></a>释放本地 ipv4 连接地址</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cmd"># 等待几秒钟可以得到IP地址已释放<br><span class="hljs-built_in">ipconfig</span> /release<br><br># 等待几秒钟可以得到已重新建立IP地址<br><span class="hljs-built_in">ipconfig</span> /renew<br><br># 清除DNS缓存<br><span class="hljs-built_in">ipconfig</span> /flushdns<br><br># 关闭命令窗口并尝试建立连接<br></code></pre></td></tr></table></figure><h3 id="释放本地-ipv6-连接地址"><a href="#释放本地-ipv6-连接地址" class="headerlink" title="释放本地 ipv6 连接地址"></a>释放本地 ipv6 连接地址</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">ipconfig</span> /release6 &amp;&amp; <span class="hljs-built_in">ipconfig</span> /renew6<br></code></pre></td></tr></table></figure><h2 id="win10-查看电脑已连接过的无线密码"><a href="#win10-查看电脑已连接过的无线密码" class="headerlink" title="win10 查看电脑已连接过的无线密码"></a>win10 查看电脑已连接过的无线密码</h2><p>查看单个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh wlan show profiles name=<span class="hljs-string">&quot;wifi名字&quot;</span> key=clear<br></code></pre></td></tr></table></figure><p>查看所有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh wlan show profiles<br></code></pre></td></tr></table></figure><h2 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h2><h3 id="临时设置"><a href="#临时设置" class="headerlink" title="临时设置"></a>临时设置</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">set</span> http_proxy=http://<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:端口号<br><span class="hljs-built_in">set</span> https_proxy=http://<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:端口号<br></code></pre></td></tr></table></figure><h3 id="永久设置"><a href="#永久设置" class="headerlink" title="永久设置"></a>永久设置</h3><p>添加以下系统变量：</p><img src="/posts/7101b844/c68f9ab677f3436d8a02a8a847329137.png" class alt="在这里插入图片描述">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;转换磁盘&quot;&gt;&lt;a href=&quot;#转换磁盘&quot; class=&quot;headerlink&quot; title=&quot;转换磁盘&quot;&gt;&lt;/a&gt;转换磁盘&lt;/h</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="windows" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/windows/"/>
    
    
    <category term="windows" scheme="https://blog.yahyav2rayssr.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>运维常用命令-常用篇</title>
    <link href="https://blog.yahyav2rayssr.top/posts/e9ae7850/"/>
    <id>https://blog.yahyav2rayssr.top/posts/e9ae7850/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-ls-系列"><a href="#1-ls-系列" class="headerlink" title="1. ls 系列"></a>1. ls 系列</h1><blockquote><p>-F：根据文件、目录等信息在文件名或目录名最后给予附加数据结构</p><ol><li>*  代表可执行文件；</li><li>&#x2F;  代表目录</li><li>&#x3D;  代表socket文件</li><li>|  代表FIFO文件</li><li>@  代表连接文件</li></ol></blockquote><h2 id="1-只显示文件类型，排除目录"><a href="#1-只显示文件类型，排除目录" class="headerlink" title="1. 只显示文件类型，排除目录"></a>1. 只显示文件类型，排除目录</h2><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><blockquote><p>^[^d] 是一个正则表达式，[^d] 表示字符串含有一个不是 d 的字符， ^d 表示以 d 开头，^[^d] 表示不以 d 开头</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep ^[^d]<br></code></pre></td></tr></table></figure><p>所以只显示文件夹的写法为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep ^d<br></code></pre></td></tr></table></figure><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep -v ^d<br></code></pre></td></tr></table></figure><p>如果文件名包含空格，可以用下面命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep -v [/$]<br></code></pre></td></tr></table></figure><hr><h1 id="2-sed-系列"><a href="#2-sed-系列" class="headerlink" title="2. sed 系列"></a>2. sed 系列</h1><h2 id="1-替换字符串"><a href="#1-替换字符串" class="headerlink" title="1. 替换字符串"></a>1. 替换字符串</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed &#x27;s/old/new/g&#x27;<br></code></pre></td></tr></table></figure><h1 id="3-rm-系列"><a href="#3-rm-系列" class="headerlink" title="3. rm 系列"></a>3. rm 系列</h1><h2 id="1-删除带有指定字符串的文件"><a href="#1-删除带有指定字符串的文件" class="headerlink" title="1. 删除带有指定字符串的文件"></a>1. 删除带有指定字符串的文件</h2><h3 id="方法一：-1"><a href="#方法一：-1" class="headerlink" title="方法一："></a>方法一：</h3><blockquote><p>注意字符串如果含有特殊字符，必须做转义处理，否则默认会删除当前目录下的所有文件。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -f *字符串*<br></code></pre></td></tr></table></figure><h3 id="方法二：-1"><a href="#方法二：-1" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find -type f -name &#x27;*字符串*&#x27; -delete<br></code></pre></td></tr></table></figure><h1 id="4-awk-系列"><a href="#4-awk-系列" class="headerlink" title="4. awk 系列"></a>4. awk 系列</h1><h2 id="1-获取某一行中指定字符后的内容"><a href="#1-获取某一行中指定字符后的内容" class="headerlink" title="1. 获取某一行中指定字符后的内容"></a>1. 获取某一行中指定字符后的内容</h2><p>比如有个xxx.txt文件，里面有很多行内容，其中有行内容为ro.xxx&#x3D;123，要想获取到123这个值，可以如下处理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>NAME=`cat xxx.txt | grep &#x27;ro.xxx&#x27; | awk -F &#x27;=&#x27; &#x27;&#123;print $2&#125;&#x27;`<br>echo $NAME<br></code></pre></td></tr></table></figure><h2 id="2-使用bash传递的变量"><a href="#2-使用bash传递的变量" class="headerlink" title="2. 使用bash传递的变量"></a>2. 使用bash传递的变量</h2><blockquote><p>awk 外部变量的传入可多次定义，通过 -v key&#x3D;value, -v key&#x3D;value 这种形式进行定义。</p></blockquote><p>类似自定义变量，在脚本中可以轻易的用-v参数将bash的变量传递给awk，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">name=sni7<br><br>awk -v var=<span class="hljs-variable">$&#123;name&#125;</span> <span class="hljs-string">&#x27;BEGIN&#123;print var&#125;&#x27;</span><br>sni7<br></code></pre></td></tr></table></figure><h1 id="5-cd-dirname-0-pwd"><a href="#5-cd-dirname-0-pwd" class="headerlink" title="5. $(cd dirname $0;pwd)"></a>5. $(cd <code>dirname $0</code>;pwd)</h1><p><code>cd &quot;$(dirname &quot;$0&quot;)&quot;;pwd</code> 等同于 <code>$(dirname $(readlink -f &quot;$0&quot;))</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在/home/admin/test/下新建test.sh内容如下：</span><br>cd `dirname $0`<br>echo `pwd`<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后返回到/home/admin/执行</span><br>sh test/test.sh<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行结果:</span><br>/home/admin/test<br></code></pre></td></tr></table></figure><h1 id="6-basename"><a href="#6-basename" class="headerlink" title="6. basename"></a>6. basename</h1><h2 id="1-basename"><a href="#1-basename" class="headerlink" title="1. basename"></a>1. basename</h2><p>打印除上层路径外的基础文件名；当文件名后存在后缀时，除去后面的后缀，如 # basename include&#x2F;stdio.h .h 只会打印出 stdio</p><h2 id="2-basename-s"><a href="#2-basename-s" class="headerlink" title="2. basename -s"></a>2. basename -s</h2><p>-s参数后面指定要去除的后缀字符，即：# basename -s .h include&#x2F;stdio.h 同 # basename include&#x2F;stdio.h .h 一样只会打印出 stdio</p><h2 id="3-basename-a"><a href="#3-basename-a" class="headerlink" title="3. basename -a"></a>3. basename -a</h2><p>-a参数可追加执行多个文件路径，取每一个路径的基础文件名并打印。用法如下图：</p><h1 id="7-pwd"><a href="#7-pwd" class="headerlink" title="7. pwd"></a>7. pwd</h1><h2 id="1-pwd-L"><a href="#1-pwd-L" class="headerlink" title="1. pwd -L"></a>1. pwd -L</h2><p>打印出环境变量 $PWD 的值，如果 PWD 赋值为当前工作路径，pwd 默认同 pwd -L</p><h2 id="2-pwd-P"><a href="#2-pwd-P" class="headerlink" title="2. pwd -P"></a>2. pwd -P</h2><p>打印真实路径，不打印链接的路径，区别如图：</p><h1 id="8-watch"><a href="#8-watch" class="headerlink" title="8. watch"></a>8. watch</h1><p><strong>命令参数</strong>：</p><p>-n 或 –interval watch 缺省每2秒运行一下程序，可以用 -n 或 -interval 来指定间隔的时间。</p><p>-d 或 –differences 用 -d 或 –differences 选项 watch 会高亮显示变化的区域。 而 -d&#x3D;cumulative 选项会把变动过的地方(不管最近的那次有没有变动)都高亮显示出来。</p><p>-t 或-no-title 会关闭watch命令在顶部的时间间隔,命令，当前时间的输出。</p><p><strong>示例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">watch -n 1 -d &quot;&lt;command&gt;&quot;<br></code></pre></td></tr></table></figure><h1 id="9-grep"><a href="#9-grep" class="headerlink" title="9. grep"></a>9. grep</h1><table><thead><tr><th>元字符</th><th>功能</th><th>例子</th><th>匹配什么</th></tr></thead><tbody><tr><td>^</td><td>锚定行的开始</td><td>&#x2F;^love&#x2F;</td><td>匹配所有以love开头的行</td></tr><tr><td>$</td><td>锚定行的结束</td><td>&#x2F;love$&#x2F;</td><td>匹配所有以love 结束的行</td></tr><tr><td>.</td><td>匹配一个字符</td><td>&#x2F;l..e&#x2F;</td><td>匹配这样的行，这些行包含这样的字符：第一个字符是l,紧跟着两个字符，然后是e</td></tr><tr><td>*</td><td>代表0个或多个先前字符</td><td>&#x2F;*love&#x2F;</td><td>匹配所有这样的行，有0个或多个空格，空格后跟着love</td></tr><tr><td>[]</td><td>匹配字符组中的一个字符</td><td>&#x2F;[Ll]ove&#x2F;</td><td>匹配所有包含love或者Love的行</td></tr><tr><td>[^]</td><td>匹配一个不在范围内的字符</td><td>&#x2F;[^A-Z]ove&#x2F;</td><td></td></tr><tr><td>&lt;</td><td>锚定单词的开始</td><td>&lt;love</td><td>匹配所有这样的行，这些行包含以love开头的单词（vi和grep支持这个功能）</td></tr><tr><td>&gt;</td><td>锚定单词的结束</td><td>Love&gt;</td><td>匹配所有这样的行，这些行包含以love结束的单词（vi和grep支持这个功能）</td></tr><tr><td>(..)</td><td>标记后面用到的匹配字符</td><td>&#x2F;(love)able1rs&#x2F;</td><td>最多可以使用9个标签。第一个标签是模板最左边的部分。在本例子中，模板love保存的标签为1，后面的1指得就是love；本例子搜索的是这样的行，这些行包含这样的字符，在Loveabel后面跟着lovers</td></tr><tr><td>x{m}</td><td>M次复制字符x</td><td></td><td></td></tr><tr><td>x{m,}</td><td>至少m次复制字符x</td><td></td><td></td></tr><tr><td>x{m,n}</td><td>至少m次，至多n次复制字x</td><td></td><td></td></tr><tr><td>w</td><td>文字和数字字符，[A-Za-z0-9]</td><td>Lw*e</td><td>匹配一个l字符，紧跟着0个或多个文字或数字字符，然后是e</td></tr><tr><td>W</td><td>同上</td><td></td><td></td></tr><tr><td>b</td><td>单词分界线</td><td>bloveb</td><td>仅仅匹配单词love</td></tr></tbody></table><h2 id="递归查找某个文本内容"><a href="#递归查找某个文本内容" class="headerlink" title="递归查找某个文本内容"></a>递归查找某个文本内容</h2><ul><li>R 表示递归，就是在当前目录找不到就去子目录找 </li><li>E 表示把文件名也打印出来 </li><li>n 打印此行在文件中的位置。</li></ul><p>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">这句可以显示在哪个文件里包含3306</span><br>grep -Rl &quot;3306&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">可以显现文件名，行数</span><br>grep -REn &quot;3306&quot;<br></code></pre></td></tr></table></figure><h3 id="查找替换内容"><a href="#查找替换内容" class="headerlink" title="查找替换内容"></a>查找替换内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">sed -i <span class="hljs-string">&quot;s/[原字符串]/[新字符串]/g&quot;</span> `grep <span class="hljs-string">&#x27;[原字符串]&#x27;</span> -rl /opt/kubernetes`</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">示例：替换/opt/kubernetes下所有文件内容为242的换成245</span><br>sed -i &quot;s/242/245/g&quot; `grep &#x27;242&#x27; -rl /opt/kubernetes`<br></code></pre></td></tr></table></figure><h1 id="10-查看端口占用"><a href="#10-查看端口占用" class="headerlink" title="10. 查看端口占用"></a>10. 查看端口占用</h1><h2 id="查看那些程序使用tcp的80端口"><a href="#查看那些程序使用tcp的80端口" class="headerlink" title="查看那些程序使用tcp的80端口"></a>查看那些程序使用tcp的80端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">fuser -v -n tcp 80<br><br>fuser -v 80/tcp  <br></code></pre></td></tr></table></figure><h1 id="11-find-查找命令"><a href="#11-find-查找命令" class="headerlink" title="11. find 查找命令"></a>11. find 查找命令</h1><blockquote><p>find 基本语法如下：</p><p>find [PATH] [Option] [action]</p></blockquote><p>-type TYPE: 查找文件类型为 TYPE 的，类型主要有：</p><ul><li><p>一般正规文件(f)</p></li><li><p>设备文件 (b,c)</p></li><li><p>目录 (d)</p></li><li><p>连接文件 (l)</p></li><li><p>socket (s)</p></li><li><p>FIFO (p)</p></li></ul><h1 id="12-unzip-压缩-x2F-解压缩命令"><a href="#12-unzip-压缩-x2F-解压缩命令" class="headerlink" title="12. unzip 压缩&#x2F;解压缩命令"></a>12. unzip 压缩&#x2F;解压缩命令</h1><blockquote><p><strong>unzip 命令参数一览：</strong></p><ul><li>-x “文件列表” 解压文件，但不包含文件列表中指定的文件</li><li>-t 测试压缩文件有无损坏，并不解压</li><li>-v 查看压缩文件的详细信息，具体包括压缩文件中包含的文件大小、文件名和压缩比等，并不解压</li><li>-n 解压时不覆盖已经存在的文件</li><li>-o 解压时覆盖已经存在的文件，并且不要求用户确认</li><li>-d 目录名 把压缩文件解压到指定目录下</li></ul><p><strong>zip 命令参数一览：</strong></p><ul><li>-r 递归压缩，将指定目录下的所有文件以及子目录全部压缩</li><li>-d 从压缩文件内删除指定的文件</li><li>-i “文件列表” 只压缩文件列表中的文件</li><li>-x “文件列表” 压缩时排除文件列表中指定的文件</li><li>-u 更新文件到压缩文件中</li><li>-m 将文件加入压缩文件压缩后，删除原始文件，即把文件移到压缩文件中</li><li>-F 尝试修复损坏的压缩文件</li><li>-T 检查压缩文件内的每个文件是否正确无误</li><li>- 压缩级别 压缩级别是一个1～9的数字</li></ul></blockquote><p>下面举一些例子：</p><p>把一个文件 1.txt 和一个目录 dir1 压缩成为 yasuo.zip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zip -r example.zip 1.txt dir1<br></code></pre></td></tr></table></figure><p>查看压缩包内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip -v example.zip<br></code></pre></td></tr></table></figure><p>验证压缩文件是否下载完全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip -t example.zip<br></code></pre></td></tr></table></figure><h1 id="13-gz-文件"><a href="#13-gz-文件" class="headerlink" title="13. gz 文件"></a>13. gz 文件</h1><p>压缩 gzip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gzip -d FileName.gz<br></code></pre></td></tr></table></figure><p>解压 gunzip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gunzip FileName.gz<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-ls-系列&quot;&gt;&lt;a href=&quot;#1-ls-系列&quot; class=&quot;headerlink&quot; title=&quot;1. ls 系列&quot;&gt;&lt;/a&gt;1. ls 系列&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;-F：根据文件、目录等信息在文件名或目录名最后给予附加数据结构&lt;/p&gt;</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="常用命令" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="命令" scheme="https://blog.yahyav2rayssr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 其他</title>
    <link href="https://blog.yahyav2rayssr.top/posts/b5f628bf/"/>
    <id>https://blog.yahyav2rayssr.top/posts/b5f628bf/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="常用网站"><a href="#常用网站" class="headerlink" title="常用网站"></a>常用网站</h2><h3 id="ipv6-地址测试"><a href="#ipv6-地址测试" class="headerlink" title="ipv6 地址测试"></a>ipv6 地址测试</h3><p><a href="http://test-ipv6.com/">http://test-ipv6.com</a></p><h3 id="移动宽带配置"><a href="#移动宽带配置" class="headerlink" title="移动宽带配置"></a>移动宽带配置</h3><p><a href="https://zhuanlan.zhihu.com/p/146528034">https://zhuanlan.zhihu.com/p/146528034</a></p><p><a href="https://www.cxyzjd.com/article/COCO56/104362070">https://www.cxyzjd.com/article/COCO56/104362070</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;常用网站&quot;&gt;&lt;a href=&quot;#常用网站&quot; class=&quot;headerlink&quot; title=&quot;常用网站&quot;&gt;&lt;/a&gt;常用网站&lt;/h</summary>
      
    
    
    
    <category term="网络通讯" scheme="https://blog.yahyav2rayssr.top/categories/%E7%BD%91%E7%BB%9C%E9%80%9A%E8%AE%AF/"/>
    
    
    <category term="http" scheme="https://blog.yahyav2rayssr.top/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>计算机基础</title>
    <link href="https://blog.yahyav2rayssr.top/posts/c783f2ce/"/>
    <id>https://blog.yahyav2rayssr.top/posts/c783f2ce/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="计算-byte-和-bit-和-kb-的转换"><a href="#计算-byte-和-bit-和-kb-的转换" class="headerlink" title="计算 byte 和 bit 和 kb 的转换"></a>计算 byte 和 bit 和 kb 的转换</h2><p>1、byte 代表的是字节，1byte &#x3D; 8bit</p><p>2、bit 是最小的计量单位</p><h3 id="单位换算"><a href="#单位换算" class="headerlink" title="单位换算"></a>单位换算</h3><p>1Byte&#x3D;8bit（一个字节&#x3D;8bit）</p><p>1KB&#x3D;1024Byte(字节)&#x3D;8*1024bit</p><p>1MB&#x3D;1024KB</p><p>1GB&#x3D;1024MB</p><p>1TB&#x3D;1024GB</p><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><blockquote><p>参考链接：<a href="https://www.51cto.com/article/718780.html">https://www.51cto.com/article/718780.html</a></p></blockquote><h3 id="QPS（每秒查询）"><a href="#QPS（每秒查询）" class="headerlink" title="QPS（每秒查询）"></a>QPS（每秒查询）</h3><p>QPS：Queries Per Second意思是“每秒查询率”，是一台服务器每秒能够相应的查询次数，是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准。互联网中，作为域名系</p><p>统服务器的机器的性能经常用每秒查询率来衡量。</p><h3 id="TPS（每秒事务）"><a href="#TPS（每秒事务）" class="headerlink" title="TPS（每秒事务）"></a>TPS（每秒事务）</h3><p>TPS：是TransactionsPerSecond的缩写，也就是事务数&#x2F;秒。它是软件测试结果的测量单位。一个事务是指一个客户机向服务器发送请求然后服务器做出反应的过程。客户机在发送请求</p><p>时开始计时，收到服务器响应后结束计时，以此来计算使用的时间和完成的事务个数。</p><p>QPS vs TPS：QPS基本类似于TPS，但是不同的是，对于一个页面的一次访问，形成一个TPS；但一次页面请求，可能产生多次对服务器的请求，服务器对这些请求，就可计</p><p>入“QPS”之中。如，访问一个页面会请求服务器2次，一次访问，产生一个“T”，产生2个“Q”。</p><h3 id="RT（响应时间）"><a href="#RT（响应时间）" class="headerlink" title="RT（响应时间）"></a>RT（响应时间）</h3><p>响应时间：执行一个请求从开始到最后收到响应数据所花费的总体时间,即从客户端发起请求到收到服务器响应结果的时间。响应时间RT(Response-time)，是一个系统最重要的指标之</p><p>一，它的数值大小直接反应了系统的快慢。</p><h3 id="并发数"><a href="#并发数" class="headerlink" title="并发数"></a>并发数</h3><p>并发数是指系统同时能处理的请求数量，这个也是反应了系统的负载能力。</p><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><p>系统的吞吐量（承压能力）与request对CPU的消耗、外部接口、IO等等紧密关联。单个request 对CPU消耗越高，外部系统接口、IO速度越慢，系统吞吐能力越低，反之越高。系统吞</p><p>吐量几个重要参数：QPS（TPS）、并发数、响应时间。</p><ul><li>QPS（TPS）：（Query Per Second）每秒钟request &#x2F; 事务 数量</li><li>并发数：系统同时处理的request &#x2F; 事务数</li><li>响应时间：一般取平均响应时间</li></ul><p>理解了上面三个要素的意义之后，就能推算出它们之间的关系：</p><ul><li>QPS（TPS）&#x3D; 并发数 &#x2F; 平均响应时间</li><li>并发数 &#x3D; QPS * 平均响应时间</li></ul><h3 id="实际举例"><a href="#实际举例" class="headerlink" title="实际举例"></a>实际举例</h3><p>我们通过一个实例来把上面几个概念串起来理解。按二八定律来看，如果每天 80% 的访问集中在 20% 的时间里，这 20% 时间就叫做峰值时间。</p><ul><li>公式：( 总PV数 * 80% ) &#x2F; ( 每天秒数 * 20% ) &#x3D; 峰值时间每秒请求数(QPS)</li><li>机器：峰值时间每秒QPS &#x2F; 单台机器的QPS &#x3D; 需要的机器</li></ul><p>1、每天 300w PV 的在单台机器上，这台机器需要多少QPS？</p><p>( 3000000 * 0.8 ) &#x2F; (86400 * 0.2 ) &#x3D; 139 (QPS)</p><p>2、如果一台机器的QPS是58，需要几台机器来支持？</p><p>139 &#x2F; 58 &#x3D; 3</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;计算-byte-和-bit-和-kb-的转换&quot;&gt;&lt;a href=&quot;#计算-byte-和-bit-和-kb-的转换&quot; class=&quot;</summary>
      
    
    
    
    <category term="计算机基础" scheme="https://blog.yahyav2rayssr.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="计算机基础" scheme="https://blog.yahyav2rayssr.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://blog.yahyav2rayssr.top/posts/0/"/>
    <id>https://blog.yahyav2rayssr.top/posts/0/</id>
    <published>2024-04-14T10:46:14.851Z</published>
    <updated>2024-04-14T10:46:14.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="百度网盘会员"><a href="#百度网盘会员" class="headerlink" title="百度网盘会员"></a>百度网盘会员</h2><p><a href="https://sm.ii5.top/?key=9PSq8glOdQ4ual6w">https://sm.ii5.top/?key=9PSq8glOdQ4ual6w</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;百度网盘会员&quot;&gt;&lt;a href=&quot;#百度网盘会员&quot; class=&quot;headerlink&quot; title=&quot;百度网盘会员&quot;&gt;&lt;/a&gt;百</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 常见错误</title>
    <link href="https://blog.yahyav2rayssr.top/posts/4211b3cd/"/>
    <id>https://blog.yahyav2rayssr.top/posts/4211b3cd/</id>
    <published>2024-04-14T10:46:14.850Z</published>
    <updated>2024-04-14T10:46:14.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="Command-line-is-too-long"><a href="#Command-line-is-too-long" class="headerlink" title="Command line is too long"></a>Command line is too long</h2><p>报错内容:</p><p>Error running ‘ServiceStarter’: Command line is too long. Shorten command line for ServiceStarter or also for Application default configuration.</p><p>解法:</p><p>修改项目下 <code>.idea\workspace.xml</code>，找到标签 <code>&lt;component name=&quot;PropertiesComponent&quot;&gt;</code> ， 在标签里加一行 <code>&lt;property name=&quot;dynamic.classpath&quot; value=&quot;true&quot; /&gt;</code></p><h2 id="中文乱码以及-SpringBoot-yml配置文件中文乱码"><a href="#中文乱码以及-SpringBoot-yml配置文件中文乱码" class="headerlink" title="中文乱码以及(SpringBoot)yml配置文件中文乱码"></a>中文乱码以及(SpringBoot)yml配置文件中文乱码</h2><p>打开设置并搜索File Encodings,全部改成UTF-8，示图如下：</p><img src="/posts/4211b3cd/20200524104000676.png" class alt="img"><h2 id="maven-控制台中文乱码"><a href="#maven-控制台中文乱码" class="headerlink" title="maven 控制台中文乱码"></a>maven 控制台中文乱码</h2><p>打开 File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Build Tools -&gt; Maven -&gt; Runner 菜单，在 VM Options 选项框里添加以下参数（无需重启）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-Dfile.encoding=GB2312<br></code></pre></td></tr></table></figure><p>如图所示：</p><img src="/posts/4211b3cd/image-20230215175452549.png" alt="image-20230215175452549" style="zoom:80%;"><h2 id="编码-EUC-CN-的不可映射字符"><a href="#编码-EUC-CN-的不可映射字符" class="headerlink" title="编码 EUC_CN 的不可映射字符"></a>编码 EUC_CN 的不可映射字符</h2><p>在maven中默认采用gbk编码，我在IDEA中编写的代码默认为utf-8，因此在自动化构建的过程中就可能出现“编码EUC_CN的不可映射字符”，此时可以在pom.xml文件中添加如下代码,添加如下代码之后标2.3.1会报红，可以不用管</p><p>添加<code>&lt;encoding&gt;utf8&lt;/encoding&gt;</code>，最终效果如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>             <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                 <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                 <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                 <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                 <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                     <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><br>                     <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><br>                     <span class="hljs-tag">&lt;<span class="hljs-name">encoding</span>&gt;</span>utf8<span class="hljs-tag">&lt;/<span class="hljs-name">encoding</span>&gt;</span><br>                 <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>             <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;Command-line-is-too-long&quot;&gt;&lt;a href=&quot;#Command-line-is-too-long&quot; cla</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intell" scheme="https://blog.yahyav2rayssr.top/tags/intell/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 常用配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/6f59c50b/"/>
    <id>https://blog.yahyav2rayssr.top/posts/6f59c50b/</id>
    <published>2024-04-14T10:46:14.850Z</published>
    <updated>2024-04-14T10:46:14.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="显示当前文件完整路径信息"><a href="#显示当前文件完整路径信息" class="headerlink" title="显示当前文件完整路径信息"></a>显示当前文件完整路径信息</h2><ol><li>菜单栏：“文件”→“首选项”→“设置”，进入用户配置界面；</li><li>在软件默认的配置界面搜索关键字 “window.title”，将这一行配置复制到右边的用户配置界面中，并将 “activeEditorShort” 修改为 “activeEditorLong”；</li><li>保存后，再编辑文件时，软件窗口的标题栏上就可以看到当前文件的完整路径了。</li></ol><h2 id="驼峰下划线转换"><a href="#驼峰下划线转换" class="headerlink" title="驼峰下划线转换"></a>驼峰下划线转换</h2><p>商店搜索 change-case 插件，安装完毕重启后在键盘快捷方式绑定如下配置：</p><img src="/posts/6f59c50b/image-20231123105938672.png" alt="image-20231123105938672" style="zoom: 80%;"><p>默认情况下包含以下转换配置项：</p><img src="/posts/6f59c50b/image-20231123110202751.png" alt="image-20231123110202751" style="zoom:80%;"><img src="/posts/6f59c50b/image-20231123110218766.png" alt="image-20231123110218766" style="zoom:80%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;显示当前文件完整路径信息&quot;&gt;&lt;a href=&quot;#显示当前文件完整路径信息&quot; class=&quot;headerlink&quot; title=&quot;显</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Visual Studio Code" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Visual-Studio-Code/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
    <category term="vscode" scheme="https://blog.yahyav2rayssr.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Arthas 基本概念</title>
    <link href="https://blog.yahyav2rayssr.top/posts/b25563b9/"/>
    <id>https://blog.yahyav2rayssr.top/posts/b25563b9/</id>
    <published>2024-04-14T10:46:14.850Z</published>
    <updated>2024-04-14T10:46:14.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="入参"><a href="#入参" class="headerlink" title="入参"></a>入参</h2><h3 id="变量引用"><a href="#变量引用" class="headerlink" title="变量引用"></a>变量引用</h3><p>OGNL 在计算表达式的过程中, 随时会将当前对象保存在 <code>this</code> 变量中, 这个变量也可以象其他任何变量一样引用,用 <code>#this</code> 表示当前对象，举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl -c 18b4aac2 <span class="hljs-string">&#x27;#value1=new com.RoleDTO(), #value1.setRole(&quot;role&quot;), @com.SpringUtil@getBean(&quot;roleServiceImpl&quot;).getRole(#value1).(#this.getSysName())&#x27;</span><br></code></pre></td></tr></table></figure><p>可以通过 <code>#this.getSysName()</code> 调用返回结果的相关方法。</p><h3 id="class-类型"><a href="#class-类型" class="headerlink" title="class 类型"></a>class 类型</h3><p>入参类型如果是 class 类型，需要全包名路径，写法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;@全路径包名+类名@class&#x27;</span><br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl -c 338fc1d8 <span class="hljs-string">&#x27;@com.example.SpringContextHolder@getApplicationContext().getBean(@com.example.TestBean@class).handle(&#123;&quot;7899896&quot;&#125;)&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="新建对象"><a href="#新建对象" class="headerlink" title="新建对象"></a>新建对象</h3><p>可以通过声明变量的形式进行传入，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;#变量名=new 全路径包名+类名, #变量名.方法&#x27;</span><br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl -c 18b4aac2 <span class="hljs-string">&#x27;#value1=new com.RoleDTO(), #value1.setRole(&quot;role&quot;), @com.SpringUtil@getBean(&quot;accessSystemRoleServiceImpl&quot;).getRole(#value1)&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="map-类型"><a href="#map-类型" class="headerlink" title="map 类型"></a>map 类型</h3><p>可以通过声明变量的形式进行传入，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;#变量名=#&#123;&quot;key1&quot;:&quot;value1&quot;, &quot;key2&quot;:&quot;value2&quot;&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;#inputmap=#&#123;&quot;foo&quot;: &quot;foo value&quot;, &quot;bar&quot;:&quot;bar value&quot; &#125;, @com.OgnlTest@getMap(#inputmap)&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="多级传递"><a href="#多级传递" class="headerlink" title="多级传递"></a>多级传递</h3><p>方法 A 的返回值当做方法 B 的入参，执行多行表达式，返回一个 List，示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;#value1=@com.OgnlTest@getPerson(&quot;src&quot;,18), #value2=@com.OgnlTest@setPerson(#value1), &#123;#value1,#value2&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;入参&quot;&gt;&lt;a href=&quot;#入参&quot; class=&quot;headerlink&quot; title=&quot;入参&quot;&gt;&lt;/a&gt;入参&lt;/h2&gt;&lt;h3 id</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="arthas" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/arthas/"/>
    
    
    <category term="arthas" scheme="https://blog.yahyav2rayssr.top/tags/arthas/"/>
    
  </entry>
  
  <entry>
    <title>Arthas 常用命令</title>
    <link href="https://blog.yahyav2rayssr.top/posts/1b15733b/"/>
    <id>https://blog.yahyav2rayssr.top/posts/1b15733b/</id>
    <published>2024-04-14T10:46:14.850Z</published>
    <updated>2024-04-14T10:46:14.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>官方文档链接：<a href="https://arthas.gitee.io/doc/commands.html#jvm-%E7%9B%B8%E5%85%B3">https://arthas.gitee.io/doc/commands.html#jvm-%E7%9B%B8%E5%85%B3</a></p><h2 id="ognl-表达式"><a href="#ognl-表达式" class="headerlink" title="ognl 表达式"></a>ognl 表达式</h2><p>参考文档：<a href="https://blog.csdn.net/u010634066/article/details/101013479">https://blog.csdn.net/u010634066/article/details/101013479</a></p><p><strong>参数说明:</strong></p><table><thead><tr><th align="right">参数名称</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="right"><em>express</em></td><td align="left">执行的表达式</td></tr><tr><td align="right"><code>[c:]</code></td><td align="left">执行表达式的 ClassLoader 的 hashcode，默认值是 SystemClassLoader</td></tr><tr><td align="right"><code>[classLoaderClass:]</code></td><td align="left">指定执行表达式的 ClassLoader 的 class name</td></tr><tr><td align="right">[x]</td><td align="left">结果对象的展开层次，默认值 1</td></tr></tbody></table><h3 id="调用静态属性"><a href="#调用静态属性" class="headerlink" title="调用静态属性"></a>调用静态属性</h3><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;@全路径类目@静态属性名&#x27;</span><br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;@com.shirc.arthasexample.ognl.OgnlTest@static_str&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="调用静态方法"><a href="#调用静态方法" class="headerlink" title="调用静态方法"></a>调用静态方法</h3><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl <span class="hljs-string">&#x27;@全路径类目@静态方法名(&quot;参数&quot;)&#x27;</span><br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ognl -c 18b4aac2  <span class="hljs-string">&#x27;@cn.hutool.extra.spring.SpringUtil@getBean(&quot;lineRequireInfoPlatformRepoImpl&quot;).queryByRequireId(&quot;231102012391075&quot;)&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="json-格式化"><a href="#json-格式化" class="headerlink" title="json 格式化"></a>json 格式化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">options json-format <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h2 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h2><p>很多时候我们都知道一个方法被执行，但这个方法被执行的路径非常多，或者你根本就不知道这个方法是从那里被执行了，此时你需要的是 stack 命令。</p><p><strong>参数说明:</strong></p><table><thead><tr><th align="right">参数名称</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="right"><em>class-pattern</em></td><td align="left">类名表达式匹配</td></tr><tr><td align="right"><em>method-pattern</em></td><td align="left">方法名表达式匹配</td></tr><tr><td align="right"><em>condition-express</em></td><td align="left">条件表达式</td></tr><tr><td align="right">[E]</td><td align="left">开启正则表达式匹配，默认为通配符匹配</td></tr><tr><td align="right"><code>[n:]</code></td><td align="left">执行次数限制</td></tr><tr><td align="right"><code>[m &lt;arg&gt;]</code></td><td align="left">指定 Class 最大匹配数量，默认值为 50。长格式为<code>[maxMatch &lt;arg&gt;]</code>。</td></tr></tbody></table><p><strong>举个栗子：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">stack com.sf.ground.require.mgmt.service.PeriodicLineService exportData -n 5 <br></code></pre></td></tr></table></figure><h2 id="sc"><a href="#sc" class="headerlink" title="sc"></a>sc</h2><p>查看 JVM 已加载的类信息。“Search-Class” 的简写，这个命令能搜索出所有已经加载到 JVM 中的 Class 信息，这个命令支持的参数有 <code>[d]</code>、<code>[E]</code>、<code>[f]</code> 和 <code>[x:]</code>。</p><p><strong>参数说明:</strong></p><table><thead><tr><th align="right">参数名称</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="right"><em>class-pattern</em></td><td align="left">类名表达式匹配</td></tr><tr><td align="right"><em>method-pattern</em></td><td align="left">方法名表达式匹配</td></tr><tr><td align="right">[d]</td><td align="left">输出当前类的详细信息，包括这个类所加载的原始文件来源、类的声明、加载的 ClassLoader 等详细信息。 <br>如果一个类被多个 ClassLoader 所加载，则会出现多次</td></tr><tr><td align="right">[E]</td><td align="left">开启正则表达式匹配，默认为通配符匹配</td></tr><tr><td align="right">[f]</td><td align="left">输出当前类的成员变量信息（需要配合参数-d 一起使用）</td></tr><tr><td align="right">[x:]</td><td align="left">指定输出静态变量时属性的遍历深度，默认为 0，即直接使用 <code>toString</code> 输出</td></tr><tr><td align="right"><code>[c:]</code></td><td align="left">指定 class 的 ClassLoader 的 hashcode</td></tr><tr><td align="right"><code>[classLoaderClass:]</code></td><td align="left">指定执行表达式的 ClassLoader 的 class name</td></tr><tr><td align="right"><code>[n:]</code></td><td align="left">具有详细信息的匹配类的最大数量（默认为 100）</td></tr><tr><td align="right"><code>[cs &lt;arg&gt;]</code></td><td align="left">指定 class 的 ClassLoader#toString() 返回值。长格式<code>[classLoaderStr &lt;arg&gt;]</code></td></tr></tbody></table><p><strong>举个栗子：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sc -d cn.hutool.extra.spring.SpringUtil<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;p&gt;官方文档链接：&lt;a href=&quot;https://arthas.gitee.io/doc/commands.html#jvm-%E7%9B%B</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="arthas" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/arthas/"/>
    
    
    <category term="arthas" scheme="https://blog.yahyav2rayssr.top/tags/arthas/"/>
    
  </entry>
  
  <entry>
    <title>Git 常见错误</title>
    <link href="https://blog.yahyav2rayssr.top/posts/f11796dd/"/>
    <id>https://blog.yahyav2rayssr.top/posts/f11796dd/</id>
    <published>2024-04-14T10:46:14.848Z</published>
    <updated>2024-04-14T10:46:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="1-Add-correct-host-key-in-x2F-root-x2F-ssh-x2F-known-hosts-to-get-rid-of-this-message"><a href="#1-Add-correct-host-key-in-x2F-root-x2F-ssh-x2F-known-hosts-to-get-rid-of-this-message" class="headerlink" title="1. Add correct host key in &#x2F;root&#x2F;.ssh&#x2F;known_hosts to get rid of this message."></a>1. Add correct host key in &#x2F;root&#x2F;.ssh&#x2F;known_hosts to get rid of this message.</h2><h3 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h3><p>ssh 远程到远端服务器报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!<br>Someone could be eavesdropping on you right now (man-in-the-middle attack)!<br>It is also possible that a host key has just been changed.<br>The fingerprint for the ECDSA key sent by the remote host is<br>SHA256:NHg/pDwRdtQThZzY3Z4Uwq/Rz93FgmL3UdBAFleWFWk.<br>Please contact your system administrator.<br>Add correct host key in /Users/yuanting/.ssh/known_hosts to get rid of this message.<br>Offending ECDSA key in /Users/yuanting/.ssh/known_hosts:102<br>ECDSA host key for 192.168.198.190 has changed and you have requested strict checking.<br>Host key verification failed.<br></code></pre></td></tr></table></figure><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>因为服务器的ip发生变更了<br>第一次SSH连接时，会生成一个认证，储存在客户端（也就是用SSH连线其他电脑的那个，自己操作的那个）中的known_hosts，但是如果服务器验证过了，认证资讯当然也会更改，服务器端与客户端不同时，就会跳出错误啦。</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><h5 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h5><p>输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -R + &lt;输入服务器的IP&gt;<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -R 192.168.198.147<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Host 192.168.198.147 found: line 36</span><br>/Users/renwoxing/.ssh/known_hosts updated.<br></code></pre></td></tr></table></figure><h5 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h5><p>在连接的目标主机上的~&#x2F;.ssh&#x2F;known_hosts文件，去除过时的认证。</p><p><strong>举个栗子：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">vim ~/.ssh/known_hosts</span><br><br>// 删除下列内容<br>192.168.118.98 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBO7yIeXPP4/dSuaV/0hObmbc0Si1rtGLFbi7Lz75SAzMO5dseLe1w5TwJK<br>DJ+vQ5GgZaWmqhIrXgx0o8VdWSEQA=<br></code></pre></td></tr></table></figure><h2 id="2-彻底解决【“curl-7-Failed-to-connect-to-raw-githubusercontent-com-port-443-Connection-refused”】错误"><a href="#2-彻底解决【“curl-7-Failed-to-connect-to-raw-githubusercontent-com-port-443-Connection-refused”】错误" class="headerlink" title="2. 彻底解决【“curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused”】错误"></a>2. <strong>彻底解决【<code>“curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused”</code>】错误</strong></h2><h3 id="临时方案"><a href="#临时方案" class="headerlink" title="临时方案"></a>临时方案</h3><p>用如下命令下载安装msf时，提示<code>curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; \<br>chmod 755 msfinstall &amp;&amp; \<br>./msfinstall<br></code></pre></td></tr></table></figure><p>之前也遇到过类似的错误，用的解决方法是，fq工具打开全局模式，然后打开curl后面的地址（这里是：<a href="https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb%EF%BC%89%EF%BC%8C%E4%B9%8B%E5%90%8E%E5%8F%A6%E5%AD%98%E4%B8%BA%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B9%B6%E4%BE%9D%E6%AC%A1%E6%89%A7%E8%A1%8C%E5%90%8E%E7%BB%AD%E5%91%BD%E4%BB%A4%E3%80%82">https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb），之后另存为文件，并依次执行后续命令。</a></p><p>上面是最简单便捷的方法，详细内容可以参考： <a href="https://stackoverflow.com/a/29913151">Homebrew installation on Mac OS X Failed to connect to raw.githubusercontent.com port 443</a> </p><h3 id="最终解决方案"><a href="#最终解决方案" class="headerlink" title="最终解决方案"></a>最终解决方案</h3><p>最近再次遇到该问题，详细了解了下，发现是 github 的一些域名的 DNS 解析被污染，导致 DNS 解析过程无法通过域名取得正确的IP地址。可以通过修改 &#x2F;etc&#x2F;hosts 文件可解决该问题。</p><p>具体而言：</p><p>打开 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 输入访问不了的域名，获得对应的IP。</p><p>使用 vim &#x2F;etc&#x2F;hosts 命令打开不能访问的机器的hosts文件，添加如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">185.199.108.133 raw.githubusercontent.com<br>185.199.108.133 user-images.githubusercontent.com<br>185.199.108.133 avatars2.githubusercontent.com<br>185.199.108.133 avatars1.githubusercontent.com<br></code></pre></td></tr></table></figure><p>注：上面内容中 185.199.108.133 是 raw.githubusercontent.com 所在的服务器IP（通过  <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 获知）。</p><p>保存该文件，再使用即可正常访问。</p><h2 id="3-has-no-tracked-branch"><a href="#3-has-no-tracked-branch" class="headerlink" title="3. has no tracked branch"></a>3. has no tracked branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch --set-upstream-to origin/master<br>-- 或者<br>git branch --set-upstream-to=origin/master<br></code></pre></td></tr></table></figure><p>可以关联本地的 master 分支和远程的 master 分支了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;1-Add-correct-host-key-in-x2F-root-x2F-ssh-x2F-known-hosts-to-get</summary>
      
    
    
    
    <category term="Git" scheme="https://blog.yahyav2rayssr.top/categories/Git/"/>
    
    
    <category term="git" scheme="https://blog.yahyav2rayssr.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 常用 SQL</title>
    <link href="https://blog.yahyav2rayssr.top/posts/b2e36861/"/>
    <id>https://blog.yahyav2rayssr.top/posts/b2e36861/</id>
    <published>2024-04-14T10:46:14.848Z</published>
    <updated>2024-04-14T10:46:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="复制表结构"><a href="#复制表结构" class="headerlink" title="复制表结构"></a>复制表结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name &#123; LIKE old_tbl_name | (LIKE old_tbl_name) &#125;<br></code></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE IF NOT EXISTS tb_base_like (LIKE tb_base); <br></code></pre></td></tr></table></figure><h2 id="时间戳转日期"><a href="#时间戳转日期" class="headerlink" title="时间戳转日期"></a>时间戳转日期</h2><p><a href="http://www.chinaz.com/search/index.shtml?s=13215756937974215344&entry=1&q=UNIX%E6%97%B6%E9%97%B4%E6%88%B3">UNIX时间戳</a>转换为日期用函数： <a href="http://www.chinaz.com/search/index.shtml?s=13215756937974215344&entry=1&q=FROM_UNIXTIME">FROM_UNIXTIME</a>()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select FROM_UNIXTIME(1156219870);<br></code></pre></td></tr></table></figure><h2 id="日期转时间戳"><a href="#日期转时间戳" class="headerlink" title="日期转时间戳"></a>日期转时间戳</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select UNIX_TIMESTAMP(&#x27;2006-11-04 12:23:00&#x27;);<br></code></pre></td></tr></table></figure><h2 id="SQL-CALC-FOUND-ROWS"><a href="#SQL-CALC-FOUND-ROWS" class="headerlink" title="SQL_CALC_FOUND_ROWS"></a>SQL_CALC_FOUND_ROWS</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> SQL_CALC_FOUND_ROWS <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> [<span class="hljs-keyword">table</span>] <span class="hljs-keyword">WHERE</span> ......  limit M, N;<br><span class="hljs-keyword">SELECT</span> FOUND_ROWS();<br><br># SQL_CALC_FOUND_ROWS 告诉MySQL将<span class="hljs-keyword">sql</span>所处理的行数记录下来<br># FOUND_ROWS() 则取到了这个纪录。<br></code></pre></td></tr></table></figure><h3 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h3><blockquote><p>SQL_CALC_FOUND_ROWS只能出现在UNION的第一个SELECT中,否则编译报错！</p><p><strong>limit中 UNION 外时,FOUND_ROWS()返回的所有的行数！ UNION ALL 会返回2倍的行数</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> (<span class="hljs-keyword">select</span>  SQL_CALC_FOUND_ROWS  <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>  actor  limit <span class="hljs-number">1</span>)  <span class="hljs-keyword">union</span>    (<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span>  actor limit <span class="hljs-number">1</span>);<br><span class="hljs-operator">+</span><span class="hljs-comment">----------+------------+-----------+---------------------+</span><br><span class="hljs-operator">|</span> actor_id <span class="hljs-operator">|</span> first_name <span class="hljs-operator">|</span> last_name <span class="hljs-operator">|</span> last_update         <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">----------+------------+-----------+---------------------+</span><br><span class="hljs-operator">|</span>        <span class="hljs-number">1</span> <span class="hljs-operator">|</span> PENELOPE   <span class="hljs-operator">|</span> GUINESS   <span class="hljs-operator">|</span> <span class="hljs-number">2006</span><span class="hljs-number">-02</span><span class="hljs-number">-15</span> <span class="hljs-number">04</span>:<span class="hljs-number">34</span>:<span class="hljs-number">33</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">----------+------------+-----------+---------------------+</span><br><span class="hljs-number">1</span> <span class="hljs-type">row</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br><br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> FOUND_ROWS();<br><span class="hljs-operator">+</span><span class="hljs-comment">--------------+</span><br><span class="hljs-operator">|</span> FOUND_ROWS() <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">--------------+</span><br><span class="hljs-operator">|</span>            <span class="hljs-number">1</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">--------------+</span><br><span class="hljs-number">1</span> <span class="hljs-type">row</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure><h2 id="FIND-IN-SET"><a href="#FIND-IN-SET" class="headerlink" title="FIND_IN_SET"></a>FIND_IN_SET</h2><p>如果 list 是常量，则可以直接用 IN， 否则要用 find_in_set () 函数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id,name,list <span class="hljs-keyword">from</span> tb_test <span class="hljs-keyword">WHERE</span> FIND_IN_SET(<span class="hljs-string">&#x27;daodao&#x27;</span>,list);<br></code></pre></td></tr></table></figure><img src="/posts/b2e36861/onUSAmnMPm.png!large" class alt="img"><h2 id="LOCATE"><a href="#LOCATE" class="headerlink" title="LOCATE"></a>LOCATE</h2><p>判断字符串是否包含指定字符。</p><p><code>locate(substr,str)</code> 函数，如果包含，返回&gt;0的数，否则返回0</p><p>例：判断site表中的url是否包含<code>http://</code>子串,如果不包含则拼接在url字符串开头</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> site <span class="hljs-keyword">set</span> url <span class="hljs-operator">=</span>concat(<span class="hljs-string">&#x27;http://&#x27;</span>,url) <span class="hljs-keyword">where</span> locate(<span class="hljs-string">&#x27;http://&#x27;</span>,url) <span class="hljs-operator">=</span> <span class="hljs-number">0</span> <br></code></pre></td></tr></table></figure><h3 id="GROUP-CONCAT排序"><a href="#GROUP-CONCAT排序" class="headerlink" title="GROUP_CONCAT排序"></a>GROUP_CONCAT排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> sex,GROUP_CONCAT(score <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> score) <span class="hljs-keyword">as</span> score,school <span class="hljs-keyword">FROM</span> group_concat_table<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> sex,school<br></code></pre></td></tr></table></figure><img src="/posts/b2e36861/20171215114327245.jpg" class alt="img"><h2 id="手动提交事务"><a href="#手动提交事务" class="headerlink" title="手动提交事务"></a>手动提交事务</h2><h3 id="设置事务手动提交"><a href="#设置事务手动提交" class="headerlink" title="设置事务手动提交"></a>设置事务手动提交</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> @<span class="hljs-variable">@autocommit</span><span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><h3 id="查询事务是否为自动提交"><a href="#查询事务是否为自动提交" class="headerlink" title="查询事务是否为自动提交"></a>查询事务是否为自动提交</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SHOW</span> VARIABLES <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%autocommit%&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="开启事务"><a href="#开启事务" class="headerlink" title="开启事务"></a>开启事务</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">START</span> transaction; # 也可以使用 <span class="hljs-keyword">BEGIN</span>;<br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> emp <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;06c4c8b4cc0640f6848696aaa0cb5f2b&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">update</span>; <br></code></pre></td></tr></table></figure><h3 id="提交事务"><a href="#提交事务" class="headerlink" title="提交事务"></a>提交事务</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">COMMIT</span>;<br></code></pre></td></tr></table></figure><h3 id="回滚事务"><a href="#回滚事务" class="headerlink" title="回滚事务"></a>回滚事务</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ROLLBACK</span>;<br></code></pre></td></tr></table></figure><h2 id="时区转换"><a href="#时区转换" class="headerlink" title="时区转换"></a>时区转换</h2><p>从东八区转成东一区：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">CONVERT_TZ(<span class="hljs-string">&#x27;2021-01-01 00:00:00&#x27;</span>, <span class="hljs-string">&#x27;+8:00&#x27;</span>, <span class="hljs-string">&#x27;+1:00&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="DATE-FORMAT-函数"><a href="#DATE-FORMAT-函数" class="headerlink" title="DATE_FORMAT 函数"></a>DATE_FORMAT 函数</h2><p>年月日时分秒格式化</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">DATE_FORMAT(NOW(),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="批量将字段名称改为小写"><a href="#批量将字段名称改为小写" class="headerlink" title="批量将字段名称改为小写"></a>批量将字段名称改为小写</h2><h3 id="表名改为小写"><a href="#表名改为小写" class="headerlink" title="表名改为小写"></a>表名改为小写</h3><p>region为库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>concat( <span class="hljs-string">&#x27;alter table &#x27;</span>, TABLE_NAME, <span class="hljs-string">&#x27; rename to &#x27;</span>, <span class="hljs-built_in">LOWER</span>( TABLE_NAME ), <span class="hljs-string">&#x27;;&#x27;</span> ) <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;修改脚本&#x27;</span> <br><span class="hljs-keyword">FROM</span><br>information_schema.TABLES <br><span class="hljs-keyword">WHERE</span><br>TABLE_SCHEMA <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;region&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="列名改为小写"><a href="#列名改为小写" class="headerlink" title="列名改为小写"></a>列名改为小写</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>  CONCAT(<span class="hljs-string">&#x27;alter table &#x27;</span>, TABLE_NAME, <span class="hljs-string">&#x27; change column `&#x27;</span>, COLUMN_NAME, <span class="hljs-string">&#x27;` `&#x27;</span>, <span class="hljs-built_in">LOWER</span>(COLUMN_NAME), <span class="hljs-string">&#x27;` &#x27;</span>, COLUMN_TYPE, <span class="hljs-string">&#x27; &#x27;</span>,<br>  <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> ISNULL(CHARACTER_SET_NAME) <span class="hljs-operator">=</span> <span class="hljs-number">1</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">ELSE</span> CONCAT(<span class="hljs-string">&#x27;CHARACTER SET &#x27;</span>, CHARACTER_SET_NAME) <span class="hljs-keyword">END</span>, <span class="hljs-string">&#x27; &#x27;</span>,<br>  <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> ISNULL(COLLATION_NAME) <span class="hljs-operator">=</span> <span class="hljs-number">1</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">ELSE</span> CONCAT(<span class="hljs-string">&#x27;COLLATE &#x27;</span>, COLLATION_NAME) <span class="hljs-keyword">END</span>, <span class="hljs-string">&#x27; &#x27;</span>,<br>  <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span><br>      IS_NULLABLE <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;NO&#x27;</span> <span class="hljs-keyword">THEN</span> CONCAT(<span class="hljs-string">&#x27;NOT NULL&#x27;</span>, <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> ISNULL(COLUMN_DEFAULT) <span class="hljs-operator">=</span> <span class="hljs-number">0</span> <span class="hljs-keyword">AND</span><br>            LENGTH(<span class="hljs-built_in">TRIM</span>(COLUMN_DEFAULT)) <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span> <span class="hljs-keyword">THEN</span> (CONCAT(<span class="hljs-string">&#x27; DEFAULT &#x27;</span>, <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> (FIND_IN_SET(COLUMN_DEFAULT, <span class="hljs-string">&#x27;CURDATE,CURRENT_DATE,CURTIME,CURRENT_TIME,NOW,CURRENT_TIMESTAMP,LOCALTIME,SYSDATE,LOCALTIMESTAMP,UNIX_TIMESTAMP,FROM_UNIXTIME,UTC_DATE,UTC_TIME,MONTH,MONTHNAME,DAYNAME,DAYOFWEEK,WEEKDAY,WEEK,WEEKOFYEAR,DAYOFYEAR,DAYOFMONTH,QUARTER,HOUR,MINUTE,SECOND,EXTRACT,TIME_TO_SEC,SEC_TO_TIME,TO_DAYS,FROM_DAYS,DATEDIFF,ADDDATE,DATE_ADD,SUBDATE,ADDTIME,SUBTIME,DATE_FORMAT,TIME_FORMAT,GET_FORMAT&#x27;</span>) <span class="hljs-operator">=</span> <span class="hljs-number">0</span> <span class="hljs-keyword">AND</span><br>                  FIND_IN_SET(COLUMN_TYPE, <span class="hljs-string">&#x27;TINYINT,SMALLINT,MEDIUMINT,INT,BIGINT,FLOAT,DOUBLE,DECIMAL&#x27;</span>) <span class="hljs-operator">=</span> <span class="hljs-number">0</span>) <span class="hljs-keyword">THEN</span> CONCAT(<span class="hljs-string">&#x27;\&#x27;&#x27;, COLUMN_DEFAULT, &#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">ELSE</span> <br>COLUMN_DEFAULT <span class="hljs-keyword">END</span>)) <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span>) <span class="hljs-keyword">ELSE</span> CONCAT((<span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> LOCATE(<span class="hljs-string">&#x27;timestamp&#x27;</span>, COLUMN_TYPE) <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">&#x27;NULL &#x27;</span> <span class="hljs-keyword">ELSE</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">END</span>),<br>      <span class="hljs-string">&#x27;DEFAULT &#x27;</span>, <span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> ISNULL(COLUMN_DEFAULT) <span class="hljs-operator">=</span> <span class="hljs-number">1</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">&#x27;NULL&#x27;</span> <span class="hljs-keyword">ELSE</span> (<span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> LENGTH(<span class="hljs-built_in">TRIM</span>(COLUMN_DEFAULT)) <span class="hljs-operator">=</span> <span class="hljs-number">0</span> <span class="hljs-keyword">THEN</span> <span class="hljs-string">&#x27;\&#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">ELSE</span> (<span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> (FIND_IN_SET(COLUMN_DEFAULT, <span class="hljs-string">&#x27;CURDATE,CURRENT_DATE,CURTIME,CURRENT_TIME,NOW,CURRENT_TIMESTAMP,LOCALTIME,SYSDATE,LOCALTIMESTAMP,UNIX_TIMESTAMP,FROM_UNIXTIME,UTC_DATE,UTC_TIME,MONTH,MONTHNAME,DAYNAME,DAYOFWEEK,WEEKDAY,WEEK,WEEKOFYEAR,DAYOFYEAR,DAYOFMONTH,QUARTER,HOUR,MINUTE,SECOND,EXTRACT,TIME_TO_SEC,SEC_TO_TIME,TO_DAYS,FROM_DAYS,DATEDIFF,ADDDATE,DATE_ADD,SUBDATE,ADDTIME,SUBTIME,DATE_FORMAT,TIME_FORMAT,GET_FORMAT&#x27;</span>) <span class="hljs-operator">=</span> <span class="hljs-number">0</span> <span class="hljs-keyword">AND</span><br>                  FIND_IN_SET(COLUMN_TYPE, <span class="hljs-string">&#x27;TINYINT,SMALLINT,MEDIUMINT,INT,BIGINT,FLOAT,DOUBLE,DECIMAL&#x27;</span>) <span class="hljs-operator">=</span> <span class="hljs-number">0</span>) <span class="hljs-keyword">THEN</span> CONCAT(<span class="hljs-string">&#x27;\&#x27;&#x27;, COLUMN_DEFAULT, &#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">ELSE</span> <br>COLUMN_DEFAULT <span class="hljs-keyword">END</span>) <span class="hljs-keyword">END</span>) <span class="hljs-keyword">END</span>) <span class="hljs-keyword">END</span>, <span class="hljs-string">&#x27; &#x27;</span>,<br>  EXTRA,<br>  <span class="hljs-string">&#x27; comment \&#x27;&#x27;, REPLACE(COLUMN_COMMENT,&#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>), <span class="hljs-string">&#x27;\&#x27;</span>;<span class="hljs-string">&#x27;) AS &#x27;</span>修改脚本<span class="hljs-string">&#x27;</span><br><span class="hljs-string">FROM information_schema.COLUMNS</span><br><span class="hljs-string">WHERE TABLE_SCHEMA = &#x27;</span>region<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="查看数据库所占空间大小"><a href="#查看数据库所占空间大小" class="headerlink" title="查看数据库所占空间大小"></a>查看数据库所占空间大小</h2><p>在Mysql中会有一个默认的数据库：<code>information_schema</code>，里面有一个<code>Tables</code>表记录了所有表的信息。使用该表来看数据库所占空间大小的代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">USE information_schema;<br><br><span class="hljs-keyword">SELECT</span> TABLE_SCHEMA, <span class="hljs-built_in">SUM</span>(DATA_LENGTH) <span class="hljs-keyword">FROM</span> TABLES <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> TABLE_SCHEMA;<br></code></pre></td></tr></table></figure><p>可看到各个数据库的所占空间大小，如果想要看到以<code>k</code>为单位的大小，代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">USE information_schema;<br><br><span class="hljs-keyword">SELECT</span> TABLE_SCHEMA, <span class="hljs-built_in">SUM</span>(DATA_LENGTH)<span class="hljs-operator">/</span><span class="hljs-number">1024</span> <span class="hljs-keyword">FROM</span> TABLES <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> TABLE_SCHEMA;<br></code></pre></td></tr></table></figure><p><strong>就是字节数除以1024</strong>，同理，<code>M</code>和<code>G</code>分别是再除一个1024和再除两个1024。</p><h2 id="库表操作"><a href="#库表操作" class="headerlink" title="库表操作"></a>库表操作</h2><h3 id="表重命名"><a href="#表重命名" class="headerlink" title="表重命名"></a>表重命名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">rename <span class="hljs-keyword">table</span> [原表名] <span class="hljs-keyword">to</span> [新表名]<br></code></pre></td></tr></table></figure><h3 id="查询表名"><a href="#查询表名" class="headerlink" title="查询表名"></a>查询表名</h3><p>方式一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show tables<br></code></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT TABLE_NAME, TABLE_COMMENT, TABLE_ROWS FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = &#x27;数据库名&#x27;;<br></code></pre></td></tr></table></figure><h3 id="查询列名"><a href="#查询列名" class="headerlink" title="查询列名"></a>查询列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT column_name FROM information_schema.columns WHERE table_schema=&#x27;数据库名&#x27; AND table_name=&#x27;表名&#x27;<br></code></pre></td></tr></table></figure><h2 id="ON-DUPLICATE-KEY-UPDATE"><a href="#ON-DUPLICATE-KEY-UPDATE" class="headerlink" title="ON DUPLICATE KEY UPDATE"></a>ON DUPLICATE KEY UPDATE</h2><blockquote><p>在MySQL数据库中，如果在insert语句后面带上ON DUPLICATE KEY UPDATE 子句，而要插入的行与表中现有记录的惟一索引或主键中产生重复值，那么就会发生旧行的更新；如果插入的行数据与现有表中记录的唯一索引或者主键不重复，则执行新纪录插入操作。</p><p>说通俗点就是数据库中存在某个记录时，执行这个语句会更新，而不存在这条记录时，就会插入。</p><p>此时使用该语句可以满足需要，但是要<strong>注意几个问题：</strong></p><ul><li>更新的内容中unique key或者primary key最好保证一个，不然不能保证语句执行正确(有任意一个unique key重复就会走更新,当然如果更新的语句中在表中也有重复校验的字段，那么也不会更新成功而导致报错,只有当该条语句没有任何一个unique key重复才会插入新记录)；尽量不对存在多个唯一键的table使用该语句，避免可能导致数据错乱。</li><li>在有可能有并发事务执行的insert 语句情况下不使用该语句，可能导致产生death lock。</li><li>如果数据表id是自动递增的不建议使用该语句；id不连续，如果前面更新的比较多，新增的下一条会相应跳跃的更大。</li><li>该语句是mysql独有的语法，如果可能会设计到其他数据库语言跨库要谨慎使用。</li></ul><p>参考链接：<a href="https://www.cnblogs.com/better-farther-world2099/articles/11737376.html">https://www.cnblogs.com/better-farther-world2099/articles/11737376.html</a></p></blockquote><p>举个栗子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO table (a,b,c)<br>VALUES (1,2,3)  <br>ON DUPLICATE KEY UPDATE<br>c=c+1;<br>  <br>INSERT INTO table (a,b,c)<br>VALUES (1,2,3),(4,5,6)  <br>ON DUPLICATE KEY UPDATE<br>c=VALUES(a)+VALUES(b); <br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;复制表结构&quot;&gt;&lt;a href=&quot;#复制表结构&quot; class=&quot;headerlink&quot; title=&quot;复制表结构&quot;&gt;&lt;/a&gt;复制表结</summary>
      
    
    
    
    <category term="中间件" scheme="https://blog.yahyav2rayssr.top/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="MySQL" scheme="https://blog.yahyav2rayssr.top/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://blog.yahyav2rayssr.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>npm 常用命令</title>
    <link href="https://blog.yahyav2rayssr.top/posts/63e97dc8/"/>
    <id>https://blog.yahyav2rayssr.top/posts/63e97dc8/</id>
    <published>2024-04-14T10:46:14.848Z</published>
    <updated>2024-04-14T10:46:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><h3 id="npm-查看缓存目录"><a href="#npm-查看缓存目录" class="headerlink" title="npm 查看缓存目录"></a>npm 查看缓存目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config get cache<br></code></pre></td></tr></table></figure><h3 id="npm-清理缓存"><a href="#npm-清理缓存" class="headerlink" title="npm 清理缓存"></a>npm 清理缓存</h3><blockquote><p>参考链接：<a href="http://claude-ray.com/2019/12/06/npm-install-without-cache/">http://claude-ray.com/2019/12/06/npm-install-without-cache/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm cache clean -f<br></code></pre></td></tr></table></figure><h2 id="npm-设置代理"><a href="#npm-设置代理" class="headerlink" title="npm 设置代理"></a>npm 设置代理</h2><h3 id="http-代理"><a href="#http-代理" class="headerlink" title="http 代理"></a>http 代理</h3><p>npm 原生支持 http 代理，直接设置即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">假设本地代理端口为 8080</span><br>npm config set proxy &quot;http://localhost:8080&quot;<br>npm config set https-proxy &quot;http://localhost:8080&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">有用户密码的代理</span><br>npm config set proxy &quot;http://username:password@localhost:8080&quot;<br>npm confit set https-proxy &quot;http://username:password@localhost:8080&quot;<br></code></pre></td></tr></table></figure><h3 id="socks5-代理"><a href="#socks5-代理" class="headerlink" title="socks5 代理"></a>socks5 代理</h3><p>npm 不支持 socks 代理，但是我们可以用一个工具将 socks 代理转成 http 代理，然后将 npm 代理地址设置到这个工具的地址。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">假设本地 socks5 代理端口为 1080</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">首先安装转换工具</span><br>npm install -g http-proxy-to-socks<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后使用这个工具监听 8081 端口,支持 http 代理，然后所有 1080 的 socks 代理数据都将转换成 http 的代理数据发送到 8081 上</span><br>hpts -s localhost:8081 -p 1080<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">最后设置 npm 代理为 8081</span><br>npm config set proxy &quot;http://localhost:8081&quot;<br>npm config set https-proxy &quot;http://localhost:8081&quot;<br></code></pre></td></tr></table></figure><p>相当于又加了一个中间层，将 socks 转成 http。</p><h3 id="删除代理"><a href="#删除代理" class="headerlink" title="删除代理"></a>删除代理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config delete proxy<br>npm config delete https-proxy<br></code></pre></td></tr></table></figure><p></p><h2 id="npm-查看包信息"><a href="#npm-查看包信息" class="headerlink" title="npm 查看包信息"></a>npm 查看包信息</h2><blockquote><p>下面以 jquery 为例作为演示。</p></blockquote><h3 id="查询包所有版本信息"><a href="#查询包所有版本信息" class="headerlink" title="查询包所有版本信息"></a>查询包所有版本信息</h3><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm view &lt;PACKAGE_NAME&gt; versions [--json]<br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查询 jquery 的所有信息</span><br>npm view jquery versions --json<br></code></pre></td></tr></table></figure><h3 id="查询包最新版本"><a href="#查询包最新版本" class="headerlink" title="查询包最新版本"></a>查询包最新版本</h3><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm view &lt;PACKAGE_NAME&gt; version<br><br><span class="hljs-comment"># 或者</span><br>npm info &lt;PACKAGE_NAME&gt;<br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm view jquery version<br><br><span class="hljs-comment"># 或者</span><br>npm info jquery<br></code></pre></td></tr></table></figure><h3 id="查询包已安装版本"><a href="#查询包已安装版本" class="headerlink" title="查询包已安装版本"></a>查询包已安装版本</h3><p>语法：</p><p>局部依赖查询：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm <span class="hljs-built_in">ls</span> &lt;PACKAGE_NAME&gt;<br><br><span class="hljs-comment"># 或者</span><br>npm list &lt;PACKAGE_NAME&gt;<br></code></pre></td></tr></table></figure><p>全局依赖查询：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> ls &lt;PACKAGE_NAME&gt; -g<br><br><span class="hljs-comment"># 或者</span><br><span class="hljs-built_in">npm</span> list &lt;PACKAGE_NAME&gt; -g<br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm <span class="hljs-built_in">ls</span> jquery -g<br></code></pre></td></tr></table></figure><h2 id="npm-查询依赖版本列表"><a href="#npm-查询依赖版本列表" class="headerlink" title="npm 查询依赖版本列表"></a>npm 查询依赖版本列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm info &lt;依赖名称&gt;<br></code></pre></td></tr></table></figure><h2 id="npm-查看已安装的依赖包"><a href="#npm-查看已安装的依赖包" class="headerlink" title="npm 查看已安装的依赖包"></a>npm 查看已安装的依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm list --depth=0<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;缓存&quot;&gt;&lt;a href=&quot;#缓存&quot; class=&quot;headerlink&quot; title=&quot;缓存&quot;&gt;&lt;/a&gt;缓存&lt;/h2&gt;&lt;h3 id</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.yahyav2rayssr.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="npm" scheme="https://blog.yahyav2rayssr.top/categories/%E5%89%8D%E7%AB%AF/npm/"/>
    
    
    <category term="npm" scheme="https://blog.yahyav2rayssr.top/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>翻墙杂项</title>
    <link href="https://blog.yahyav2rayssr.top/posts/126dc918/"/>
    <id>https://blog.yahyav2rayssr.top/posts/126dc918/</id>
    <published>2024-04-14T10:46:14.848Z</published>
    <updated>2024-04-14T10:46:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="一级域名"><a href="#一级域名" class="headerlink" title="一级域名"></a>一级域名</h2><p>yahyav2rayssr.top</p><h2 id="服务器信息"><a href="#服务器信息" class="headerlink" title="服务器信息"></a>服务器信息</h2><table><thead><tr><th>IP</th><th>系统</th><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td>216.246.21.248</td><td>centos-7.9-x86_64</td><td>root</td><td>Yao8282925ok</td></tr><tr><td>103.114.162.109</td><td>centos-7.9-x86_64</td><td>root</td><td></td></tr></tbody></table><h2 id="namesilo"><a href="#namesilo" class="headerlink" title="namesilo"></a>namesilo</h2><table><thead><tr><th>用户名</th><th>邮箱</th><th>密码</th></tr></thead><tbody><tr><td>yahya-yaoyuming</td><td><a href="mailto:&#x36;&#x37;&#50;&#53;&#53;&#x34;&#55;&#56;&#52;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d;">&#x36;&#x37;&#50;&#53;&#53;&#x34;&#55;&#56;&#52;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>Yao88219620ko!</td></tr></tbody></table><h2 id="NS-nameserver-服务器"><a href="#NS-nameserver-服务器" class="headerlink" title="NS nameserver 服务器"></a>NS nameserver 服务器</h2><h3 id="cloudflare"><a href="#cloudflare" class="headerlink" title="cloudflare"></a>cloudflare</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">carter<span class="hljs-selector-class">.ns</span><span class="hljs-selector-class">.cloudflare</span><span class="hljs-selector-class">.com</span><br>jen<span class="hljs-selector-class">.ns</span><span class="hljs-selector-class">.cloudflare</span>.com<br></code></pre></td></tr></table></figure><h3 id="dnspod"><a href="#dnspod" class="headerlink" title="dnspod"></a>dnspod</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">sandpaper<span class="hljs-selector-class">.dnspod</span><span class="hljs-selector-class">.net</span><br>broderick<span class="hljs-selector-class">.dnspod</span>.net<br></code></pre></td></tr></table></figure><h2 id="cloudflare-1"><a href="#cloudflare-1" class="headerlink" title="cloudflare"></a>cloudflare</h2><table><thead><tr><th>邮箱</th><th>密码</th></tr></thead><tbody><tr><td><a href="mailto:&#x36;&#x37;&#50;&#x35;&#53;&#x34;&#55;&#x38;&#52;&#x40;&#113;&#x71;&#46;&#99;&#x6f;&#109;">&#x36;&#x37;&#50;&#x35;&#53;&#x34;&#55;&#x38;&#52;&#x40;&#113;&#x71;&#46;&#99;&#x6f;&#109;</a></td><td>Yao88219620ko!</td></tr></tbody></table><h3 id="端口说明文档"><a href="#端口说明文档" class="headerlink" title="端口说明文档"></a>端口说明文档</h3><p>参考链接：<a href="https://developers.cloudflare.com/fundamentals/get-started/reference/network-ports/">https://developers.cloudflare.com/fundamentals/get-started/reference/network-ports/</a></p><p>已开放HTTPS端口有：443, 2053, 2083, 2087, 2096, 8443</p><h3 id="全局-API-KEY"><a href="#全局-API-KEY" class="headerlink" title="全局 API KEY"></a>全局 API KEY</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">66</span>f6f58b393232b878e6a855ab<span class="hljs-number">40944431724</span><br></code></pre></td></tr></table></figure><h3 id="端口已用一览"><a href="#端口已用一览" class="headerlink" title="端口已用一览"></a>端口已用一览</h3><table><thead><tr><th>端口号</th><th>用途</th></tr></thead><tbody><tr><td>8443</td><td>VPS X-UI 面板</td></tr><tr><td>2096</td><td>VMESS 协议端口号</td></tr><tr><td>2087</td><td>-</td></tr><tr><td>2083</td><td>VLESS 协议端口号</td></tr><tr><td>2053</td><td>Nginx 文件服务器</td></tr><tr><td>443</td><td>-</td></tr></tbody></table><h3 id="DNS-缓存清除"><a href="#DNS-缓存清除" class="headerlink" title="DNS 缓存清除"></a>DNS 缓存清除</h3><ol><li>DNS 解析 CloudFlare 1.1.1.1、1.0.0.1 的类型：</li></ol><p>​<a href="https://cloudflare-dns.com/purge-cache/">https://cloudflare-dns.com/purge-cache/</a></p><ol start="2"><li>DNS 解析为 Google 8.8.8.8、8.8.4.4 的类型：</li></ol><p>​<a href="https://developers.google.com/speed/public-dns/cache?hl=zh-cn">https://developers.google.com/speed/public-dns/cache?hl=zh-cn</a></p><h3 id="DNS-映射一览"><a href="#DNS-映射一览" class="headerlink" title="DNS 映射一览"></a>DNS 映射一览</h3><table><thead><tr><th>类型</th><th>名称</th><th>内容</th></tr></thead><tbody><tr><td>A</td><td>ryzen</td><td>103.114.162.109</td></tr><tr><td>A</td><td>vmess</td><td>216.246.21.248</td></tr><tr><td>CNAME</td><td>blog</td><td>yaoyuming.github.io</td></tr></tbody></table><h2 id="hosteONS"><a href="#hosteONS" class="headerlink" title="hosteONS"></a>hosteONS</h2><blockquote><p>VPS 服务器信息。</p><p>IP付款链接： <a href="https://my.hosteons.com/viewinvoice.php?id=107772&paymentsuccess=true">https://my.hosteons.com/viewinvoice.php?id=107772&amp;paymentsuccess=true</a></p></blockquote><table><thead><tr><th>邮箱</th><th>密码</th></tr></thead><tbody><tr><td><a href="mailto:&#54;&#55;&#50;&#53;&#53;&#x34;&#55;&#x38;&#52;&#64;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d;">&#54;&#55;&#50;&#53;&#53;&#x34;&#55;&#x38;&#52;&#64;&#113;&#113;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>Yao88219620ko!</td></tr></tbody></table><h2 id="x-ui"><a href="#x-ui" class="headerlink" title="x-ui"></a>x-ui</h2><h3 id="面板信息"><a href="#面板信息" class="headerlink" title="面板信息"></a>面板信息</h3><table><thead><tr><th>访问地址</th><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td><a href="https://216.246.21.248:8443/">https://216.246.21.248:8443/</a> 或者 <a href="https://vmess.yahyav2rayssr.top:8443/">https://vmess.yahyav2rayssr.top:8443</a></td><td>admin</td><td>7613302589</td></tr><tr><td><a href="https://103.114.162.109:8443/">https://103.114.162.109:8443/</a> 或者 <a href="https://ryzen.yahyav2rayssr.top:8443/">https://ryzen.yahyav2rayssr.top:8443</a></td><td>admin</td><td>7613302589</td></tr></tbody></table><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><blockquote><p>这里采用 centos7-minin 系统。</p></blockquote><p>系统安装证书前置命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install crontabs<br>yum -y install openssl openssl-devel<br>curl https://get.acme.sh | sh<br><br>yum update -y          # Debian/Ubuntu 命令<br>yum install -y curl socat    #Debian/Ubuntu 命令<br></code></pre></td></tr></table></figure><p>x-ui 面板安装：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">bash &lt;(curl -Ls https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/vaxilu/</span>x-ui<span class="hljs-regexp">/master/i</span>nstall.sh) <br></code></pre></td></tr></table></figure><h2 id="vmess-x2F-vless-地址转换"><a href="#vmess-x2F-vless-地址转换" class="headerlink" title="vmess&#x2F;vless 地址转换"></a>vmess&#x2F;vless 地址转换</h2><p><a href="https://sub-zh.vercel.app/">https://sub-zh.vercel.app/</a></p><h2 id="DNS-配置"><a href="#DNS-配置" class="headerlink" title="DNS 配置"></a>DNS 配置</h2><p>参考链接：<a href="https://limbopro.com/archives/DoH.html#DNS-over-HTTPS/TLS_(DoH/DoT)%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F&gsc.tab=0">https://limbopro.com/archives/DoH.html#DNS-over-HTTPS/TLS_(DoH/DoT)%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F&amp;gsc.tab=0</a></p><p><strong>可用的DNS服务器列表（支持DoT）</strong></p><table><thead><tr><th align="center">DNS服务器（支持DoT）</th><th align="center">服务商</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><strong>223.5.5.5</strong> &#x2F; <strong>223.6.6.6</strong> &#x2F; 2400:3200::1 &#x2F; 2400:3200:baba::1</td><td align="center"><a href="https://www.alidns.com/">Alidns</a></td><td align="center"><a href="https://www.alidns.com/">参阅</a></td></tr><tr><td align="center">119.29.29.29 or 182.254.116.116 &#x2F; 2402:4e00:: &#x2F; 1.12.12.12 &#x2F; 120.53.53.53</td><td align="center">Tencent&#x2F;<a href="https://dns.pub/">DNSPOD</a></td><td align="center"><a href="https://dns.pub/">参阅</a></td></tr><tr><td align="center"><strong>8.8.8.8</strong> or <strong>8.8.4.4</strong> 2001:4860:4860::8888 or 2001:4860:4860::8844</td><td align="center">Google</td><td align="center"><a href="https://developers.google.com/speed/public-dns/privacy">参阅</a></td></tr><tr><td align="center"><strong>1.1.1.1</strong> or <strong>1.0.0.1</strong> 2606:4700:4700::1111 or 2606:4700:4700::1001</td><td align="center">Cloudflare</td><td align="center"><a href="https://www.cloudflare.com/zh-cn/dns/">参阅</a></td></tr><tr><td align="center"><strong>94.140.14.14</strong> or <strong>94.140.15.15</strong> for “Default”;</td><td align="center">Adguard</td><td align="center"><a href="https://adguard.com/en/blog/adguard-dns-announcement.html">参阅</a></td></tr><tr><td align="center"><strong>94.140.14.15</strong> or <strong>94.140.15.16</strong> for “Family protection”.</td><td align="center">Adguard</td><td align="center"><a href="https://adguard.com/en/blog/adguard-dns-announcement.html">参阅</a></td></tr></tbody></table><p><strong>可用的DNS服务器列表（支持DoH）</strong></p><p>可用的 DNS-over-HTTPS (DoH) 解析服务完整参阅：<a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">传送门</a>；</p><table><thead><tr><th align="center">DoH服务器（URL）</th><th align="center">服务商</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://dns.alidns.com/dns-query">https://dns.alidns.com/dns-query</a></td><td align="center">Alidns</td><td align="center"><a href="https://www.alidns.com/">参阅</a></td></tr><tr><td align="center"><a href="https://cloudflare-dns.com/dns-query">https://cloudflare-dns.com/dns-query</a></td><td align="center">Cloudflare</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr><tr><td align="center"><a href="https://mozilla.cloudflare-dns.com/dns-query">https://mozilla.cloudflare-dns.com/dns-query</a></td><td align="center">Cloudflare</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr><tr><td align="center"><a href="https://dns.google/dns-query">https://dns.google/dns-query</a></td><td align="center">Google</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr><tr><td align="center"><a href="https://dns.adguard.com/dns-query">https://dns.adguard.com/dns-query</a></td><td align="center">Adguard</td><td align="center"><a href="https://adguard.com/en/blog/adguard-dns-announcement.html">参阅</a></td></tr><tr><td align="center"><a href="https://dns-family.adguard.com/dns-query">https://dns-family.adguard.com/dns-query</a></td><td align="center">Adguard</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr></tbody></table><p><strong>建议日常使用 DNS 如下：</strong></p><table><thead><tr><th>DNS</th><th>说明</th></tr></thead><tbody><tr><td>223.5.5.5、223.6.6.6</td><td>阿里云的 DNS 服务器</td></tr><tr><td>119.29.29.29</td><td>腾讯云的 DNS 服务器</td></tr><tr><td>114.114.114.114</td><td>国内移动、电信、联通的通用的 DNS，因为存在污染问题，优先级放到最低</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;一级域名&quot;&gt;&lt;a href=&quot;#一级域名&quot; class=&quot;headerlink&quot; title=&quot;一级域名&quot;&gt;&lt;/a&gt;一级域名&lt;/h</summary>
      
    
    
    
    <category term="工具" scheme="https://blog.yahyav2rayssr.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://blog.yahyav2rayssr.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA maven 配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/a3c558a3/"/>
    <id>https://blog.yahyav2rayssr.top/posts/a3c558a3/</id>
    <published>2024-04-14T10:46:14.848Z</published>
    <updated>2024-04-14T10:46:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="idea-配置-maven-依赖优先从指定本地仓库获取"><a href="#idea-配置-maven-依赖优先从指定本地仓库获取" class="headerlink" title="idea 配置 maven 依赖优先从指定本地仓库获取"></a>idea 配置 maven 依赖优先从指定本地仓库获取</h1><p>在设置中搜索 Runner ,在VM Option中设置参数 <code>-DarchetypeCatalog=internal</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">-DarchetypeCatalog=internal<br></code></pre></td></tr></table></figure><img src="/posts/a3c558a3/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlc2h1bmNoZW5n,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述" style="zoom: 33%;"><h1 id="maven-离线模式及设置"><a href="#maven-离线模式及设置" class="headerlink" title="maven 离线模式及设置"></a>maven 离线模式及设置</h1><h2 id="下载-maven-依赖"><a href="#下载-maven-依赖" class="headerlink" title="下载 maven 依赖"></a>下载 maven 依赖</h2><p>通过idea创建maven项目，maven插件会自动将maven依赖下载到本地仓库。</p><h2 id="复制本地仓库"><a href="#复制本地仓库" class="headerlink" title="复制本地仓库"></a>复制本地仓库</h2><p>先要找到maven的本地仓库，可以通过 <code>file-&gt;settings-&gt;maven</code> 流程查看到maven本地仓库的位置，然后直接复制，粘贴到生产环境下。</p><h2 id="修改-maven-配置"><a href="#修改-maven-配置" class="headerlink" title="修改 maven 配置"></a>修改 maven 配置</h2><p>这里指修改生产环境（即不能联网）下的maven的settings.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br> <br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span><br> <br><span class="hljs-comment">&lt;!-- 这个就是第二步，maven本地仓库粘贴在生产环境下的位置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>D:\Apache\apache-maven-3.6.3<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 这个就是第二步，maven本地仓库粘贴在生产环境下的位置 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>file://D:\Apache\apache-maven-3.6.3<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="步骤四，设置-idea"><a href="#步骤四，设置-idea" class="headerlink" title="步骤四，设置 idea"></a>步骤四，设置 idea</h2><p>通过 <code>file-&gt;settings-&gt;maven</code> 流程，勾选 work offline 选项，并填写上 maven 本地仓库和修改过的 settings.xml 的位置</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;idea-配置-maven-依赖优先从指定本地仓库获取&quot;&gt;&lt;a href=&quot;#idea-配置-maven-依赖优先从指定本地仓库获取&quot; class=&quot;headerlink&quot; title=&quot;idea 配置 maven 依赖优先从指定本地仓库获取&quot;&gt;&lt;/a&gt;idea </summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
    <category term="maven" scheme="https://blog.yahyav2rayssr.top/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 常用配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/4a9b2d4f/"/>
    <id>https://blog.yahyav2rayssr.top/posts/4a9b2d4f/</id>
    <published>2024-04-14T10:46:14.848Z</published>
    <updated>2024-04-14T10:46:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="右键增加-Open-Folder-as-IntelliJ-IDEA-Project"><a href="#右键增加-Open-Folder-as-IntelliJ-IDEA-Project" class="headerlink" title="右键增加 Open Folder as IntelliJ IDEA Project"></a>右键增加 Open Folder as IntelliJ IDEA Project</h2><p>1、先<code>win+R</code>打开运行窗口，输入<code>regedit</code>，进入到<a href="https://so.csdn.net/so/search?q=%E6%B3%A8%E5%86%8C%E8%A1%A8&spm=1001.2101.3001.7020">注册表</a>编辑器中，然后进入到下面的目录 <code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell</code></p><p>新建项，取名为 Intellij IDEA，如下图所示：</p><ol><li><p>修改 Intellij IDEA 项下的默认的数值数据为 Open Folder as IntelliJ IDEA Project</p></li><li><p>新建一个字符串值，名字为 Icon，数值为 idea64.exe 所在目录的绝对路径</p></li></ol><img src="/posts/4a9b2d4f/image-20220529112715786.png" alt="image-20220529112715786" style="zoom:67%;"><p>然后在左边的 Intellij IDEA 的项上右击，选择新建 &gt; 项,项名为 command，修改默认的数值数据为 “idea64.exe所在目录的绝对路径” + “%V”，如下图所示：</p><img src="/posts/4a9b2d4f/image-20220529113557732.png" alt="image-20220529113557732" style="zoom:67%;"><p>然后重启电脑，就可以看到下面的效果了，如下图所示：</p><img src="/posts/4a9b2d4f/image-20220529113916555.png" alt="image-20220529113916555" style="zoom:67%;"><h2 id="关闭自动弹出-Documentation"><a href="#关闭自动弹出-Documentation" class="headerlink" title="关闭自动弹出 Documentation"></a>关闭自动弹出 Documentation</h2><p>取消勾选即可。</p><img src="/posts/4a9b2d4f/image-20220926003143123.png" alt="image-20220926003143123" style="zoom: 67%;"><h2 id="代码行宽度超出限制时不自动换行"><a href="#代码行宽度超出限制时不自动换行" class="headerlink" title="代码行宽度超出限制时不自动换行"></a><strong>代码行宽度超出限制时不自动换行</strong></h2><p>打开 Settings &gt; Editor &gt; Code Style &gt; Java</p><p>设置 <code>Hard Wrap at</code> 的值，默认为120，或者将 <code>Wrap on typing</code> 设置为 false，如下所示：</p><img src="/posts/4a9b2d4f/image-20221103094718687.png" alt="image-20221103094718687" style="zoom:67%;"><h2 id="IntelliJ-IDEA-修改配置文件位置"><a href="#IntelliJ-IDEA-修改配置文件位置" class="headerlink" title="IntelliJ IDEA 修改配置文件位置"></a>IntelliJ IDEA 修改配置文件位置</h2><p>找到 idea.properties 文件的位置，这里找下的位置如下：</p><p>C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\bin\idea.properties</p><p><strong>修改配置文件位置：</strong></p><blockquote><p>注意：不要修改为Idea的安装目录，因为这样会导致自动更新失败。错误示例： </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">idea.config.path</span>=<span class="hljs-string">C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\config</span><br><span class="hljs-attr">idea.system.path</span>=<span class="hljs-string">C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\system</span><br></code></pre></td></tr></table></figure></blockquote><p>修改前：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># idea.config.path=$&#123;user.home&#125;/.IntelliJIdea/config</span><br><span class="hljs-comment"># idea.system.path=$&#123;user.home&#125;/.IntelliJIdea/system</span><br></code></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">idea.config.path</span>=<span class="hljs-string">D:\IntelliJIdea\config</span><br><span class="hljs-attr">idea.system.path</span>=<span class="hljs-string">D:\IntelliJIdea\system</span><br></code></pre></td></tr></table></figure><blockquote><p>注意：Idea启动时，依旧会从默认位置中的 idea64.exe.vmoptions 中读配置。其他配置会从上面修改后的指定的路径中去读。所以：默认的路径下要保留 idea64.exe.vmoptions，其他可以删除。</p></blockquote><p>最后重启 idea 即可生效。</p><h2 id="IntelliJ-IDEA-修改内存大小"><a href="#IntelliJ-IDEA-修改内存大小" class="headerlink" title="IntelliJ IDEA 修改内存大小"></a>IntelliJ IDEA 修改内存大小</h2><p>找到 <code>idea64.exe.vmoptions</code> 的位置，默认是位于 C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\bin\ 目录下，如果修改配置文件的位置，则在 D:\IntelliJIdea\config 目录下会有一份额外的同名配置文件，配置文件主要调整前三个参数，整体参数配置参考如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">-Xms1024m # 最小内存<br>-Xmx4096m # 最大内存<br>-XX:ReservedCodeCacheSize=512m # 预留代码缓存的大小<br>-XX:+UseG1GC<br>-XX:SoftRefLRUPolicyMSPerMB=50<br>-XX:CICompilerCount=2<br>-XX:+HeapDumpOnOutOfMemoryError<br>-XX:-OmitStackTraceInFastThrow<br>-ea<br>-Dsun.io.useCanonCaches=false<br>-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;<br>-Djdk.attach.allowAttachSelf=true<br>-Djdk.module.illegalAccess.silent=true<br>-Dkotlinx.coroutines.debug=off<br></code></pre></td></tr></table></figure><p>控制内存使用显示状态的打开方式参考下图：</p><img src="/posts/4a9b2d4f/image-20221110005020304.png" alt="image-20221110005020304" style="zoom:67%;"><p>最后在 idea 中打开 Edit Custom VM Options 配置：</p><img src="/posts/4a9b2d4f/image-20221110005150838.png" alt="image-20221110005150838" style="zoom:67%;"><p>配置内容和上面的 <code>idea64.exe.vmoptions</code> 保持一致，重启 idea 即可生效。</p><h2 id="编译-spring-configuration-metadata-json-文件"><a href="#编译-spring-configuration-metadata-json-文件" class="headerlink" title="编译 spring-configuration-metadata.json 文件"></a>编译 spring-configuration-metadata.json 文件</h2><p>在idea设置中搜索 Annotation Processors，接下来勾住 Enable annonation processing 就完成了。</p><p>我们可以在编译后的文件中看到自动生成的 spring-configuration-metadata.json，配置效果如下：</p><img src="/posts/4a9b2d4f/image-20221111152028395.png" alt="image-20221111152028395" style="zoom:67%;"><img src="/posts/4a9b2d4f/image-20221111152144742.png" alt="image-20221111152144742" style="zoom:67%;"><h2 id="IDEA-设置-SQL-格式化-关键字大写"><a href="#IDEA-设置-SQL-格式化-关键字大写" class="headerlink" title="IDEA 设置 SQL 格式化(关键字大写)"></a>IDEA 设置 SQL 格式化(关键字大写)</h2><p>设置 settsings(Ctrl+Alt+S) –&gt; Editor –&gt; Code Style –&gt; SQL 将 keywords 设置为大写(To upper)</p><p>如下图所示：</p><img src="/posts/4a9b2d4f/image-20221208113752621.png" alt="image-20221208113752621" style="zoom:67%;"><h2 id="设置作者注释"><a href="#设置作者注释" class="headerlink" title="设置作者注释"></a>设置作者注释</h2><p><strong>File and Code Templates 配置</strong></p><p>点击 File -&gt; Settings -&gt; Editor -&gt; File And Code Templates，在右侧的 File Header 中填入以下信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span>: $&#123;NAME&#125;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span>: yahya</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@email</span>: yahya@sf-express.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span>: $&#123;YEAR&#125;/$&#123;MONTH&#125;/$&#123;DAY&#125; $&#123;HOUR&#125;:$&#123;MINUTE&#125;</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><p><strong>Live Templates 配置</strong></p><p>点击 File -&gt; Settings -&gt; Editor -&gt; Live Templates，点击右侧的 + 号按钮新建一个 Template Group，命名为 Description。</p><p>然后在名为 Description 的 Template Group 上面在新建一个 Live Template，内容填充如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span>: $description$</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span>: $user$</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@email</span>: $email$</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span>: $date$ $time$</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><p>整体配置效果图如下所示：</p><img src="/posts/4a9b2d4f/image-20221222150438908.png" class alt="image-20221222150438908"><p>然后再点击 Edit Variables 按钮，为每个变量设置值，效果如下：</p><img src="/posts/4a9b2d4f/image-20221222150522109.png" alt="image-20221222150522109" style="zoom:67%;"><p>常用内置变量定义如下：</p><ul><li>${PACKAGE_NAME} - 将在其中创建新类或接口的目标包的名称</li><li>${PROJECT_NAME} - 当前项目的名称</li><li>${FILE_NAME} - 将要创建的文件的名称</li><li>${NAME} - 您在创建文件的过程中，在 “新建文件” 对话框中指定的新文件的名称</li><li>${USER} - 当前用户的登录名</li><li>${DATE} - 当前系统日期</li><li>${TIME} - 当前系统时间</li><li>${YEAR} - 本年度</li><li>${MONTH} - 本月</li><li>${DAY} - 当月的当前日期</li><li>${HOUR} - 当前时间</li><li>${MINUTE} - 当前分钟。</li><li>${PRODUCT_NAME} - 将在其中创建文件的 IDE 的名称。</li><li>${MONTH_NAME_SHORT} - 月份名称的前3个字母。示例：1月，2月等。</li><li>${MONTH_NAME_FULL} - 一个月的全名。示例：1月，2月等</li></ul><h2 id="去除-Usage-提示"><a href="#去除-Usage-提示" class="headerlink" title="去除 Usage 提示"></a>去除 Usage 提示</h2><p>点击 Settings -&gt; Editor -&gt; Inlay Hints，在 Code vision 栏取消 Usages 的勾选项，如下图所示：</p><img src="/posts/4a9b2d4f/image-20230131110248142.png" alt="image-20230131110248142" style="zoom:80%;"><h2 id="取消-indexing"><a href="#取消-indexing" class="headerlink" title="取消 indexing"></a>取消 indexing</h2><p>File -&gt; Settings 中直接搜索 index</p><img src="/posts/4a9b2d4f/image-20230228164823678.png" alt="image-20230228164823678" style="zoom:67%;"><p>然后旁边两个选项都选择 Ask before download</p><h2 id="关闭页面显示的浏览器图标"><a href="#关闭页面显示的浏览器图标" class="headerlink" title="关闭页面显示的浏览器图标"></a>关闭页面显示的浏览器图标</h2><p>依次点击 File -&gt; Settings -&gt; Tools -&gt; Web Browsers and Preview，将多余的勾选项全部取消勾选，最终效果如下：</p><img src="/posts/4a9b2d4f/image-20230404103115943.png" alt="image-20230404103115943" style="zoom:67%;"><h2 id="设置默认换行符"><a href="#设置默认换行符" class="headerlink" title="设置默认换行符"></a>设置默认换行符</h2><p>依次展开 File -&gt; Settings -&gt; Editor -&gt; Code Style，可以看到，默认是 System-Dependent，这个其实还是很牛叉的，根据系统自动配置，但是你是 windows 系统，默认是 CRLF，服务器是 Linux，默认效果如下图所示：</p><img src="/posts/4a9b2d4f/image-20230422233552207.png" alt="image-20230422233552207" style="zoom: 67%;"><h2 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h2><blockquote><p>要求：双方代码一致，否则远程调试无法启动。</p></blockquote><h3 id="IDEA-中指定-Debug-服务器"><a href="#IDEA-中指定-Debug-服务器" class="headerlink" title="IDEA 中指定 Debug 服务器"></a>IDEA 中指定 Debug 服务器</h3><p>点击主窗口菜单 Run &#x2F; Edit Configurations，打开“Run&#x2F;Debug Configurations”窗口；</p><p>点击工具栏上的“+”按钮，下拉菜单中选择“Remote”；</p><p>设置 Host 为远程服务器的域名或IP，保持 Port&#x3D;5005 无需调整；</p><p>复制命令行参数，形如 -agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;5005</p><img src="/posts/4a9b2d4f/常用配置/image-20230602100148022-16856713096751.png" alt="image-20230602100148022" style="zoom:80%;"><h3 id="远程服务中开启-Debug-服务"><a href="#远程服务中开启-Debug-服务" class="headerlink" title="远程服务中开启 Debug 服务"></a>远程服务中开启 Debug 服务</h3><p><strong>对于 SpringBoot</strong></p><p>命令行添加选项，并重启：</p><p>注意新参数必须在 -jar 之前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jar -agentlib:jdwp=transport=dt_socket,server=y,<span class="hljs-built_in">suspend</span>=n,address=5005 -jar test.jar<br></code></pre></td></tr></table></figure><p><strong>对于 Tomcat</strong></p><p>启动脚本中添加选项，并重启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo vim $CATALINA_HOME/bin/catalina.sh</span><br><br>JAVA_OPTS=<span class="hljs-string">&quot;<span class="hljs-variable">$JAVA_OPTS</span> -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&quot;</span><br></code></pre></td></tr></table></figure><p><strong>远程服务器防火墙端口放行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo vim /etc/sysconfig/iptables</span><br><br>-A INPUT -m state --state NEW -m tcp -p tcp --dport 5005 -j ACCEPT<br><br><span class="hljs-comment"># 重启生效</span><br>sudo systemctl restart iptables<br></code></pre></td></tr></table></figure><h2 id="git-commit-模态框转换为侧边栏标签"><a href="#git-commit-模态框转换为侧边栏标签" class="headerlink" title="git commit 模态框转换为侧边栏标签"></a>git commit 模态框转换为侧边栏标签</h2><img src="/posts/4a9b2d4f/image-20231121110341651.png" alt="image-20231121110341651" style="zoom:80%;"><p>勾选 Use non-modal commit interface 选项即可。</p><h2 id="查找所有未引用的代码"><a href="#查找所有未引用的代码" class="headerlink" title="查找所有未引用的代码"></a>查找所有未引用的代码</h2><p>点击 code 菜单，以此展开 Analyze Code -&gt; Run Inspection by Name，或者直接 通过 Ctrl + Alt +Shift + I 快捷键进行操作。</p><img src="/posts/4a9b2d4f/image-20231206150020294.png" alt="image-20231206150020294" style="zoom:80%;"><p>输入undeclared，打开 Unused declaration 这个检查项。</p><img src="/posts/4a9b2d4f/image-20231206150215735.png" alt="image-20231206150215735" style="zoom:80%;"><p>之后进行选择。</p><img src="/posts/4a9b2d4f/image-20231206150329971.png" alt="image-20231206150329971" style="zoom:80%;"><p>idea 提供 4 中解决方式处理未引用项，根据自身需要选择即可。</p><img src="/posts/4a9b2d4f/image-20231206150354306.png" alt="image-20231206150354306" style="zoom:80%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;右键增加-Open-Folder-as-IntelliJ-IDEA-Project&quot;&gt;&lt;a href=&quot;#右键增加-Open-Fo</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
  </entry>
  
</feed>
