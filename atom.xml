<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yahya的博客</title>
  
  <subtitle>学习笔记</subtitle>
  <link href="https://blog.yahyav2rayssr.top/atom.xml" rel="self"/>
  
  <link href="https://blog.yahyav2rayssr.top/"/>
  <updated>2023-06-19T14:24:39.887Z</updated>
  <id>https://blog.yahyav2rayssr.top/</id>
  
  <author>
    <name>Yahya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jetty 基础概念</title>
    <link href="https://blog.yahyav2rayssr.top/posts/849606ff/"/>
    <id>https://blog.yahyav2rayssr.top/posts/849606ff/</id>
    <published>2023-06-19T14:24:39.887Z</published>
    <updated>2023-06-19T14:24:39.887Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><table><thead><tr><th>目录名称</th><th>是否在用</th><th>用途</th></tr></thead><tbody><tr><td>bin</td><td>是</td><td>存放 Windows 和 linux 等系统中使用的 Jetty 启动脚本和相关文件</td></tr><tr><td>contexts</td><td></td><td>存放应用程序发布描述文件，里面有Jetty自带的示例文件</td></tr><tr><td>distribution</td><td></td><td>关于发行构建的代码，正式环境可删除</td></tr><tr><td>etc</td><td>是</td><td>Jetty 配置文件</td></tr><tr><td>examples</td><td></td><td>Jetty 示例程序源代码，正式环境可删除</td></tr><tr><td>extras</td><td></td><td>Jetty 相关程序源代码，正式环境可删除</td></tr><tr><td>javadoc</td><td></td><td>Jetty 核心代码的API文档，正式环境可删除</td></tr><tr><td>jxr</td><td></td><td>Jetty 其他相关程序API文档，正式环境可删除</td></tr><tr><td>LICENSES</td><td></td><td>发行协议说明</td></tr><tr><td>logs</td><td>是</td><td>日志目录</td></tr><tr><td>modules</td><td>是</td><td>Jetty 相关模块程序源代码，正式环境可删除</td></tr><tr><td>patches</td><td></td><td>jdk5 的补丁文件描述，正式环境可删除</td></tr><tr><td>project-website</td><td></td><td>maven 产生的项目站点文档目录</td></tr><tr><td>resources</td><td>是</td><td>如果存在该目录，jetty 启动时会将该目录加入类路径，默认存放 log4j 配置文件</td></tr><tr><td>webapps</td><td>是</td><td>存放 web 应用程序，默认情况下该目录下面的文件夹或者 war 文件将在 jetty 启动的时候被运行</td></tr><tr><td>start.jar</td><td></td><td>启动 Jetty 引导 java 程序，可以在各个操作系统中使用它启动 jetty 服务</td></tr><tr><td>start.ini</td><td>是</td><td>启动时被解析成命令行参数，jetty 必备配置文件</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录名称&lt;/th&gt;
&lt;th&gt;是否在用&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thea</summary>
      
    
    
    
    <category term="中间件" scheme="https://blog.yahyav2rayssr.top/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    <category term="容器" scheme="https://blog.yahyav2rayssr.top/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/%E5%AE%B9%E5%99%A8/"/>
    
    <category term="Jetty" scheme="https://blog.yahyav2rayssr.top/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/%E5%AE%B9%E5%99%A8/Jetty/"/>
    
    
    <category term="jetty" scheme="https://blog.yahyav2rayssr.top/tags/jetty/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://blog.yahyav2rayssr.top/posts/0/"/>
    <id>https://blog.yahyav2rayssr.top/posts/0/</id>
    <published>2023-06-19T14:24:39.886Z</published>
    <updated>2023-06-19T14:24:39.886Z</updated>
    
    <content type="html"><![CDATA[<h2 id="后端工程"><a href="#后端工程" class="headerlink" title="后端工程"></a>后端工程</h2><h2 id="前端工程"><a href="#前端工程" class="headerlink" title="前端工程"></a>前端工程</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;后端工程&quot;&gt;&lt;a href=&quot;#后端工程&quot; class=&quot;headerlink&quot; title=&quot;后端工程&quot;&gt;&lt;/a&gt;后端工程&lt;/h2&gt;&lt;h2 id=&quot;前端工程&quot;&gt;&lt;a href=&quot;#前端工程&quot; class=&quot;headerlink&quot; title=&quot;前端工程&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Gradle 常用配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/62a229e/"/>
    <id>https://blog.yahyav2rayssr.top/posts/62a229e/</id>
    <published>2023-06-19T14:24:39.886Z</published>
    <updated>2023-06-19T14:24:39.886Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="intellij-idea"><a href="#intellij-idea" class="headerlink" title="intellij idea"></a>intellij idea</h2><h3 id="Gradle-工具窗口说明"><a href="#Gradle-工具窗口说明" class="headerlink" title="Gradle 工具窗口说明"></a>Gradle 工具窗口说明</h3><img src="/posts/62a229e/1899339-0cb7c0cdcf484e84.webp" alt="img" style="zoom: 80%;"><h2 id="源文件"><a href="#源文件" class="headerlink" title="源文件"></a>源文件</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;intellij-idea&quot;&gt;&lt;a href=&quot;#intellij-idea&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="Java" scheme="https://blog.yahyav2rayssr.top/categories/Java/"/>
    
    <category term="gradle" scheme="https://blog.yahyav2rayssr.top/categories/Java/gradle/"/>
    
    
    <category term="gradle" scheme="https://blog.yahyav2rayssr.top/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle 基础概念</title>
    <link href="https://blog.yahyav2rayssr.top/posts/884ca42/"/>
    <id>https://blog.yahyav2rayssr.top/posts/884ca42/</id>
    <published>2023-06-19T14:24:39.885Z</published>
    <updated>2023-06-19T14:24:39.885Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h2><blockquote><ol><li><p>解析 gradle&#x2F;wrapper&#x2F;gradle-wrapper.properties 文件，获取项目需要的 gradle 版本下载地址</p></li><li><p>判断本地用户目录下的 .&#x2F;gradle 目录下是否存在该版本，不存在该版本，走第3点，存在走第4点</p></li><li><p>下载 gradle-wrapper.properties 指定版本，并解压到用户目录的下 .&#x2F;gradle 文件下</p></li><li><p>利用 .&#x2F;gradle 目录下对应的版本的 gradle 进行相应自动编译操作</p></li></ol></blockquote><table><thead><tr><th>文件名</th><th>说明</th><th>类型</th><th>是否必须</th></tr></thead><tbody><tr><td>.gradle</td><td>gradle 项目产生文件（自动编译工具产生的文件）</td><td>目录</td><td>-</td></tr><tr><td>build</td><td>自动构建时生成文件的地方</td><td>目录</td><td>-</td></tr><tr><td>gradle</td><td>自动完成gradle环境支持文件夹</td><td>目录</td><td>否</td></tr><tr><td>gradlew</td><td>自动完成 gradle 环境的linux mac 脚本，配合 gradle 文件夹使用代替 gradle 命令实现自动完成 gradle 环境搭建，配合 gradle 文件夹的内容进行使用</td><td>文件</td><td>否</td></tr><tr><td>gradlew.bat</td><td>自动完成 gradle 环境的 windows 脚本，配合 gradle 文件夹使用</td><td>文件</td><td>否</td></tr><tr><td>build.gradle</td><td>gradle 项目自动编译的配置文件</td><td>文件</td><td>是</td></tr><tr><td>gradle.properties</td><td>gradle 运行环境配置文件</td><td>文件</td><td>是</td></tr><tr><td>setting.gradle</td><td>gradle 项目的子项目包含文件，多模块构建用</td><td>文件</td><td>是</td></tr></tbody></table><h2 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>compileOnly</td><td>gradle 2.12 之后版本新添加的，2.12 版本时期曾短暂的叫 provided，后续版本已经改成了compileOnly，由 java 插件提供,适用于编译期需要而不需要打包的情况。</td></tr><tr><td>providedCompile</td><td>war 插件提供的范围类型：与 compile 作用类似，但不会被添加到最终的war包中这是由于编译、测试阶段代码需要依赖此类 jar 包，而运行阶段容器已经提供了相应的支持，所以无需将这些文件打入到 war 包中了；例如 Servlet API 就是一个很明显的例子。</td></tr><tr><td>providedRuntime</td><td>同 proiveCompile 类似。</td></tr><tr><td>implementation</td><td>3.4 以后由 java-library 提供，当其他模块依赖此模块时，此模块使用 implementation 声明的依赖包只限于模块内部使用，不允许其他模块使用。</td></tr><tr><td>api</td><td>3.4 以后由 java-library 提供，当其他模块依赖于此模块时，此模块使用 api 声明的依赖包是可以被其他模块使用，等同于 compile。</td></tr><tr><td>compile</td><td>编译范围依赖在所有的 classpath 中可用，同时它们也会被打包。</td></tr><tr><td>runtime</td><td>runtime 依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如，你可能在编译的时候只需要 JDBC API JAR，而只有在运行的时候才需要 JDBC 驱动实现。</td></tr><tr><td>testCompile</td><td>测试期编译需要的附加依赖。</td></tr><tr><td>testRuntime</td><td>测试运行期需要。</td></tr><tr><td>archives</td><td>-</td></tr><tr><td>default</td><td>配置默认依赖范围。</td></tr></tbody></table><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><h4 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h4><p>此类依赖多见于多模块项目，书写方式如下，其中<code>:</code>是基于跟项目的相对路径描述符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">compile project(<span class="hljs-string">&#x27;:project-foo&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="文件依赖"><a href="#文件依赖" class="headerlink" title="文件依赖"></a>文件依赖</h4><p>依赖存在于本地文件系统中，举个栗子，如 oracle 的 OJDBC 驱动，中央仓库中没有又没有自建私服此时需要放到项目 lib 下进行手工加载那么便可采用此种方式，可以通过<a href="https://links.jianshu.com/go?to=https://docs.gradle.org/current/javadoc/org/gradle/api/file/FileCollection.html"><code>FileCollection</code></a>接口及其子接口提供的方法加载这些依赖(支持文件通配符)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json">dependencies <span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-comment">// 指定多个依赖</span><br>   compile files(&#x27;hibernate.jar&#x27;<span class="hljs-punctuation">,</span> &#x27;libs/spring.jar&#x27;)<br><br>   <span class="hljs-comment">// 读取lib文件夹下的全部文件作为项目依赖</span><br>   compile fileTree(&#x27;libs&#x27;)<br><br>   <span class="hljs-comment">// 根据指定基准目录\包含\排除条件加载依赖</span><br>   compile fileTree(dir<span class="hljs-punctuation">:</span>&#x27;libs&#x27;<span class="hljs-punctuation">,</span> include<span class="hljs-punctuation">:</span>&#x27;spring*.jar&#x27;<span class="hljs-punctuation">,</span> exclude<span class="hljs-punctuation">:</span>&#x27;hibernate*.jar&#x27;)<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="传递依赖"><a href="#传递依赖" class="headerlink" title="传递依赖"></a>传递依赖</h4><p>传递依赖特性可以轻松地通过transitive参数进行开启或关闭，如果要忽略<a href="https://links.jianshu.com/go?to=http://com.android.support-v4">com.android.support-v4</a>的传递性依赖可以采用指定 transitive &#x3D; false 的方式来关闭依赖传递特性，也可以采用添加 @jar 的方式忽略该依赖的所有传递性依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">compile(<span class="hljs-string">&#x27;com.android.support:support-v4:23.1.1&#x27;</span>) &#123; transitive = <span class="hljs-literal">false</span> &#125;<br> <br>compile <span class="hljs-string">&#x27;com.android.support:support-v4:23.1.1&#x27;</span>@jar<br></code></pre></td></tr></table></figure><p>当然,你也可以全局性的关闭依赖的传递特性。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">configurations.all <span class="hljs-punctuation">&#123;</span> transitive = <span class="hljs-literal"><span class="hljs-keyword">false</span></span> <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>或者，部分排除一些依赖，通过 exclude 的形式，举个例子：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">compile(&#x27;com.github.nanchen2251<span class="hljs-punctuation">:</span>CompressHelper<span class="hljs-punctuation">:</span><span class="hljs-number">1.0</span><span class="hljs-number">.5</span>&#x27;) <span class="hljs-punctuation">&#123;</span><br>exclude group<span class="hljs-punctuation">:</span> &#x27;com.android.support&#x27;<span class="hljs-comment">//排除组织依赖</span><br>exclude module<span class="hljs-punctuation">:</span> &#x27;appcompat-v7&#x27;<span class="hljs-comment">//排除模块依赖</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h5 id="强制使用指定版本"><a href="#强制使用指定版本" class="headerlink" title="强制使用指定版本"></a>强制使用指定版本</h5><p>当然，有时候你可能仅仅是需要强制使用某个统一的依赖版本，而不是排除他们，那么此时force就该登场了。指定force &#x3D; true属性可以冲突时优先使用该版本进行解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">compile(<span class="hljs-string">&#x27;com.github.nanchen2251:CompressHelper:1.0.5&#x27;</span>) &#123; force = <span class="hljs-literal">true</span> &#125;<br></code></pre></td></tr></table></figure><p>全局配置强制使用某个版本的依赖来解决依赖冲突中出现的依赖，有两种方式：</p><p>方式一：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json">configurations.all <span class="hljs-punctuation">&#123;</span><br>   resolutionStrategy <span class="hljs-punctuation">&#123;</span><br>       force &#x27;com.github.nanchen2251<span class="hljs-punctuation">:</span>CompressHelper<span class="hljs-punctuation">:</span><span class="hljs-number">1.0</span><span class="hljs-number">.5</span>&#x27;<br>   <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">// 解决冲突 同一版本</span><br>configurations.all <span class="hljs-punctuation">&#123;</span><br>    resolutionStrategy.eachDependency <span class="hljs-punctuation">&#123;</span> DependencyResolveDetails details -&gt;<br>        def requested = details.requested<br>        if (requested.group == &#x27;com.android.support&#x27;) <span class="hljs-punctuation">&#123;</span><br>            if (requested.name.startsWith(<span class="hljs-string">&quot;support-&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;animated&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;cardview&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;design&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;gridlayout&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;recyclerview&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;transition&quot;</span>)||<br>                    requested.name.startsWith(<span class="hljs-string">&quot;appcompat&quot;</span>)) <span class="hljs-punctuation">&#123;</span><br>                details.useVersion &#x27;<span class="hljs-number">25.0</span><span class="hljs-number">.0</span>&#x27;<br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="动态版本"><a href="#动态版本" class="headerlink" title="动态版本"></a>动态版本</h4><p>如果你想让你的工程始终采用最新依赖，那么 Gradle 提供了一种方式可以始终保证采用依赖的最新版本而无需每次手工检查修改版本。</p><p>使用加号+,可以让Gradle在每次执行构建时检查远程仓库是否存在该依赖的新版本，如果存在新版本则下载选用最新版本。当然也可以指定依赖某个大版本下的最新子版本，1.+表示始终采用该依赖最新的1.x版本的最新依赖。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">compile &#x27;com.android.support<span class="hljs-punctuation">:</span>support-v4<span class="hljs-punctuation">:</span>+&#x27; <span class="hljs-comment">// 下载最新</span><br>compile &#x27;com.android.support<span class="hljs-punctuation">:</span>support-v4<span class="hljs-punctuation">:</span><span class="hljs-number">23</span>+&#x27; <span class="hljs-comment">// 基于23这个版本最新</span><br></code></pre></td></tr></table></figure><h4 id="强制更新依赖"><a href="#强制更新依赖" class="headerlink" title="强制更新依赖"></a>强制更新依赖</h4><p>在执行 build、compile 等任务时会解析项目配置的依赖并按照配置的仓库去搜寻下载这些依赖。默认情况下，Gradle 会依照 Gradle 缓存 -&gt; 你配置的仓库的顺序依次搜寻这些依赖，并且一旦找到就会停止搜索。如果想要忽略本地缓存每次都进行远程检索可以通过在执行命令时添加 <code>--refresh-dependencies</code> 参数来强制刷新依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gradle build --refresh-dependencies<br></code></pre></td></tr></table></figure><p>当远程仓库上传了相同版本依赖时，有时需要为缓存指定一个时效去检查远程仓库的依赖笨版本，Gradle 提供了 cacheChangingModulesFor(int, java.util.concurrent.TimeUnit) , cacheDynamicVersionsFor(int, java.util.concurrent.TimeUnit) 两个方法来设置缓存的时效</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json">configurations.all <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 每隔24小时检查远程依赖是否存在更新</span><br>    resolutionStrategy.cacheChangingModulesFor <span class="hljs-number">24</span><span class="hljs-punctuation">,</span> &#x27;hours&#x27;<br>    <span class="hljs-comment">// 每隔10分钟..</span><br>    <span class="hljs-comment">// resolutionStrategy.cacheChangingModulesFor 10, &#x27;minutes&#x27;</span><br>    <span class="hljs-comment">// 采用动态版本声明的依赖缓存10分钟</span><br>    resolutionStrategy.cacheDynamicVersionsFor <span class="hljs-number">10</span>*<span class="hljs-number">60</span><span class="hljs-punctuation">,</span> &#x27;seconds&#x27;<br><span class="hljs-punctuation">&#125;</span><br><br>dependencies <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment">// 添加changing: true</span><br>    compile group<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;group&quot;</span><span class="hljs-punctuation">,</span> name<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;module&quot;</span><span class="hljs-punctuation">,</span> version<span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1.1-SNAPSHOT&quot;</span><span class="hljs-punctuation">,</span> changing<span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>    <span class="hljs-comment">// 简写方式</span><br>    <span class="hljs-comment">// compile(&#x27;group:module:1.1-SNAPSHOT&#x27;) &#123; changing = true &#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="内置依赖"><a href="#内置依赖" class="headerlink" title="内置依赖"></a>内置依赖</h3><p>跟随 Gradle 发行包或者基于 Gradle API 的一些依赖，通常在插件开发时使用，当前提供了如下三种:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"> dependencies <span class="hljs-punctuation">&#123;</span><br>   <span class="hljs-comment">// 加载Gradle自带的groovy作为依赖</span><br>   compile localGroovy()<br><br>   <span class="hljs-comment">// 使用Gradle API作为依赖</span><br>   compile gradleApi()<br><br>   <span class="hljs-comment">// 使用 Gradle test-kit API 作为依赖</span><br>   testCompile gradleTestKit()<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="ext"><a href="#ext" class="headerlink" title="ext"></a>ext</h3><p>在 Gradle 领域模型中所有被增强的对象能够拥有自己定义的属性. 这包括，但不仅限于 projects, tasks, 还有 sourceSets .Project 对象可以添加，读取，更改扩展的属性. 另外，使用 ext 扩展块可以一次添加多个属性。</p><p>举个例子，以 build.gradle 为例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json">ext <span class="hljs-punctuation">&#123;</span><br>    springVersion = <span class="hljs-string">&quot;3.1.0.RELEASE&quot;</span><br>    emailNotification = <span class="hljs-string">&quot;build@master.org&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><p>apply(options: Map&lt;String, ?&gt;) 我们通过该方法使用插件或者是其他脚本，options里主要选项有：</p><blockquote><p>from： 使用其他脚本，值可以为 Project.uri(Object) 支持的路径<br>plugin：使用其他插件，值可以为插件 id 或者是插件的具体实现类</p></blockquote><p>举个例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">apply plugin: <span class="hljs-string">&#x27;com.android.application&#x27;</span><br><span class="hljs-comment">// 使用插件，MyPluginImpl 就是一个Plugin接口的实现类</span><br>apply plugin: MyPluginImpl<br><br><span class="hljs-comment">// 引用其他gradle脚本，push.gradle就是另外一个gradle脚本文件</span><br>apply from: <span class="hljs-string">&#x27;./push.gradle&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="sourceSets"><a href="#sourceSets" class="headerlink" title="sourceSets"></a>sourceSets</h3><h3 id="archivesBaseName"><a href="#archivesBaseName" class="headerlink" title="archivesBaseName"></a>archivesBaseName</h3><p>配置生成包的名称</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;文件说明&quot;&gt;&lt;a href=&quot;#文件说明&quot; class=&quot;headerlink&quot; title=&quot;文件说明&quot;&gt;&lt;/a&gt;文件说明&lt;/h</summary>
      
    
    
    
    <category term="Java" scheme="https://blog.yahyav2rayssr.top/categories/Java/"/>
    
    <category term="gradle" scheme="https://blog.yahyav2rayssr.top/categories/Java/gradle/"/>
    
    
    <category term="gradle" scheme="https://blog.yahyav2rayssr.top/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle 安装配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/398308f9/"/>
    <id>https://blog.yahyav2rayssr.top/posts/398308f9/</id>
    <published>2023-06-19T14:24:39.885Z</published>
    <updated>2023-06-19T14:24:39.885Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h2><p><a href="https://gradle.org/releases">https://gradle.org/releases</a></p><h2 id="JDK-版本兼容性一览"><a href="#JDK-版本兼容性一览" class="headerlink" title="JDK 版本兼容性一览"></a>JDK 版本兼容性一览</h2><p>参考链接：<a href="https://docs.gradle.org/current/userguide/compatibility.html#compatibility">https://docs.gradle.org/current/userguide/compatibility.html#compatibility</a></p><table><thead><tr><th>Java version</th><th>First Gradle version to support it</th></tr></thead><tbody><tr><td>8</td><td>2.0</td></tr><tr><td>9</td><td>4.3</td></tr><tr><td>10</td><td>4.7</td></tr><tr><td>11</td><td>5.0</td></tr><tr><td>12</td><td>5.4</td></tr><tr><td>13</td><td>6.0</td></tr><tr><td>14</td><td>6.3</td></tr><tr><td>15</td><td>6.7</td></tr><tr><td>16</td><td>7.0</td></tr><tr><td>17</td><td>7.3</td></tr><tr><td>18</td><td>7.5</td></tr><tr><td>19</td><td>7.6</td></tr><tr><td>20</td><td>8.1 ⚠</td></tr></tbody></table><p>⚠: Indicates that the Java version can be used for compilation and tests, but not yet running Gradle itself.</p><h2 id="windows-安装"><a href="#windows-安装" class="headerlink" title="windows 安装"></a>windows 安装</h2><h2 id="linux-安装"><a href="#linux-安装" class="headerlink" title="linux 安装"></a>linux 安装</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;官网地址&quot;&gt;&lt;a href=&quot;#官网地址&quot; class=&quot;headerlink&quot; title=&quot;官网地址&quot;&gt;&lt;/a&gt;官网地址&lt;/h</summary>
      
    
    
    
    <category term="Java" scheme="https://blog.yahyav2rayssr.top/categories/Java/"/>
    
    <category term="gradle" scheme="https://blog.yahyav2rayssr.top/categories/Java/gradle/"/>
    
    
    <category term="gradle" scheme="https://blog.yahyav2rayssr.top/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>苹果软件 alfred 使用教程</title>
    <link href="https://blog.yahyav2rayssr.top/posts/28aa3ae1/"/>
    <id>https://blog.yahyav2rayssr.top/posts/28aa3ae1/</id>
    <published>2023-06-19T14:24:39.884Z</published>
    <updated>2023-06-19T14:24:39.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://sspai.com/post/32979">从零开始学习 Alfred：基础功能及设置</a></p><p><a href="https://v2ex.com/t/913194">Mac Everything 文件搜索工具，效率神器推荐</a></p><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><p><a href="https://www.bilibili.com/video/BV1fK4y1H7kV/?spm_id_from=333.788&vd_source=3893b0277053b206b8f4177198a5e3ca">【macOS究极强化】全网最简单！Alfred快速上手</a></p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><p><a href="https://blog.csdn.net/boildoctor/article/details/111473912">mac使用Alfred搜索外接移动硬盘失败的解决方法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 破解教程</title>
    <link href="https://blog.yahyav2rayssr.top/posts/4c296ea9/"/>
    <id>https://blog.yahyav2rayssr.top/posts/4c296ea9/</id>
    <published>2023-06-19T14:24:39.883Z</published>
    <updated>2023-06-19T14:24:39.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.exception.site/article/63">https://www.exception.site/article/63</a></p><p><a href="https://zhile.io/jetbrains-paid-plugins-license">https://zhile.io/jetbrains-paid-plugins-license</a></p><p><a href="https://www.haah.net/jetbrains">https://www.haah.net/jetbrains</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
  </entry>
  
  <entry>
    <title>windows 三方工具包</title>
    <link href="https://blog.yahyav2rayssr.top/posts/e27c3e8b/"/>
    <id>https://blog.yahyav2rayssr.top/posts/e27c3e8b/</id>
    <published>2023-06-19T14:24:39.883Z</published>
    <updated>2023-06-19T14:24:39.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="语言包"><a href="#语言包" class="headerlink" title="语言包"></a>语言包</h2><p><a href="http://www.shopspeed.net/html/service/2020-9-23/238.html">Windows 7 SP1 多国语言包(MUI language packs)官方下载（32位和64位）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;语言包&quot;&gt;&lt;a href=&quot;#语言包&quot; class=&quot;headerlink&quot; title=&quot;语言包&quot;&gt;&lt;/a&gt;语言包&lt;/h2&gt;&lt;p</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="windows" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/windows/"/>
    
    
    <category term="windows" scheme="https://blog.yahyav2rayssr.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 主题推荐</title>
    <link href="https://blog.yahyav2rayssr.top/posts/1d1b4eb4/"/>
    <id>https://blog.yahyav2rayssr.top/posts/1d1b4eb4/</id>
    <published>2023-06-19T14:24:39.882Z</published>
    <updated>2023-06-19T14:24:39.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="暗色系"><a href="#暗色系" class="headerlink" title="暗色系"></a>暗色系</h2><ul><li>Twitch Dark Theme</li><li>Vuesion Theme</li><li>Visual Studio Code Dark Plus Theme</li></ul><h2 id="亮色系"><a href="#亮色系" class="headerlink" title="亮色系"></a>亮色系</h2><ul><li>shirotelin</li><li>KDE Breeze Theme</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;暗色系&quot;&gt;&lt;a href=&quot;#暗色系&quot; class=&quot;headerlink&quot; title=&quot;暗色系&quot;&gt;&lt;/a&gt;暗色系&lt;/h2&gt;&lt;u</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
  </entry>
  
  <entry>
    <title>mac 常用快捷键</title>
    <link href="https://blog.yahyav2rayssr.top/posts/3e8d1a22/"/>
    <id>https://blog.yahyav2rayssr.top/posts/3e8d1a22/</id>
    <published>2023-06-19T14:24:39.881Z</published>
    <updated>2023-06-19T14:24:39.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="任务管理器"><a href="#任务管理器" class="headerlink" title="任务管理器"></a>任务管理器</h2><p>option + command + esc</p><h2 id="快速复制文件或文件夹路径"><a href="#快速复制文件或文件夹路径" class="headerlink" title="快速复制文件或文件夹路径"></a>快速复制文件或文件夹路径</h2><p>macOS 下没有 Windows 那样的地址栏，无法直观的复制文件的链接，有时候为了获取文件或文件夹的路径变成一件很棘手的事情，以下为快速复制路径方法：</p><p>快捷键 option + command + C</p><p>在 Finder 中选择文件或是文件夹，然后按下快捷键 option + command + C，即可复制文件的全路径。</p><h2 id="重命名文件-x2F-文件夹"><a href="#重命名文件-x2F-文件夹" class="headerlink" title="重命名文件 &#x2F; 文件夹"></a>重命名文件 &#x2F; 文件夹</h2><p>选中需要重命名的文件，按下 return 键即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;任务管理器&quot;&gt;&lt;a href=&quot;#任务管理器&quot; class=&quot;headerlink&quot; title=&quot;任务管理器&quot;&gt;&lt;/a&gt;任务管理</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>JVM 基本概念</title>
    <link href="https://blog.yahyav2rayssr.top/posts/62787a65/"/>
    <id>https://blog.yahyav2rayssr.top/posts/62787a65/</id>
    <published>2023-06-19T14:24:39.881Z</published>
    <updated>2023-06-19T14:24:39.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><h3 id="自动-dump-堆快照"><a href="#自动-dump-堆快照" class="headerlink" title="自动 dump 堆快照"></a>自动 dump 堆快照</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=&lt;绝对文件路径&gt;<br></code></pre></td></tr></table></figure><p>为了方便复现问题，可以把堆内存的参数调小些，示例命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-Xms10m -Xmx20m -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=F:\hporf<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;常用参数&quot;&gt;&lt;a href=&quot;#常用参数&quot; class=&quot;headerlink&quot; title=&quot;常用参数&quot;&gt;&lt;/a&gt;常用参数&lt;/h</summary>
      
    
    
    
    <category term="Java" scheme="https://blog.yahyav2rayssr.top/categories/Java/"/>
    
    <category term="JVM" scheme="https://blog.yahyav2rayssr.top/categories/Java/JVM/"/>
    
    
    <category term="JVM" scheme="https://blog.yahyav2rayssr.top/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>mac 系统配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/bf58dadb/"/>
    <id>https://blog.yahyav2rayssr.top/posts/bf58dadb/</id>
    <published>2023-06-19T14:24:39.880Z</published>
    <updated>2023-06-19T14:24:39.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="因为它来自身份不明的开发者，不显示允许任何来源"><a href="#因为它来自身份不明的开发者，不显示允许任何来源" class="headerlink" title="因为它来自身份不明的开发者，不显示允许任何来源"></a>因为它来自身份不明的开发者，不显示允许任何来源</h2><p>打开时提示”已损坏，打不开。您应该将它移到废纸篓”或身份验证，因为它来自身份不明的开发者,和不显示允许任何来源，图片解锁和应用程序问题（如图片 &#x2F;application 应用程序损坏，文件不能打开）。这个原因你可能是你的电脑完全禁用 Gatekeeper 检查。</p><p>打开终端，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo spctl --master-disable<br></code></pre></td></tr></table></figure><p>关闭【终端】，重新打开 【系统偏好设置】 – 【安全性与隐私】 – 【通用】中就会出现且选中 【允许任何来源】，这样设置后就可以安装受限制的”来自身份不明开发者”的程序。</p><img src="/posts/bf58dadb/image-20230502184147240.png" alt="image-20230502184147240" style="zoom: 50%;"><p>按住 control 按键，鼠标左键点击锁图标，选择打开</p><h2 id="重启终端后-bash-profile-配置失效"><a href="#重启终端后-bash-profile-配置失效" class="headerlink" title="重启终端后 bash_profile 配置失效"></a>重启终端后 bash_profile 配置失效</h2><p>自己在 ~&#x2F;.bash_profile 中配置环境变量, 可是每次重启终端后配置的不生效，需要重新执行 : <code>$source ~/.bash_profile</code></p><p>发现 zsh 加载的是 ~&#x2F;.zshrc 文件，而 ‘.zshrc’ 文件中并没有定义任务环境变量。</p><p><strong>解决办法</strong></p><p>在 ~&#x2F;.zshrc 文件最后，增加一行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.bash_profile<br></code></pre></td></tr></table></figure><h2 id="安装-ll、la、l命令"><a href="#安装-ll、la、l命令" class="headerlink" title="安装 ll、la、l命令"></a>安装 ll、la、l命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~<br><br>vim .bash_profile<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将以下代码添加到.bash_profile文件中</span><br>alias ll=&#x27;ls -alF&#x27;<br>alias la=&#x27;ls -A&#x27;<br>alias l=&#x27;ls -CF&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">保存</span><br>:wq<br><br>source .bash_profile<br></code></pre></td></tr></table></figure><h2 id="终端-oh-my-zsh-主题美化"><a href="#终端-oh-my-zsh-主题美化" class="headerlink" title="终端 oh-my-zsh 主题美化"></a>终端 oh-my-zsh 主题美化</h2><p>powerlevel10k 很香，启动终端后会有引导帮助你配置，不仅好看，而且启动速度还快</p><p>不多说， 自己装装感受下吧：</p><p>首先：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/themes/powerlevel10kvim<br></code></pre></td></tr></table></figure><p>然后在.zshrc中设置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;<br></code></pre></td></tr></table></figure><h2 id="禁止-DS-store-生成"><a href="#禁止-DS-store-生成" class="headerlink" title="禁止 .DS_store 生成"></a>禁止 .DS_store 生成</h2><p>.DS_Store (英文全称 Desktop Services Store) 是一种由苹果公司的 Mac OS X 操作系统所创造的隐藏文件，目的在于存储目录的自定义属性，例如文件的图标位置或者是背景色的选择。相当于 Windows 下的 desktop.ini。</p><p>禁止.DS_store生成：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE<br></code></pre></td></tr></table></figure><p>恢复.DS_store生成：恢复.DS_store生成：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete com.apple.desktopservices DSDontWriteNetworkStores<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;因为它来自身份不明的开发者，不显示允许任何来源&quot;&gt;&lt;a href=&quot;#因为它来自身份不明的开发者，不显示允许任何来源&quot; class</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>HTTP 常见错误</title>
    <link href="https://blog.yahyav2rayssr.top/posts/449ba82d/"/>
    <id>https://blog.yahyav2rayssr.top/posts/449ba82d/</id>
    <published>2023-06-19T14:24:39.877Z</published>
    <updated>2023-06-19T14:24:39.877Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="浏览器请求设置-Accept-Encoding-为-gzip-deflate，返回乱码"><a href="#浏览器请求设置-Accept-Encoding-为-gzip-deflate，返回乱码" class="headerlink" title="浏览器请求设置 Accept-Encoding 为 gzip,deflate，返回乱码"></a>浏览器请求设置 Accept-Encoding 为 gzip,deflate，返回乱码</h2><blockquote><p>设置 Accept-Encoding 为 gzip,deflate，返回的网页是乱码，取消掉即可正常显示。普通浏览器访问网页，之所以添加：”Accept-Encoding” &#x3D; “gzip,deflate” 那是因为，浏览器对于从服务器中返回的对应的gzip压缩的网页，会自动解压缩，所以，其 request 的时候，添加对应的头，表明自己接受压缩后的数据。 而此代码中，如果也添加此头信息，结果就是，返回的压缩后的数据，没有解码，而将压缩后的数据当做普通的html文本来处理，当前显示出来的内容，是乱码了。</p></blockquote><p>想要获得正确网页内容，而非乱码的话，有以下两种方式：</p><ol><li><p>不要设置 Accept-Encoding 的 Header</p></li><li><p>设置 Accept-Encoding 的 Header，同时设置对应的自动解压缩的模式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">req.<span class="hljs-property">Headers</span>[<span class="hljs-string">&quot;Accept-Encoding&quot;</span>] = <span class="hljs-string">&quot;gzip,deflate&quot;</span>;<br>req.<span class="hljs-property">AutomaticDecompression</span> = <span class="hljs-title class_">DecompressionMethods</span>.<span class="hljs-property">GZip</span>;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;浏览器请求设置-Accept-Encoding-为-gzip-deflate，返回乱码&quot;&gt;&lt;a href=&quot;#浏览器请求设置-Ac</summary>
      
    
    
    
    <category term="网络通讯" scheme="https://blog.yahyav2rayssr.top/categories/%E7%BD%91%E7%BB%9C%E9%80%9A%E8%AE%AF/"/>
    
    
    <category term="http" scheme="https://blog.yahyav2rayssr.top/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>苹果关闭动画特效</title>
    <link href="https://blog.yahyav2rayssr.top/posts/71eea9a3/"/>
    <id>https://blog.yahyav2rayssr.top/posts/71eea9a3/</id>
    <published>2023-06-19T14:22:38.916Z</published>
    <updated>2023-06-19T14:22:38.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>不带任何动画效果不是更好吗？就像过去那样清清爽爽也不错。接下来将介绍如何在OS X操作系统里关闭大部分的视觉动画效果。</p><h2 id="减弱-macOS-动态效果"><a href="#减弱-macOS-动态效果" class="headerlink" title="减弱 macOS 动态效果"></a>减弱 macOS 动态效果</h2><p>1.开启macOS系统偏好设定，找到设定内的「辅助使用」功能。</p><img src="/posts/71eea9a3/2df74669d93442ceac90399170f381f5.jpeg" class alt="img"><p>2.从左侧点选「显示器」后勾选右上角的「减少动态效果」，设定后就能发现不同，试着切换到不同桌面、应用程式或接收通知，可以看到动态效果几乎没有了，取而代之的是淡入淡出效果。</p><img src="/posts/71eea9a3/d83f82807ab045fa9ec52435ef45141a.jpeg" class alt="img"><p>如果使用上不习惯，想要改回原有的动态效果，只要进行相同的操作步骤即可返回。</p><h2 id="窗口和对话框弹出的动画特效"><a href="#窗口和对话框弹出的动画特效" class="headerlink" title="窗口和对话框弹出的动画特效"></a>窗口和对话框弹出的动画特效</h2><p>打开终端窗口（Finder-应用程序-实用工具-终端）并运行下面的命令，就能取消对话框和窗口在屏幕中央位置弹出的效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write -g NSAutomaticWindowAnimationEnabled -bool FALSE<br></code></pre></td></tr></table></figure><p>然后注销并重新登录系统使更改生效。<br>如果想恢复这个特效的话，可以打开终端窗口并运行下面的命令。同样地，需要注销并重新登录使更改生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete -g NSAutomaticWindowAnimationEnabled<br></code></pre></td></tr></table></figure><h2 id="快速查看的动画特效"><a href="#快速查看的动画特效" class="headerlink" title="快速查看的动画特效"></a>快速查看的动画特效</h2><p>当你选中某个文件并敲下《Space》键时会弹出快速查看窗口。它显示文件内容的预览画面。你可以在终端窗口里运行下面的命令，停用“快速查看”窗口从当前文件位置向外扩张的动画效果（这样做也会同时停用快速查看窗口缩回当前文件位置时的动画效果）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.finder QLPanelAnimationDuration -int 0; killall Finder<br></code></pre></td></tr></table></figure><p>命令运行后立即生效。如果想恢复这个动态效果，请打开终端窗口并运行以下命令（同理，这个更改也是立即生效）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete com.apple.finder QLPanelAnimationDuration; killall Finder<br></code></pre></td></tr></table></figure><h2 id="Mission-Control-的动画特效"><a href="#Mission-Control-的动画特效" class="headerlink" title="Mission Control 的动画特效"></a>Mission Control 的动画特效</h2><p>在终端窗口里运行下面的命令，可以关闭当用户使用或退出Mission Control功能时所出现的动画缩放效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock expose-animation -duration -int 0; killall Dock<br></code></pre></td></tr></table></figure><p>更改在命令运行后立即生效。要注意这样也会关闭在使用“显示桌面”（Show Desktop）特效时，窗口向四周急速分散的动画效果。“显示桌面”特效通常是在触控板上用多个手指同时张开的手势来启用的。<br>如果想要恢复Mission Control功能的默认动画效果，可以打开终端窗口并运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete com.apple.dock expose-animation -duration; killall Dock<br></code></pre></td></tr></table></figure><h2 id="文件保存和打印对话框的动画效果"><a href="#文件保存和打印对话框的动画效果" class="headerlink" title="文件保存和打印对话框的动画效果"></a>文件保存和打印对话框的动画效果</h2><p>每当保存或打印文件时，程序的标题栏位置会向下滑出对话框。要关闭这一动画效果，可打开终端窗口并运行下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write -g NSWindowResizeTime -float 0.01<br></code></pre></td></tr></table></figure><p>你需要注销后再登录系统来使更改生效。<br>如果你希望再次看到这个视觉特效的话，可以运行下面的命令，之后同样要注销再登录系统使更改生效：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete -g NSWindowResizeTime<br></code></pre></td></tr></table></figure><h2 id="Launchpad-界面动画效果"><a href="#Launchpad-界面动画效果" class="headerlink" title="Launchpad 界面动画效果"></a>Launchpad 界面动画效果</h2><p>更改一个隐藏的设置就可以使Launchpad界面立刻出现或消失。打开终端窗口并键入下面两行命令，再按下《Return》键就可以了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock springboard-show-duration -int 0 defaults write com.apple.dock springboard-hide-duration -int 0; killall Dock<br></code></pre></td></tr></table></figure><p>更改会立即生效。如果你要恢复之前的动画效果，可以再次打开终端窗口并运行下面的两行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete com.apple.dock springboard-show-duration defaults delete com.apple.dock springboard-hide-duration; killall Dock<br></code></pre></td></tr></table></figure><p>在Launchpad界面里的应用程序页面划动时，如果你想立刻切换到下一页面而不带动画过渡从而减少页面切换所需的时间，那么可以打开终端窗口并键入下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock springboard-page-duration -int 0; killall Dock<br></code></pre></td></tr></table></figure><p>运行后更改会立即生效。如果需要恢复默认状态，请打开终端窗口并键入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults delete com.apple.dock springboard-page-duration; killall Dock<br></code></pre></td></tr></table></figure><h2 id="Dock-栏的动画效果"><a href="#Dock-栏的动画效果" class="headerlink" title="Dock 栏的动画效果"></a>Dock 栏的动画效果</h2><p>Dock栏可以启动隐藏功能，以便在它用不到的时候会自动滑出屏幕。这样可以为屏幕腾出一些空间。把鼠标移到Dock栏平常所在的位置的边缘时可以让它重新进入屏幕中。右击Dock栏上的应用程序图标和栈之间的虚线，然后就可以选择是否启动隐藏功能。<br>如果想让Dock栏在需要用到的时候立刻跳入到屏幕里，而不是滑进屏幕，可以在打开的终端窗口里输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock autohide-time-moidifier -int 0; killall Dock<br></code></pre></td></tr></table></figure><p>如果想要恢复默认的滑动效果，可以打开终端窗口并运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock autohide-time-moidifier -int 0; killall Dock<br></code></pre></td></tr></table></figure><h2 id="command-i-的动画"><a href="#command-i-的动画" class="headerlink" title="command + i 的动画"></a>command + i 的动画</h2><p>Disable animation when opening the Info window in Finder (cmd⌘ + i)，暂时没怎么用这个快捷键。</p><p>关闭动画</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.finder DisableAllAnimations -bool true<br></code></pre></td></tr></table></figure><p>恢复动画</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.finder DisableAllAnimations -bool false<br></code></pre></td></tr></table></figure><h2 id="窗口动画"><a href="#窗口动画" class="headerlink" title="窗口动画"></a>窗口动画</h2><p>MacOS 系统中可以通过以下步骤关闭窗口动画：</p><ol><li>打开「系统偏好设置」。</li><li>选择「Dock」。</li><li>取消勾选「打开和关闭窗口时使用动画效果」。</li><li>关闭「系统偏好设置」。</li></ol><p>更改后，在 MacOS 中打开和关闭窗口时将不再出现动画效果。</p><h2 id="Dock-新开程序图标跳动动画"><a href="#Dock-新开程序图标跳动动画" class="headerlink" title="Dock 新开程序图标跳动动画"></a>Dock 新开程序图标跳动动画</h2><p>当我们首次点击 Dock 上某程序图标时，这个图标会跳动一下然后打开，略显调皮，如果你不喜欢，也可以如下操作禁用。</p><p>执行指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults write com.apple.dock launchanim -boolean false; killall Dock;<br></code></pre></td></tr></table></figure><p>还原指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults write com.apple.dock launchanim -boolean true; killall Dock;<br></code></pre></td></tr></table></figure><h2 id="Dock-自动隐藏动画"><a href="#Dock-自动隐藏动画" class="headerlink" title="Dock 自动隐藏动画"></a>Dock 自动隐藏动画</h2><p>Dock 栏可以开启自动隐藏功能，然后通过鼠标指针撞击边缘的方式唤出，出现和隐藏都会有对应的动画，可以禁用之。</p><p>执行指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults write com.apple.dock autohide-time-modifier -float 0; killall Dock;<br></code></pre></td></tr></table></figure><p>还原指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults write com.apple.dock autohide-time-modifier -float 0.7; killall Dock;<br></code></pre></td></tr></table></figure><p>另外，鼠标唤起的触发有一个延迟时间设置，当然也可以通过指令禁用，达到实时弹出的效果。</p><p>关闭指令：（无延迟感）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults write com.apple.Dock autohide-delay -float 0; killall Dock;<br></code></pre></td></tr></table></figure><p>还原指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults delete com.apple.Dock autohide-delay; killall Dock;<br></code></pre></td></tr></table></figure><h2 id="Mission-Control-动画"><a href="#Mission-Control-动画" class="headerlink" title="Mission Control 动画"></a>Mission Control 动画</h2><p>如之前在「你无法拒绝的 Mac 触发角」一文中介绍过鼠标指针撞击屏幕四角来触发 Mission Control 的方法，这个过程会有平滑的动画交互，同样也可以禁用来加速。</p><blockquote><p>注：可以通过键盘上的 F3 键或者 四指上扫的手势 快速触发 Mission Control</p></blockquote><p>执行指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults write com.apple.dock expose-animation-duration -int 0; killall Dock;<br></code></pre></td></tr></table></figure><p>还原指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo defaults delete com.apple.dock expose-animation-duration; killall Dock;<br></code></pre></td></tr></table></figure><h2 id="字体粗细调整"><a href="#字体粗细调整" class="headerlink" title="字体粗细调整"></a>字体粗细调整</h2><p>可以根据自己的需要，自行在 -int 后面选择不同的数字来调整字体的粗细，0 是最细，1 是中等，2 是恢复原始的粗细。</p><p>输入完成后，关掉终端并退出登录，再次回到桌面后即可生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults -currentHost write -g AppleFontSmoothing -int 0<br></code></pre></td></tr></table></figure><h2 id="只显示当前运行的应用"><a href="#只显示当前运行的应用" class="headerlink" title="只显示当前运行的应用"></a>只显示当前运行的应用</h2><ol><li>打开终端（Terminal.app）</li><li>输入下列指令后，按回车键运行，Dock栏只显示当前运行中的应用程序：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock static-only -bool TRUE; killall Dock;<br></code></pre></td></tr></table></figure><ol start="3"><li>想恢复原来状态，输入下列指令，按回车键运行即可：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock static-only -bool FALSE; killall Dock;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;p&gt;不带任何动画效果不是更好吗？就像过去那样清清爽爽也不错。接下来将介绍如何在OS X操作系统里关闭大部分的视觉动画效果。&lt;/p&gt;
&lt;h2 id</summary>
      
    
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
    <category term="黑苹果" scheme="https://blog.yahyav2rayssr.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 常用插件</title>
    <link href="https://blog.yahyav2rayssr.top/posts/be77417b/"/>
    <id>https://blog.yahyav2rayssr.top/posts/be77417b/</id>
    <published>2023-06-19T14:22:38.913Z</published>
    <updated>2023-06-19T14:22:38.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="已使用"><a href="#已使用" class="headerlink" title="已使用"></a>已使用</h3><ul><li><p>Key Promoter X</p></li><li><p>Alibaba Java Coding GuideLines</p></li><li><p>CamelCase</p></li><li><p>Convert YAML and Properties File</p></li><li><p>GenerateAllSetter</p></li><li><p>GenerateSerialVersionUID</p></li><li><p>Git Commit Message Helper</p></li><li><p>Grep Console</p></li><li><p>GsonFormatPlus</p></li><li><p>Json Parser</p></li><li><p>HighlightBracketPair</p></li><li><p>Java Bean to Json</p></li><li><p>JRebel and XRebel</p></li><li><p>JRebel mybatisPlus extension</p></li><li><p>MybatisPlus</p></li><li><p>Kafkalytic</p></li><li><p>Maven Helper</p></li><li><p>RestfulToolkit-fix</p></li><li><p>SequenceDiagram</p></li><li><p>Translation</p></li></ul><h3 id="未使用"><a href="#未使用" class="headerlink" title="未使用"></a>未使用</h3><ul><li>String Manipulation</li><li>MapStruct support</li><li>arthas idea</li><li>Statistic</li><li>SonarLint</li><li>Jump To Line</li><li>Rainbow Brackets</li><li>jclasslib：字节码查看神器</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://juejin.cn/post/7140075471462465550#heading-8">看了我常用的IDEA插件，同事也开始悄悄安装了…</a></p><p><a href="https://juejin.cn/post/7083673873618567205">IDEA小技巧：Debug拖动跳转任意行</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;h3 id</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 常用配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/4a9b2d4f/"/>
    <id>https://blog.yahyav2rayssr.top/posts/4a9b2d4f/</id>
    <published>2023-06-19T14:22:38.913Z</published>
    <updated>2023-06-19T14:22:38.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="右键增加-Open-Folder-as-IntelliJ-IDEA-Project"><a href="#右键增加-Open-Folder-as-IntelliJ-IDEA-Project" class="headerlink" title="右键增加 Open Folder as IntelliJ IDEA Project"></a>右键增加 Open Folder as IntelliJ IDEA Project</h2><p>1、先<code>win+R</code>打开运行窗口，输入<code>regedit</code>，进入到<a href="https://so.csdn.net/so/search?q=%E6%B3%A8%E5%86%8C%E8%A1%A8&spm=1001.2101.3001.7020">注册表</a>编辑器中，然后进入到下面的目录 <code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell</code></p><p>新建项，取名为 Intellij IDEA，如下图所示：</p><ol><li><p>修改 Intellij IDEA 项下的默认的数值数据为 Open Folder as IntelliJ IDEA Project</p></li><li><p>新建一个字符串值，名字为 Icon，数值为 idea64.exe 所在目录的绝对路径</p></li></ol><img src="/posts/4a9b2d4f/image-20220529112715786.png" alt="image-20220529112715786" style="zoom:67%;"><p>然后在左边的 Intellij IDEA 的项上右击，选择新建 &gt; 项,项名为 command，修改默认的数值数据为 “idea64.exe所在目录的绝对路径” + “%V”，如下图所示：</p><img src="/posts/4a9b2d4f/image-20220529113557732.png" alt="image-20220529113557732" style="zoom:67%;"><p>然后重启电脑，就可以看到下面的效果了，如下图所示：</p><img src="/posts/4a9b2d4f/image-20220529113916555.png" alt="image-20220529113916555" style="zoom:67%;"><h2 id="关闭自动弹出-Documentation"><a href="#关闭自动弹出-Documentation" class="headerlink" title="关闭自动弹出 Documentation"></a>关闭自动弹出 Documentation</h2><p>取消勾选即可。</p><img src="/posts/4a9b2d4f/image-20220926003143123.png" alt="image-20220926003143123" style="zoom: 67%;"><h2 id="代码行宽度超出限制时不自动换行"><a href="#代码行宽度超出限制时不自动换行" class="headerlink" title="代码行宽度超出限制时不自动换行"></a><strong>代码行宽度超出限制时不自动换行</strong></h2><p>打开 Settings &gt; Editor &gt; Code Style &gt; Java</p><p>设置 <code>Hard Wrap at</code> 的值，默认为120，或者将 <code>Wrap on typing</code> 设置为 false，如下所示：</p><img src="/posts/4a9b2d4f/image-20221103094718687.png" alt="image-20221103094718687" style="zoom:67%;"><h2 id="IntelliJ-IDEA-修改配置文件位置"><a href="#IntelliJ-IDEA-修改配置文件位置" class="headerlink" title="IntelliJ IDEA 修改配置文件位置"></a>IntelliJ IDEA 修改配置文件位置</h2><p>找到 idea.properties 文件的位置，这里找下的位置如下：</p><p>C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\bin\idea.properties</p><p><strong>修改配置文件位置：</strong></p><blockquote><p>注意：不要修改为Idea的安装目录，因为这样会导致自动更新失败。错误示例： </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">idea.config.path</span>=<span class="hljs-string">C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\config</span><br><span class="hljs-attr">idea.system.path</span>=<span class="hljs-string">C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\system</span><br></code></pre></td></tr></table></figure></blockquote><p>修改前：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># idea.config.path=$&#123;user.home&#125;/.IntelliJIdea/config</span><br><span class="hljs-comment"># idea.system.path=$&#123;user.home&#125;/.IntelliJIdea/system</span><br></code></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">idea.config.path</span>=<span class="hljs-string">D:\IntelliJIdea\config</span><br><span class="hljs-attr">idea.system.path</span>=<span class="hljs-string">D:\IntelliJIdea\system</span><br></code></pre></td></tr></table></figure><blockquote><p>注意：Idea启动时，依旧会从默认位置中的 idea64.exe.vmoptions 中读配置。其他配置会从上面修改后的指定的路径中去读。所以：默认的路径下要保留 idea64.exe.vmoptions，其他可以删除。</p></blockquote><p>最后重启 idea 即可生效。</p><h2 id="IntelliJ-IDEA-修改内存大小"><a href="#IntelliJ-IDEA-修改内存大小" class="headerlink" title="IntelliJ IDEA 修改内存大小"></a>IntelliJ IDEA 修改内存大小</h2><p>找到 <code>idea64.exe.vmoptions</code> 的位置，默认是位于 C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.3\bin\ 目录下，如果修改配置文件的位置，则在 D:\IntelliJIdea\config 目录下会有一份额外的同名配置文件，配置文件主要调整前三个参数，整体参数配置参考如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">-Xms1024m # 最小内存<br>-Xmx4096m # 最大内存<br>-XX:ReservedCodeCacheSize=512m # 预留代码缓存的大小<br>-XX:+UseG1GC<br>-XX:SoftRefLRUPolicyMSPerMB=50<br>-XX:CICompilerCount=2<br>-XX:+HeapDumpOnOutOfMemoryError<br>-XX:-OmitStackTraceInFastThrow<br>-ea<br>-Dsun.io.useCanonCaches=false<br>-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;<br>-Djdk.attach.allowAttachSelf=true<br>-Djdk.module.illegalAccess.silent=true<br>-Dkotlinx.coroutines.debug=off<br></code></pre></td></tr></table></figure><p>控制内存使用显示状态的打开方式参考下图：</p><img src="/posts/4a9b2d4f/image-20221110005020304.png" alt="image-20221110005020304" style="zoom:67%;"><p>最后在 idea 中打开 Edit Custom VM Options 配置：</p><img src="/posts/4a9b2d4f/image-20221110005150838.png" alt="image-20221110005150838" style="zoom:67%;"><p>配置内容和上面的 <code>idea64.exe.vmoptions</code> 保持一致，重启 idea 即可生效。</p><h2 id="编译-spring-configuration-metadata-json-文件"><a href="#编译-spring-configuration-metadata-json-文件" class="headerlink" title="编译 spring-configuration-metadata.json 文件"></a>编译 spring-configuration-metadata.json 文件</h2><p>在idea设置中搜索 Annotation Processors，接下来勾住 Enable annonation processing 就完成了。</p><p>我们可以在编译后的文件中看到自动生成的 spring-configuration-metadata.json，配置效果如下：</p><img src="/posts/4a9b2d4f/image-20221111152028395.png" alt="image-20221111152028395" style="zoom:67%;"><img src="/posts/4a9b2d4f/image-20221111152144742.png" alt="image-20221111152144742" style="zoom:67%;"><h2 id="IDEA-设置-SQL-格式化-关键字大写"><a href="#IDEA-设置-SQL-格式化-关键字大写" class="headerlink" title="IDEA 设置 SQL 格式化(关键字大写)"></a>IDEA 设置 SQL 格式化(关键字大写)</h2><p>设置 settsings(Ctrl+Alt+S) –&gt; Editor –&gt; Code Style –&gt; SQL 将 keywords 设置为大写(To upper)</p><p>如下图所示：</p><img src="/posts/4a9b2d4f/image-20221208113752621.png" alt="image-20221208113752621" style="zoom:67%;"><h2 id="设置作者注释"><a href="#设置作者注释" class="headerlink" title="设置作者注释"></a>设置作者注释</h2><p><strong>File and Code Templates 配置</strong></p><p>点击 File -&gt; Settings -&gt; Editor -&gt; File And Code Templates，在右侧的 File Header 中填入以下信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span>: $&#123;NAME&#125;</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span>: yahya</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@email</span>: yahya@sf-express.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span>: $&#123;YEAR&#125;/$&#123;MONTH&#125;/$&#123;DAY&#125; $&#123;HOUR&#125;:$&#123;MINUTE&#125;</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><p><strong>Live Templates 配置</strong></p><p>点击 File -&gt; Settings -&gt; Editor -&gt; Live Templates，点击右侧的 + 号按钮新建一个 Template Group，命名为 Description。</p><p>然后在名为 Description 的 Template Group 上面在新建一个 Live Template，内容填充如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@description</span>: $description$</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span>: $user$</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@email</span>: $email$</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span>: $date$ $time$</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><p>整体配置效果图如下所示：</p><img src="/posts/4a9b2d4f/image-20221222150438908.png" class alt="image-20221222150438908"><p>然后再点击 Edit Variables 按钮，为每个变量设置值，效果如下：</p><img src="/posts/4a9b2d4f/image-20221222150522109.png" alt="image-20221222150522109" style="zoom:67%;"><p>常用内置变量定义如下：</p><ul><li>${PACKAGE_NAME} - 将在其中创建新类或接口的目标包的名称</li><li>${PROJECT_NAME} - 当前项目的名称</li><li>${FILE_NAME} - 将要创建的文件的名称</li><li>${NAME} - 您在创建文件的过程中，在 “新建文件” 对话框中指定的新文件的名称</li><li>${USER} - 当前用户的登录名</li><li>${DATE} - 当前系统日期</li><li>${TIME} - 当前系统时间</li><li>${YEAR} - 本年度</li><li>${MONTH} - 本月</li><li>${DAY} - 当月的当前日期</li><li>${HOUR} - 当前时间</li><li>${MINUTE} - 当前分钟。</li><li>${PRODUCT_NAME} - 将在其中创建文件的 IDE 的名称。</li><li>${MONTH_NAME_SHORT} - 月份名称的前3个字母。示例：1月，2月等。</li><li>${MONTH_NAME_FULL} - 一个月的全名。示例：1月，2月等</li></ul><h2 id="去除-Usage-提示"><a href="#去除-Usage-提示" class="headerlink" title="去除 Usage 提示"></a>去除 Usage 提示</h2><p>点击 Settings -&gt; Editor -&gt; Inlay Hints，在 Code vision 栏取消 Usages 的勾选项，如下图所示：</p><img src="/posts/4a9b2d4f/image-20230131110248142.png" alt="image-20230131110248142" style="zoom:80%;"><h2 id="取消-indexing"><a href="#取消-indexing" class="headerlink" title="取消 indexing"></a>取消 indexing</h2><p>File -&gt; Settings 中直接搜索 index</p><img src="/posts/4a9b2d4f/image-20230228164823678.png" alt="image-20230228164823678" style="zoom:67%;"><p>然后旁边两个选项都选择 Ask before download</p><h2 id="关闭页面显示的浏览器图标"><a href="#关闭页面显示的浏览器图标" class="headerlink" title="关闭页面显示的浏览器图标"></a>关闭页面显示的浏览器图标</h2><p>依次点击 File -&gt; Settings -&gt; Tools -&gt; Web Browsers and Preview，将多余的勾选项全部取消勾选，最终效果如下：</p><img src="/posts/4a9b2d4f/image-20230404103115943.png" alt="image-20230404103115943" style="zoom:67%;"><h2 id="设置默认换行符"><a href="#设置默认换行符" class="headerlink" title="设置默认换行符"></a>设置默认换行符</h2><p>依次展开 File -&gt; Settings -&gt; Editor -&gt; Code Style，可以看到，默认是 System-Dependent，这个其实还是很牛叉的，根据系统自动配置，但是你是 windows 系统，默认是 CRLF，服务器是 Linux，默认效果如下图所示：</p><img src="/posts/4a9b2d4f/image-20230422233552207.png" alt="image-20230422233552207" style="zoom: 67%;"><h2 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h2><blockquote><p>要求：双方代码一致，否则远程调试无法启动。</p></blockquote><h3 id="IDEA-中指定-Debug-服务器"><a href="#IDEA-中指定-Debug-服务器" class="headerlink" title="IDEA 中指定 Debug 服务器"></a>IDEA 中指定 Debug 服务器</h3><p>点击主窗口菜单 Run &#x2F; Edit Configurations，打开“Run&#x2F;Debug Configurations”窗口；</p><p>点击工具栏上的“+”按钮，下拉菜单中选择“Remote”；</p><p>设置 Host 为远程服务器的域名或IP，保持 Port&#x3D;5005 无需调整；</p><p>复制命令行参数，形如 -agentlib:jdwp&#x3D;transport&#x3D;dt_socket,server&#x3D;y,suspend&#x3D;n,address&#x3D;5005</p><img src="/posts/4a9b2d4f/常用配置/image-20230602100148022-16856713096751.png" alt="image-20230602100148022" style="zoom:80%;"><h3 id="远程服务中开启-Debug-服务"><a href="#远程服务中开启-Debug-服务" class="headerlink" title="远程服务中开启 Debug 服务"></a>远程服务中开启 Debug 服务</h3><p><strong>对于 SpringBoot</strong></p><p>命令行添加选项，并重启：</p><p>注意新参数必须在 -jar 之前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jar -agentlib:jdwp=transport=dt_socket,server=y,<span class="hljs-built_in">suspend</span>=n,address=5005 -jar test.jar<br></code></pre></td></tr></table></figure><p><strong>对于 Tomcat</strong></p><p>启动脚本中添加选项，并重启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo vim $CATALINA_HOME/bin/catalina.sh</span><br><br>JAVA_OPTS=<span class="hljs-string">&quot;<span class="hljs-variable">$JAVA_OPTS</span> -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&quot;</span><br></code></pre></td></tr></table></figure><p><strong>远程服务器防火墙端口放行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># sudo vim /etc/sysconfig/iptables</span><br><br>-A INPUT -m state --state NEW -m tcp -p tcp --dport 5005 -j ACCEPT<br><br><span class="hljs-comment"># 重启生效</span><br>sudo systemctl restart iptables<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;右键增加-Open-Folder-as-IntelliJ-IDEA-Project&quot;&gt;&lt;a href=&quot;#右键增加-Open-Fo</summary>
      
    
    
    
    <category term="研发工具" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Intellij IDEA" scheme="https://blog.yahyav2rayssr.top/categories/%E7%A0%94%E5%8F%91%E5%B7%A5%E5%85%B7/Intellij-IDEA/"/>
    
    
    <category term="intellij idea" scheme="https://blog.yahyav2rayssr.top/tags/intellij-idea/"/>
    
  </entry>
  
  <entry>
    <title>运维常用命令-常用篇</title>
    <link href="https://blog.yahyav2rayssr.top/posts/e9ae7850/"/>
    <id>https://blog.yahyav2rayssr.top/posts/e9ae7850/</id>
    <published>2023-06-19T14:22:38.913Z</published>
    <updated>2023-06-19T14:22:38.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-ls-系列"><a href="#1-ls-系列" class="headerlink" title="1. ls 系列"></a>1. ls 系列</h1><blockquote><p>-F：根据文件、目录等信息在文件名或目录名最后给予附加数据结构</p><ol><li>*  代表可执行文件；</li><li>&#x2F;  代表目录</li><li>&#x3D;  代表socket文件</li><li>|  代表FIFO文件</li><li>@  代表连接文件</li></ol></blockquote><h2 id="1-只显示文件类型，排除目录"><a href="#1-只显示文件类型，排除目录" class="headerlink" title="1. 只显示文件类型，排除目录"></a>1. 只显示文件类型，排除目录</h2><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><blockquote><p>^[^d] 是一个正则表达式，[^d] 表示字符串含有一个不是 d 的字符， ^d 表示以 d 开头，^[^d] 表示不以 d 开头</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep ^[^d]<br></code></pre></td></tr></table></figure><p>所以只显示文件夹的写法为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep ^d<br></code></pre></td></tr></table></figure><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep -v ^d<br></code></pre></td></tr></table></figure><p>如果文件名包含空格，可以用下面命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls -l | grep -v [/$]<br></code></pre></td></tr></table></figure><hr><h1 id="2-sed-系列"><a href="#2-sed-系列" class="headerlink" title="2. sed 系列"></a>2. sed 系列</h1><h2 id="1-替换字符串"><a href="#1-替换字符串" class="headerlink" title="1. 替换字符串"></a>1. 替换字符串</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed &#x27;s/old/new/g&#x27;<br></code></pre></td></tr></table></figure><h1 id="3-rm-系列"><a href="#3-rm-系列" class="headerlink" title="3. rm 系列"></a>3. rm 系列</h1><h2 id="1-删除带有指定字符串的文件"><a href="#1-删除带有指定字符串的文件" class="headerlink" title="1. 删除带有指定字符串的文件"></a>1. 删除带有指定字符串的文件</h2><h3 id="方法一：-1"><a href="#方法一：-1" class="headerlink" title="方法一："></a>方法一：</h3><blockquote><p>注意字符串如果含有特殊字符，必须做转义处理，否则默认会删除当前目录下的所有文件。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -f *字符串*<br></code></pre></td></tr></table></figure><h3 id="方法二：-1"><a href="#方法二：-1" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find -type f -name &#x27;*字符串*&#x27; -delete<br></code></pre></td></tr></table></figure><h1 id="4-awk-系列"><a href="#4-awk-系列" class="headerlink" title="4. awk 系列"></a>4. awk 系列</h1><h2 id="1-获取某一行中指定字符后的内容"><a href="#1-获取某一行中指定字符后的内容" class="headerlink" title="1. 获取某一行中指定字符后的内容"></a>1. 获取某一行中指定字符后的内容</h2><p>比如有个xxx.txt文件，里面有很多行内容，其中有行内容为ro.xxx&#x3D;123，要想获取到123这个值，可以如下处理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/sh</span><br>NAME=`cat xxx.txt | grep &#x27;ro.xxx&#x27; | awk -F &#x27;=&#x27; &#x27;&#123;print $2&#125;&#x27;`<br>echo $NAME<br></code></pre></td></tr></table></figure><h1 id="5-cd-dirname-0-pwd"><a href="#5-cd-dirname-0-pwd" class="headerlink" title="5. $(cd dirname $0;pwd)"></a>5. $(cd <code>dirname $0</code>;pwd)</h1><p><code>cd &quot;$(dirname &quot;$0&quot;)&quot;;pwd</code> 等同于 <code>$(dirname $(readlink -f &quot;$0&quot;))</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在/home/admin/test/下新建test.sh内容如下：</span><br>cd `dirname $0`<br>echo `pwd`<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后返回到/home/admin/执行</span><br>sh test/test.sh<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">运行结果:</span><br>/home/admin/test<br></code></pre></td></tr></table></figure><h1 id="6-basename"><a href="#6-basename" class="headerlink" title="6. basename"></a>6. basename</h1><h2 id="1-basename"><a href="#1-basename" class="headerlink" title="1. basename"></a>1. basename</h2><p>打印除上层路径外的基础文件名；当文件名后存在后缀时，除去后面的后缀，如 # basename include&#x2F;stdio.h .h 只会打印出 stdio</p><h2 id="2-basename-s"><a href="#2-basename-s" class="headerlink" title="2. basename -s"></a>2. basename -s</h2><p>-s参数后面指定要去除的后缀字符，即：# basename -s .h include&#x2F;stdio.h 同 # basename include&#x2F;stdio.h .h 一样只会打印出 stdio</p><h2 id="3-basename-a"><a href="#3-basename-a" class="headerlink" title="3. basename -a"></a>3. basename -a</h2><p>-a参数可追加执行多个文件路径，取每一个路径的基础文件名并打印。用法如下图：</p><h1 id="7-pwd"><a href="#7-pwd" class="headerlink" title="7. pwd"></a>7. pwd</h1><h2 id="1-pwd-L"><a href="#1-pwd-L" class="headerlink" title="1. pwd -L"></a>1. pwd -L</h2><p>打印出环境变量 $PWD 的值，如果 PWD 赋值为当前工作路径，pwd 默认同 pwd -L</p><h2 id="2-pwd-P"><a href="#2-pwd-P" class="headerlink" title="2. pwd -P"></a>2. pwd -P</h2><p>打印真实路径，不打印链接的路径，区别如图：</p><h1 id="8-watch"><a href="#8-watch" class="headerlink" title="8. watch"></a>8. watch</h1><p><strong>命令参数</strong>：</p><p>-n 或 –interval watch 缺省每2秒运行一下程序，可以用 -n 或 -interval 来指定间隔的时间。</p><p>-d 或 –differences 用 -d 或 –differences 选项 watch 会高亮显示变化的区域。 而 -d&#x3D;cumulative 选项会把变动过的地方(不管最近的那次有没有变动)都高亮显示出来。</p><p>-t 或-no-title 会关闭watch命令在顶部的时间间隔,命令，当前时间的输出。</p><p><strong>示例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">watch -n 1 -d &quot;&lt;command&gt;&quot;<br></code></pre></td></tr></table></figure><h1 id="9-grep"><a href="#9-grep" class="headerlink" title="9. grep"></a>9. grep</h1><table><thead><tr><th>元字符</th><th>功能</th><th>例子</th><th>匹配什么</th></tr></thead><tbody><tr><td>^</td><td>锚定行的开始</td><td>&#x2F;^love&#x2F;</td><td>匹配所有以love开头的行</td></tr><tr><td>$</td><td>锚定行的结束</td><td>&#x2F;love$&#x2F;</td><td>匹配所有以love 结束的行</td></tr><tr><td>.</td><td>匹配一个字符</td><td>&#x2F;l..e&#x2F;</td><td>匹配这样的行，这些行包含这样的字符：第一个字符是l,紧跟着两个字符，然后是e</td></tr><tr><td>*</td><td>代表0个或多个先前字符</td><td>&#x2F;*love&#x2F;</td><td>匹配所有这样的行，有0个或多个空格，空格后跟着love</td></tr><tr><td>[]</td><td>匹配字符组中的一个字符</td><td>&#x2F;[Ll]ove&#x2F;</td><td>匹配所有包含love或者Love的行</td></tr><tr><td>[^]</td><td>匹配一个不在范围内的字符</td><td>&#x2F;[^A-Z]ove&#x2F;</td><td></td></tr><tr><td>&lt;</td><td>锚定单词的开始</td><td>&lt;love</td><td>匹配所有这样的行，这些行包含以love开头的单词（vi和grep支持这个功能）</td></tr><tr><td>&gt;</td><td>锚定单词的结束</td><td>Love&gt;</td><td>匹配所有这样的行，这些行包含以love结束的单词（vi和grep支持这个功能）</td></tr><tr><td>(..)</td><td>标记后面用到的匹配字符</td><td>&#x2F;(love)able1rs&#x2F;</td><td>最多可以使用9个标签。第一个标签是模板最左边的部分。在本例子中，模板love保存的标签为1，后面的1指得就是love；本例子搜索的是这样的行，这些行包含这样的字符，在Loveabel后面跟着lovers</td></tr><tr><td>x{m}</td><td>M次复制字符x</td><td></td><td></td></tr><tr><td>x{m,}</td><td>至少m次复制字符x</td><td></td><td></td></tr><tr><td>x{m,n}</td><td>至少m次，至多n次复制字x</td><td></td><td></td></tr><tr><td>w</td><td>文字和数字字符，[A-Za-z0-9]</td><td>Lw*e</td><td>匹配一个l字符，紧跟着0个或多个文字或数字字符，然后是e</td></tr><tr><td>W</td><td>同上</td><td></td><td></td></tr><tr><td>b</td><td>单词分界线</td><td>bloveb</td><td>仅仅匹配单词love</td></tr></tbody></table><h2 id="递归查找某个文本内容"><a href="#递归查找某个文本内容" class="headerlink" title="递归查找某个文本内容"></a>递归查找某个文本内容</h2><ul><li>R 表示递归，就是在当前目录找不到就去子目录找 </li><li>E 表示把文件名也打印出来 </li><li>n 打印此行在文件中的位置。</li></ul><p>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">这句可以显示在哪个文件里包含3306</span><br>grep -Rl &quot;3306&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">可以显现文件名，行数</span><br>grep -REn &quot;3306&quot;<br></code></pre></td></tr></table></figure><h3 id="查找替换内容"><a href="#查找替换内容" class="headerlink" title="查找替换内容"></a>查找替换内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">sed -i <span class="hljs-string">&quot;s/[原字符串]/[新字符串]/g&quot;</span> `grep <span class="hljs-string">&#x27;[原字符串]&#x27;</span> -rl /opt/kubernetes`</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">示例：替换/opt/kubernetes下所有文件内容为242的换成245</span><br>sed -i &quot;s/242/245/g&quot; `grep &#x27;242&#x27; -rl /opt/kubernetes`<br></code></pre></td></tr></table></figure><h1 id="10-查看端口占用"><a href="#10-查看端口占用" class="headerlink" title="10. 查看端口占用"></a>10. 查看端口占用</h1><h2 id="查看那些程序使用tcp的80端口"><a href="#查看那些程序使用tcp的80端口" class="headerlink" title="查看那些程序使用tcp的80端口"></a>查看那些程序使用tcp的80端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">fuser -v -n tcp 80<br><br>fuser -v 80/tcp  <br></code></pre></td></tr></table></figure><h1 id="11-find-查找命令"><a href="#11-find-查找命令" class="headerlink" title="11. find 查找命令"></a>11. find 查找命令</h1><blockquote><p>find 基本语法如下：</p><p>find [PATH] [Option] [action]</p></blockquote><p>-type TYPE: 查找文件类型为 TYPE 的，类型主要有：</p><ul><li><p>一般正规文件(f)</p></li><li><p>设备文件 (b,c)</p></li><li><p>目录 (d)</p></li><li><p>连接文件 (l)</p></li><li><p>socket (s)</p></li><li><p>FIFO (p)</p></li></ul><h1 id="12-unzip-压缩-x2F-解压缩命令"><a href="#12-unzip-压缩-x2F-解压缩命令" class="headerlink" title="12. unzip 压缩&#x2F;解压缩命令"></a>12. unzip 压缩&#x2F;解压缩命令</h1><blockquote><p><strong>unzip 命令参数一览：</strong></p><ul><li>-x “文件列表” 解压文件，但不包含文件列表中指定的文件</li><li>-t 测试压缩文件有无损坏，并不解压</li><li>-v 查看压缩文件的详细信息，具体包括压缩文件中包含的文件大小、文件名和压缩比等，并不解压</li><li>-n 解压时不覆盖已经存在的文件</li><li>-o 解压时覆盖已经存在的文件，并且不要求用户确认</li><li>-d 目录名 把压缩文件解压到指定目录下</li></ul><p><strong>zip 命令参数一览：</strong></p><ul><li>-r 递归压缩，将指定目录下的所有文件以及子目录全部压缩</li><li>-d 从压缩文件内删除指定的文件</li><li>-i “文件列表” 只压缩文件列表中的文件</li><li>-x “文件列表” 压缩时排除文件列表中指定的文件</li><li>-u 更新文件到压缩文件中</li><li>-m 将文件加入压缩文件压缩后，删除原始文件，即把文件移到压缩文件中</li><li>-F 尝试修复损坏的压缩文件</li><li>-T 检查压缩文件内的每个文件是否正确无误</li><li>- 压缩级别 压缩级别是一个1～9的数字</li></ul></blockquote><p>下面举一些例子：</p><p>把一个文件 1.txt 和一个目录 dir1 压缩成为 yasuo.zip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zip -r example.zip 1.txt dir1<br></code></pre></td></tr></table></figure><p>查看压缩包内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip -v example.zip<br></code></pre></td></tr></table></figure><p>验证压缩文件是否下载完全</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip -t example.zip<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-ls-系列&quot;&gt;&lt;a href=&quot;#1-ls-系列&quot; class=&quot;headerlink&quot; title=&quot;1. ls 系列&quot;&gt;&lt;/a&gt;1. ls 系列&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;-F：根据文件、目录等信息在文件名或目录名最后给予附加数据结构&lt;/p&gt;</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="常用命令" scheme="https://blog.yahyav2rayssr.top/categories/%E8%BF%90%E7%BB%B4/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="命令" scheme="https://blog.yahyav2rayssr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>翻墙杂项</title>
    <link href="https://blog.yahyav2rayssr.top/posts/126dc918/"/>
    <id>https://blog.yahyav2rayssr.top/posts/126dc918/</id>
    <published>2023-06-19T14:22:38.911Z</published>
    <updated>2023-06-19T14:22:38.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="一级域名"><a href="#一级域名" class="headerlink" title="一级域名"></a>一级域名</h2><p>yahyav2rayssr.top</p><h2 id="namesilo"><a href="#namesilo" class="headerlink" title="namesilo"></a>namesilo</h2><table><thead><tr><th>用户名</th><th>邮箱</th><th>密码</th></tr></thead><tbody><tr><td>yahya-yaoyuming</td><td><a href="mailto:&#x36;&#55;&#x32;&#53;&#53;&#x34;&#x37;&#x38;&#52;&#x40;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;">&#x36;&#55;&#x32;&#53;&#53;&#x34;&#x37;&#x38;&#52;&#x40;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;</a></td><td>Yao88219620ko!</td></tr></tbody></table><h2 id="cloudflare"><a href="#cloudflare" class="headerlink" title="cloudflare"></a>cloudflare</h2><table><thead><tr><th>邮箱</th><th>密码</th></tr></thead><tbody><tr><td><a href="mailto:&#54;&#x37;&#50;&#53;&#x35;&#x34;&#x37;&#x38;&#x34;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;">&#54;&#x37;&#50;&#53;&#x35;&#x34;&#x37;&#x38;&#x34;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;</a></td><td>Yao88219620ko!</td></tr></tbody></table><h3 id="端口说明文档"><a href="#端口说明文档" class="headerlink" title="端口说明文档"></a>端口说明文档</h3><p>参考链接：<a href="https://developers.cloudflare.com/fundamentals/get-started/reference/network-ports/">https://developers.cloudflare.com/fundamentals/get-started/reference/network-ports/</a></p><p>已开放HTTPS端口有：443, 2053, 2083, 2087, 2096, 8443</p><p>全局API KEY:</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">66</span>f6f58b393232b878e6a855ab<span class="hljs-number">40944431724</span><br></code></pre></td></tr></table></figure><h3 id="DNS-缓存清除"><a href="#DNS-缓存清除" class="headerlink" title="DNS 缓存清除"></a>DNS 缓存清除</h3><ol><li>DNS 解析 CloudFlare 1.1.1.1、1.0.0.1 的类型：</li></ol><p>​<a href="https://cloudflare-dns.com/purge-cache/">https://cloudflare-dns.com/purge-cache/</a></p><ol start="2"><li>DNS 解析为 Google 8.8.8.8、8.8.4.4 的类型：</li></ol><p>​<a href="https://developers.google.com/speed/public-dns/cache?hl=zh-cn">https://developers.google.com/speed/public-dns/cache?hl=zh-cn</a></p><h2 id="hosteONS"><a href="#hosteONS" class="headerlink" title="hosteONS"></a>hosteONS</h2><blockquote><p>VPS 服务器信息。</p><p>IP付款链接： <a href="https://my.hosteons.com/viewinvoice.php?id=107772&paymentsuccess=true">https://my.hosteons.com/viewinvoice.php?id=107772&amp;paymentsuccess=true</a></p></blockquote><table><thead><tr><th>邮箱</th><th>密码</th></tr></thead><tbody><tr><td><a href="mailto:&#x36;&#x37;&#50;&#53;&#x35;&#52;&#x37;&#x38;&#x34;&#64;&#113;&#113;&#46;&#99;&#111;&#x6d;">&#x36;&#x37;&#50;&#53;&#x35;&#52;&#x37;&#x38;&#x34;&#64;&#113;&#113;&#46;&#99;&#111;&#x6d;</a></td><td>Yao88219620ko!</td></tr></tbody></table><h2 id="x-ui-面板信息"><a href="#x-ui-面板信息" class="headerlink" title="x-ui 面板信息"></a>x-ui 面板信息</h2><table><thead><tr><th>访问地址</th><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td><a href="https://194.33.38.170:8443/">https://194.33.38.170:8443/</a> 或者 <a href="https://vless.yahyav2rayssr.top:8443/">https://vless.yahyav2rayssr.top:8443</a></td><td>admin</td><td>7613302589</td></tr></tbody></table><h2 id="x-ui-安装"><a href="#x-ui-安装" class="headerlink" title="x-ui 安装"></a>x-ui 安装</h2><blockquote><p>这里采用 centos7-minin 系统。</p></blockquote><p>系统安装证书前置命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install crontabs<br>yum -y install openssl openssl-devel<br>curl https://get.acme.sh | sh<br><br>yum update -y          # Debian/Ubuntu 命令<br>yum install -y curl socat    #Debian/Ubuntu 命令<br></code></pre></td></tr></table></figure><p>x-ui 面板安装：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">bash &lt;(curl -Ls https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/vaxilu/</span>x-ui<span class="hljs-regexp">/master/i</span>nstall.sh) <br></code></pre></td></tr></table></figure><h2 id="vmess-x2F-vless-地址转换"><a href="#vmess-x2F-vless-地址转换" class="headerlink" title="vmess&#x2F;vless 地址转换"></a>vmess&#x2F;vless 地址转换</h2><p><a href="https://sub-zh.vercel.app/">https://sub-zh.vercel.app/</a></p><h2 id="DNS-配置"><a href="#DNS-配置" class="headerlink" title="DNS 配置"></a>DNS 配置</h2><p>参考链接：<a href="https://limbopro.com/archives/DoH.html#DNS-over-HTTPS/TLS_(DoH/DoT)%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F&gsc.tab=0">https://limbopro.com/archives/DoH.html#DNS-over-HTTPS/TLS_(DoH/DoT)%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F&amp;gsc.tab=0</a></p><p><strong>可用的DNS服务器列表（支持DoT）</strong></p><table><thead><tr><th align="center">DNS服务器（支持DoT）</th><th align="center">服务商</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><strong>223.5.5.5</strong> &#x2F; <strong>223.6.6.6</strong> &#x2F; 2400:3200::1 &#x2F; 2400:3200:baba::1</td><td align="center"><a href="https://www.alidns.com/">Alidns</a></td><td align="center"><a href="https://www.alidns.com/">参阅</a></td></tr><tr><td align="center">119.29.29.29 or 182.254.116.116 &#x2F; 2402:4e00:: &#x2F; 1.12.12.12 &#x2F; 120.53.53.53</td><td align="center">Tencent&#x2F;<a href="https://dns.pub/">DNSPOD</a></td><td align="center"><a href="https://dns.pub/">参阅</a></td></tr><tr><td align="center"><strong>8.8.8.8</strong> or <strong>8.8.4.4</strong> 2001:4860:4860::8888 or 2001:4860:4860::8844</td><td align="center">Google</td><td align="center"><a href="https://developers.google.com/speed/public-dns/privacy">参阅</a></td></tr><tr><td align="center"><strong>1.1.1.1</strong> or <strong>1.0.0.1</strong> 2606:4700:4700::1111 or 2606:4700:4700::1001</td><td align="center">Cloudflare</td><td align="center"><a href="https://www.cloudflare.com/zh-cn/dns/">参阅</a></td></tr><tr><td align="center"><strong>94.140.14.14</strong> or <strong>94.140.15.15</strong> for “Default”;</td><td align="center">Adguard</td><td align="center"><a href="https://adguard.com/en/blog/adguard-dns-announcement.html">参阅</a></td></tr><tr><td align="center"><strong>94.140.14.15</strong> or <strong>94.140.15.16</strong> for “Family protection”.</td><td align="center">Adguard</td><td align="center"><a href="https://adguard.com/en/blog/adguard-dns-announcement.html">参阅</a></td></tr></tbody></table><p><strong>可用的DNS服务器列表（支持DoH）</strong></p><p>可用的 DNS-over-HTTPS (DoH) 解析服务完整参阅：<a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">传送门</a>；</p><table><thead><tr><th align="center">DoH服务器（URL）</th><th align="center">服务商</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://dns.alidns.com/dns-query">https://dns.alidns.com/dns-query</a></td><td align="center">Alidns</td><td align="center"><a href="https://www.alidns.com/">参阅</a></td></tr><tr><td align="center"><a href="https://cloudflare-dns.com/dns-query">https://cloudflare-dns.com/dns-query</a></td><td align="center">Cloudflare</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr><tr><td align="center"><a href="https://mozilla.cloudflare-dns.com/dns-query">https://mozilla.cloudflare-dns.com/dns-query</a></td><td align="center">Cloudflare</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr><tr><td align="center"><a href="https://dns.google/dns-query">https://dns.google/dns-query</a></td><td align="center">Google</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr><tr><td align="center"><a href="https://dns.adguard.com/dns-query">https://dns.adguard.com/dns-query</a></td><td align="center">Adguard</td><td align="center"><a href="https://adguard.com/en/blog/adguard-dns-announcement.html">参阅</a></td></tr><tr><td align="center"><a href="https://dns-family.adguard.com/dns-query">https://dns-family.adguard.com/dns-query</a></td><td align="center">Adguard</td><td align="center"><a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Public+Resolvers">参阅</a></td></tr></tbody></table><p><strong>建议日常使用 DNS 如下：</strong></p><table><thead><tr><th>DNS</th><th>说明</th></tr></thead><tbody><tr><td>223.5.5.5、223.6.6.6</td><td>阿里云的 DNS 服务器</td></tr><tr><td>119.29.29.29</td><td>腾讯云的 DNS 服务器</td></tr><tr><td>114.114.114.114</td><td>国内移动、电信、联通的通用的 DNS，因为存在污染问题，优先级放到最低</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h2 id=&quot;一级域名&quot;&gt;&lt;a href=&quot;#一级域名&quot; class=&quot;headerlink&quot; title=&quot;一级域名&quot;&gt;&lt;/a&gt;一级域名&lt;/h</summary>
      
    
    
    
    <category term="工具" scheme="https://blog.yahyav2rayssr.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://blog.yahyav2rayssr.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Maven 常见问题</title>
    <link href="https://blog.yahyav2rayssr.top/posts/4f5fa1df/"/>
    <id>https://blog.yahyav2rayssr.top/posts/4f5fa1df/</id>
    <published>2023-06-19T14:22:38.909Z</published>
    <updated>2023-06-19T14:22:38.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="1、Maven-多模块打包时提示-找不到符号"><a href="#1、Maven-多模块打包时提示-找不到符号" class="headerlink" title="1、Maven 多模块打包时提示 找不到符号"></a>1、Maven 多模块打包时提示 找不到符号</h2><p>子模块使用 pom 打包方式即可解决</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果还未能解决，在公共模块或者当前模块下加入打包工具</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;build&gt;<br>    &lt;plugins&gt;<br>        &lt;plugin&gt;<br>            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;<br>     &lt;!-- 加入此配置start --&gt;<br>            &lt;configuration&gt;<br>                &lt;classifier&gt;exec&lt;/classifier&gt;<br>            &lt;/configuration&gt;<br>     &lt;!-- 加入此配置end --&gt;<br>        &lt;/plugin&gt;<br>    &lt;/plugins&gt;<br>&lt;/build&gt;<br></code></pre></td></tr></table></figure><h2 id="2、Could-not-find-artifact-XXXX-in-aliyun-spring"><a href="#2、Could-not-find-artifact-XXXX-in-aliyun-spring" class="headerlink" title="2、Could not find artifact XXXX in aliyun-spring"></a>2、Could not find artifact XXXX in aliyun-spring</h2><p>Maven在下载依赖时会先在本地仓库查找，如若未找到，则会去内网私服查找，如若仍未找到，再去远程仓库查找。</p><p>所以只要把jar包打包到本地缓存仓库即可，如下图所示：</p><img src="/posts/4f5fa1df/image-20210710161747133.png" class alt="image-20210710161747133"><h2 id="3、Failed-to-execute-goal-org-apache-maven-plugins-maven-clean-plugin"><a href="#3、Failed-to-execute-goal-org-apache-maven-plugins-maven-clean-plugin" class="headerlink" title="3、Failed to execute goal org.apache.maven.plugins:maven-clean-plugin"></a>3、Failed to execute goal org.apache.maven.plugins:maven-clean-plugin</h2><p>解除提示对应的文件占用即可</p><h2 id="4、org-x2F-apache-x2F-maven-x2F-shared-x2F-artifact-x2F-filter-x2F-collection-x2F-ArtifactsFilter"><a href="#4、org-x2F-apache-x2F-maven-x2F-shared-x2F-artifact-x2F-filter-x2F-collection-x2F-ArtifactsFilter" class="headerlink" title="4、org&#x2F;apache&#x2F;maven&#x2F;shared&#x2F;artifact&#x2F;filter&#x2F;collection&#x2F;ArtifactsFilter"></a>4、org&#x2F;apache&#x2F;maven&#x2F;shared&#x2F;artifact&#x2F;filter&#x2F;collection&#x2F;ArtifactsFilter</h2><p>原来是没有在仓库中找到对应的插件，指定一个找得到的版本号即可解决</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.5.2.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="5、打包后丢失xml文件"><a href="#5、打包后丢失xml文件" class="headerlink" title="5、打包后丢失xml文件"></a>5、打包后丢失xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.properties<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 是否替换资源中的属性 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/resources<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="6、resolution-will-not-be-reattempted-until-the-update-interval-of-nexus-has-elapsed-or-updates-are-forced"><a href="#6、resolution-will-not-be-reattempted-until-the-update-interval-of-nexus-has-elapsed-or-updates-are-forced" class="headerlink" title="6、resolution will not be reattempted until the update interval of nexus has elapsed or updates are forced"></a>6、resolution will not be reattempted until the update interval of nexus has elapsed or updates are forced</h2><p>项目jar包是放在nexus上的，这是由于私服的更新策略导致的，nexus上的依赖库在更新库版本号打包时并没有更新，导致项目打包找不到依赖。</p><p>解决方法：</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>修改nexus的依赖库更新策略，添加 <code>&lt;updatePolicy&gt;always&lt;/updatePolicy&gt;</code></p><p>updatePolicy 该元素指定更新发生的频率。Maven会比较本地 POM 和远程 POM 的时间戳。这里的选项是：</p><ul><li>always（一直）</li><li>daily（默认，每日）</li><li>interval:X（这里X是以分钟为单位的时间间隔）</li><li>never（从不）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>zang-nexus<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">repositories</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">repository</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>zang-nexus<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://10.253.40.2XX:6XXX/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">releases</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>　　　　　　　　　 <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">releases</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">snapshots</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>　　　　　　　　　 <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">snapshots</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">repository</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">repositories</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pluginRepositories</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">pluginRepository</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>zang-nexus<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://10.253.40.2XX:6XXX/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">releases</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>　　　　　　　　　 <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">releases</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">snapshots</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">enabled</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">enabled</span>&gt;</span><br>　　　　　　　　　 <span class="hljs-tag">&lt;<span class="hljs-name">updatePolicy</span>&gt;</span>always<span class="hljs-tag">&lt;/<span class="hljs-name">updatePolicy</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">snapshots</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">pluginRepository</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">pluginRepositories</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>删除未下载成功的文件，重新编译</p><p>maven默认会使用本地缓存的库来编译工程，对于上次下载失败的库，maven会在 <code>Repository/&lt;group&gt;/&lt;artifact&gt;/&lt;version&gt;/</code> 目录下创建 xxx.lastUpdated 文件，一旦这个文件存在，那么在直到下一次nexus更新之前都不会更新这个依赖库，所以可以根据报错信息，删除 <code>Repository/&lt;group&gt;/&lt;artifact&gt;/&lt;version&gt;/</code> 目录下的 *.lastUpdated 文件，然后再次运行 mvn compile 编译工程。</p><h2 id="7、Maven传递依赖无法引入解决办法"><a href="#7、Maven传递依赖无法引入解决办法" class="headerlink" title="7、Maven传递依赖无法引入解决办法"></a>7、Maven传递依赖无法引入解决办法</h2><p>使用 <code>mvn install -X</code> 命令查看完整编译过程，发现有文件提示使用了<strong>未经检查或不安全的操作</strong>，在提示警告的文件类上增加以下注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SuppressWarnings(&quot;unchecked&quot;)</span><br></code></pre></td></tr></table></figure><p>问题解决。</p><h2 id="8、-WARNING-File-encoding-has-not-been-set-using-platform-encoding-UTF-8-i-e-build-is-platform-dependent"><a href="#8、-WARNING-File-encoding-has-not-been-set-using-platform-encoding-UTF-8-i-e-build-is-platform-dependent" class="headerlink" title="8、[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent"></a>8、[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent</h2><p>在 pom.xml 文件中增加一个配置项：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">project.build.sourceEncoding</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见问题&quot;&gt;&lt;a href=&quot;#常见问题&quot; class=&quot;headerlink&quot; title=&quot;常见问题&quot;&gt;&lt;/a&gt;常见问题&lt;/h1&gt;&lt;h2 id=&quot;1、Maven-多模块打包时提示-找不到符号&quot;&gt;&lt;a href=&quot;#1、Maven-多模块打包时提示-找不到符号&quot;</summary>
      
    
    
    
    <category term="Java" scheme="https://blog.yahyav2rayssr.top/categories/Java/"/>
    
    <category term="maven" scheme="https://blog.yahyav2rayssr.top/categories/Java/maven/"/>
    
    
    <category term="maven" scheme="https://blog.yahyav2rayssr.top/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven 常用配置</title>
    <link href="https://blog.yahyav2rayssr.top/posts/615834e0/"/>
    <id>https://blog.yahyav2rayssr.top/posts/615834e0/</id>
    <published>2023-06-19T14:22:38.864Z</published>
    <updated>2023-06-19T14:22:38.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h1><h2 id="profile配置实现动态切换环境"><a href="#profile配置实现动态切换环境" class="headerlink" title="profile配置实现动态切换环境"></a>profile配置实现动态切换环境</h2><h3 id="1-更改-spring-profiles-active"><a href="#1-更改-spring-profiles-active" class="headerlink" title="1. 更改 spring.profiles.active"></a>1. 更改 spring.profiles.active</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">spring.profiles.active</span>=<span class="hljs-string">@env@</span><br></code></pre></td></tr></table></figure><h3 id="2-pom-xml-配置"><a href="#2-pom-xml-配置" class="headerlink" title="2. pom.xml 配置"></a>2. pom.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">project</span>&gt;</span><br>    ... 其他代码略 ...<br>    <span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 开发环境 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>dev<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">env</span>&gt;</span>dev<span class="hljs-tag">&lt;/<span class="hljs-name">env</span>&gt;</span><span class="hljs-comment">&lt;!-- 之前写的@env@就是通过这里的配置切换环境 --&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><span class="hljs-comment">&lt;!-- 指定缺省环境 --&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 测试环境 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">env</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">env</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 生产环境 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>prod<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">env</span>&gt;</span>prod<span class="hljs-tag">&lt;/<span class="hljs-name">env</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="/posts/615834e0/20190425165911454.png" class alt="img"><h2 id="maven-assembly-plugin配置"><a href="#maven-assembly-plugin配置" class="headerlink" title="maven-assembly-plugin配置"></a>maven-assembly-plugin配置</h2><h3 id="1-pom-xml-配置"><a href="#1-pom-xml-配置" class="headerlink" title="1. pom.xml 配置"></a>1. pom.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs xml">    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">appendAssemblyId</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">appendAssemblyId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>make-assembly<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>single<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">skipAssembly</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssembly</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">descriptors</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">descriptor</span>&gt;</span>src/main/assembly/$&#123;env.devMode&#125;/assembly.xml<span class="hljs-tag">&lt;/<span class="hljs-name">descriptor</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">descriptors</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">finalName</span>&gt;</span>$&#123;artifactId&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">finalName</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>dev<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">env.devMode</span>&gt;</span>dev<span class="hljs-tag">&lt;/<span class="hljs-name">env.devMode</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblyDEV</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblyDEV</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblySIT</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblySIT</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblyPROD</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblyPROD</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>sit<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">env.devMode</span>&gt;</span>sit<span class="hljs-tag">&lt;/<span class="hljs-name">env.devMode</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblyDEV</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblyDEV</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblySIT</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblySIT</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblyPROD</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblyPROD</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>prod<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">env.devMode</span>&gt;</span>prod<span class="hljs-tag">&lt;/<span class="hljs-name">env.devMode</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblyDEV</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblyDEV</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblySIT</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblySIT</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">skipAssemblyPROD</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">skipAssemblyPROD</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-assembly-xml-配置"><a href="#2-assembly-xml-配置" class="headerlink" title="2. assembly.xml 配置"></a>2. assembly.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">assembly</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>assembly<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">formats</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">format</span>&gt;</span>tar.gz<span class="hljs-tag">&lt;/<span class="hljs-name">format</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">formats</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">includeBaseDirectory</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">includeBaseDirectory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileSets</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileSet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/assembly/bin<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>bin<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">directoryMode</span>&gt;</span>0755<span class="hljs-tag">&lt;/<span class="hljs-name">directoryMode</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileMode</span>&gt;</span>0755<span class="hljs-tag">&lt;/<span class="hljs-name">fileMode</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">fileSet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileSet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/assembly/sit/conf<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>conf<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">directoryMode</span>&gt;</span>0744<span class="hljs-tag">&lt;/<span class="hljs-name">directoryMode</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileMode</span>&gt;</span>0644<span class="hljs-tag">&lt;/<span class="hljs-name">fileMode</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">fileSet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileSet</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>target<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>*.jar<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>lib<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">directoryMode</span>&gt;</span>0744<span class="hljs-tag">&lt;/<span class="hljs-name">directoryMode</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">fileMode</span>&gt;</span>0644<span class="hljs-tag">&lt;/<span class="hljs-name">fileMode</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">fileSet</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">fileSets</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">assembly</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="maven-source-plugin配置"><a href="#maven-source-plugin配置" class="headerlink" title="maven-source-plugin配置"></a>maven-source-plugin配置</h2><p><code>maven-source-plugin</code>可以实现自动将源码打包并发布</p><blockquote><p>注意：在多项目构建中，将source-plugin置于顶层或parent的pom中并不会发挥作用，必须置于具体项目的pom中。</p><h3 id="jar-no-fork-和-jar-的区别"><a href="#jar-no-fork-和-jar-的区别" class="headerlink" title="jar-no-fork 和 jar 的区别"></a><strong>jar-no-fork 和 jar 的区别</strong></h3><p><code>jar</code>目标是从命令行（ <code>mvn source:jar</code> ）运行， <code>jar-no-fork</code>意味着绑定到生命周期</p><p>如果将POM配置为运行<code>source:jar</code>目标作为生命周期的一部分，Maven将<strong>重新运行</strong>绑定到<code>generate-sources</code>及其前身的所有目标。 如果你有很多插件目标绑定到验证或初始化阶段，那么所有这些目标都将运行两次，从而延长了构建时间。</p><p>相比之下， <code>jar-no-fork</code>是你附加到构建生命周期的东西，因为它期望在<code>generate-sources</code>之后的某个地方绑定到某个阶段，并且不会再次运行绑定目标。</p><p>可以通过<code>mvn source:jar -X</code> 进行验证查看，<code>-X</code> 为<code>debug</code>模式</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        ...<br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-source-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>attach-sources<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>jar-no-fork<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        ...<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><p>执行 <code>mvn install</code>，maven会自动将source install到repository 。 </p><p>执行 <code>mvn deploy</code>，maven会自动将source deploy到remote-repository 。 </p><p>执行 <code>mvn source:jar</code>，单独打包源码。 </p><p>手动安装MAVEN安装source代码到本地库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn install:install-file -Dfile=E:/common-base-0.0.1-sources.jar -DgroupId=net.spy \<br>-DartifactId=spymemcached -Dversion=2.10.3 -Dpackaging=jar -Dclassifier=sources<br></code></pre></td></tr></table></figure><h2 id="spring-boot-maven-plugin配置"><a href="#spring-boot-maven-plugin配置" class="headerlink" title="spring-boot-maven-plugin配置"></a>spring-boot-maven-plugin配置</h2><blockquote><p>这是非 assembly 打包的方式。</p></blockquote><p><code>spring-boot-maven-plugin</code>包含如下几个goal:</p><table><thead><tr><th>goal</th><th>解释</th></tr></thead><tbody><tr><td>repackage</td><td>build 一个可执行的 jar 或者 war 包</td></tr><tr><td>run</td><td>运行 springboot 应用</td></tr><tr><td>start ，stop</td><td>这两个配合在一起，绑定在 integration-test 这个 phase，可以运行测试前后启动停止 spring boot 应用</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        ...<br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 指定该Main Class为全局的唯一入口 --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">mainClass</span>&gt;</span>com.demo.design.DesignPatternApplication<span class="hljs-tag">&lt;/<span class="hljs-name">mainClass</span>&gt;</span><br>                <span class="hljs-comment">&lt;!-- 原始包的后缀将变成.exec --&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">classifier</span>&gt;</span>exec<span class="hljs-tag">&lt;/<span class="hljs-name">classifier</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>repackage<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        ...<br><br>        ...<br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-jar-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">excludes</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>**/application.yml<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">exclude</span>&gt;</span>**/logback-spring.yml<span class="hljs-tag">&lt;/<span class="hljs-name">exclude</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">excludes</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        ...<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>mvn spring-boot:run</code></p><p>在命令行运行<code>mvn spring-boot:run</code>可以启动spring boot应用，并且可以通过如下配置给启动的jvm传递参数</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>    ...<br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">jvmArguments</span>&gt;</span><br>                -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005<br>              <span class="hljs-tag">&lt;/<span class="hljs-name">jvmArguments</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>    ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure><p>spring-boot-devtools</p><p>spring boot 1.3之后引入了<code>dev-tools</code>可以让你方便开发应用，在spring boot应用启动后，它监听资源文件的改变，或者重新编译生成class，有变化之后自动刷新（repackage是不会把dev-tools打进包的，所以生产环境dev-tool是不会起作用的）。</p><p>可以通过设置<code>spring.devtools.remote.restart.enabled=false</code>这个java系统属性，是的dev-tools只在静态资源改变时才刷新。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>...<br> <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.5.4.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--指定optional为true可以避免被repackage打war时devtools也被打进war包--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="引入lib下的第三方jar包并打包进去"><a href="#引入lib下的第三方jar包并打包进去" class="headerlink" title="引入lib下的第三方jar包并打包进去"></a>引入lib下的第三方jar包并打包进去</h2><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>如果需要引用的jar包在Maven中央仓库下没有，那么怎么在项目中引入。</p><p>首先在工程目录下新建libs目录</p><p>将需要引入的jar包放在此目录下</p> <img src="/posts/615834e0/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JBREFPX0xJVU1BTkdfUUlaSEk=,size_16,color_FFFFFF,t_70.jpeg" alt="img" style="zoom:67%;"><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>在添加依赖的地方</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mobileimsdk4j_tcp<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mobileimsdk4j_tcp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>system<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">systemPath</span>&gt;</span>$&#123;basedir&#125;/libs/mobileimsdk4j_tcp.jar<span class="hljs-tag">&lt;/<span class="hljs-name">systemPath</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注意这里的坐标和版本号随意，但是 scope 要写 system，然后 systemPath 就是上面 jar 包的路径</p><p>然后这样用的话，在将项目进行打包时，需要将这些jar包也打包进去。</p><p>然后需要借助于打包插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.6.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">encoding</span>&gt;</span>UTF-8<span class="hljs-tag">&lt;/<span class="hljs-name">encoding</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">compilerArguments</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">extdirs</span>&gt;</span>$&#123;project.basedir&#125;/libs<span class="hljs-tag">&lt;/<span class="hljs-name">extdirs</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">compilerArguments</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注意这里的extdirs的路径，这里是项目根目录下的libs目录</p><img src="/posts/615834e0/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JBREFPX0xJVU1BTkdfUUlaSEk=,size_16,color_FFFFFF,t_70-16665409181285.jpeg" alt="img" style="zoom:67%;"><h2 id="实时拉取-SNAOSHOT-最新依赖"><a href="#实时拉取-SNAOSHOT-最新依赖" class="headerlink" title="实时拉取 SNAOSHOT 最新依赖"></a>实时拉取 SNAOSHOT 最新依赖</h2><p>打开 File -&gt; Settings -&gt; Build,Execution,Deployment -&gt; Build Tools -&gt; Maven，勾选 Always update snaphosts 即可。</p><img src="/posts/615834e0/image-20221124153611331.png" alt="image-20221124153611331" style="zoom:67%;">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用配置&quot;&gt;&lt;a href=&quot;#常用配置&quot; class=&quot;headerlink&quot; title=&quot;常用配置&quot;&gt;&lt;/a&gt;常用配置&lt;/h1&gt;&lt;h2 id=&quot;profile配置实现动态切换环境&quot;&gt;&lt;a href=&quot;#profile配置实现动态切换环境&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Java" scheme="https://blog.yahyav2rayssr.top/categories/Java/"/>
    
    <category term="maven" scheme="https://blog.yahyav2rayssr.top/categories/Java/maven/"/>
    
    
    <category term="maven" scheme="https://blog.yahyav2rayssr.top/tags/maven/"/>
    
  </entry>
  
</feed>
